{"version":3,"file":"js/chunk-vendors.bc299765.js","mappings":"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","sources":["webpack://convert-currencies-eclipse/./node_modules/core-js/internals/a-callable.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/a-possible-prototype.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/an-instance.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/an-object.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/array-includes.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/array-set-length.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/classof-raw.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/classof.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/create-property-descriptor.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/define-built-in.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/define-global-property.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/delete-property-or-throw.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/descriptors.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/document-all.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/document-create-element.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/dom-exception-constants.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/engine-user-agent.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/engine-v8-version.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/enum-bug-keys.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/error-stack-clear.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/export.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/fails.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/function-bind-native.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/function-call.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/function-name.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/function-uncurry-this.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/get-built-in.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/get-method.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/global.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/has-own-property.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/hidden-keys.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/ie8-dom-define.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/indexed-object.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/inherit-if-required.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/inspect-source.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/internal-state.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-array.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-callable.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-forced.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-null-or-undefined.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-object.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-pure.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/is-symbol.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/length-of-array-like.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/make-built-in.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/math-trunc.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/normalize-string-argument.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-define-property.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-keys-internal.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/own-keys.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/require-object-coercible.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/shared-key.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/shared-store.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/shared.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/symbol-constructor-detection.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-absolute-index.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-indexed-object.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-length.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-object.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-primitive.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-property-key.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-string-tag-support.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/to-string.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/try-to-string.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/uid.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/weak-map-basic-detection.js","webpack://convert-currencies-eclipse/./node_modules/core-js/internals/well-known-symbol.js","webpack://convert-currencies-eclipse/./node_modules/core-js/modules/es.array.push.js","webpack://convert-currencies-eclipse/./node_modules/core-js/modules/es.array.unshift.js","webpack://convert-currencies-eclipse/./node_modules/core-js/modules/web.dom-exception.stack.js","webpack://convert-currencies-eclipse/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://convert-currencies-eclipse/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://convert-currencies-eclipse/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://convert-currencies-eclipse/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://convert-currencies-eclipse/./node_modules/form-data/lib/browser.js","webpack://convert-currencies-eclipse/../src/AsyncSubject.ts","webpack://convert-currencies-eclipse/../src/BehaviorSubject.ts","webpack://convert-currencies-eclipse/../src/InnerSubscriber.ts","webpack://convert-currencies-eclipse/../src/Notification.ts","webpack://convert-currencies-eclipse/../src/Observable.ts","webpack://convert-currencies-eclipse/../src/Observer.ts","webpack://convert-currencies-eclipse/../src/OuterSubscriber.ts","webpack://convert-currencies-eclipse/../src/ReplaySubject.ts","webpack://convert-currencies-eclipse/../src/Rx.ts","webpack://convert-currencies-eclipse/../src/Scheduler.ts","webpack://convert-currencies-eclipse/../src/Subject.ts","webpack://convert-currencies-eclipse/../src/SubjectSubscription.ts","webpack://convert-currencies-eclipse/../src/Subscriber.ts","webpack://convert-currencies-eclipse/../src/Subscription.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/bindCallback.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/bindNodeCallback.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/combineLatest.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/concat.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/defer.ts","webpack://convert-currencies-eclipse/../../../../src/add/observable/dom/ajax.ts","webpack://convert-currencies-eclipse/../../../../src/add/observable/dom/webSocket.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/empty.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/forkJoin.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/from.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/fromEvent.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/fromEventPattern.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/fromPromise.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/generate.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/if.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/interval.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/merge.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/never.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/of.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/onErrorResumeNext.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/pairs.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/race.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/range.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/throw.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/timer.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/using.ts","webpack://convert-currencies-eclipse/../../../src/add/observable/zip.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/audit.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/auditTime.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/buffer.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/bufferCount.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/bufferTime.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/bufferToggle.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/bufferWhen.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/catch.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/combineAll.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/combineLatest.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/concat.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/concatAll.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/concatMap.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/concatMapTo.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/count.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/debounce.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/debounceTime.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/defaultIfEmpty.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/delay.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/delayWhen.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/dematerialize.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/distinct.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/distinctUntilChanged.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/distinctUntilKeyChanged.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/do.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/elementAt.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/every.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/exhaust.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/exhaustMap.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/expand.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/filter.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/finally.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/find.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/findIndex.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/first.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/groupBy.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/ignoreElements.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/isEmpty.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/last.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/let.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/map.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/mapTo.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/materialize.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/max.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/merge.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/mergeAll.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/mergeMap.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/mergeMapTo.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/mergeScan.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/min.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/multicast.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/observeOn.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/onErrorResumeNext.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/pairwise.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/partition.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/pluck.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/publish.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/publishBehavior.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/publishLast.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/publishReplay.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/race.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/reduce.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/repeat.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/repeatWhen.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/retry.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/retryWhen.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/sample.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/sampleTime.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/scan.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/sequenceEqual.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/share.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/shareReplay.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/single.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/skip.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/skipLast.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/skipUntil.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/skipWhile.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/startWith.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/subscribeOn.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/switch.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/switchMap.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/switchMapTo.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/take.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/takeLast.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/takeUntil.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/takeWhile.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/throttle.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/throttleTime.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/timeInterval.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/timeout.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/timeoutWith.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/timestamp.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/toArray.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/window.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/windowCount.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/windowTime.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/windowToggle.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/windowWhen.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/withLatestFrom.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/zip.ts","webpack://convert-currencies-eclipse/../../../src/add/operator/zipAll.ts","webpack://convert-currencies-eclipse/../../src/observable/ArrayLikeObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/ArrayObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/BoundCallbackObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/BoundNodeCallbackObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/ConnectableObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/DeferObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/EmptyObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/ErrorObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/ForkJoinObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/FromEventObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/FromEventPatternObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/FromObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/GenerateObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/IfObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/IntervalObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/IteratorObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/NeverObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/PairsObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/PromiseObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/RangeObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/ScalarObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/SubscribeOnObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/TimerObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/UsingObservable.ts","webpack://convert-currencies-eclipse/../../src/observable/bindCallback.ts","webpack://convert-currencies-eclipse/../../src/observable/bindNodeCallback.ts","webpack://convert-currencies-eclipse/../../src/observable/combineLatest.ts","webpack://convert-currencies-eclipse/../../src/observable/concat.ts","webpack://convert-currencies-eclipse/../../src/observable/defer.ts","webpack://convert-currencies-eclipse/../../../src/observable/dom/AjaxObservable.ts","webpack://convert-currencies-eclipse/../../../src/observable/dom/WebSocketSubject.ts","webpack://convert-currencies-eclipse/../../../src/observable/dom/ajax.ts","webpack://convert-currencies-eclipse/../../../src/observable/dom/webSocket.ts","webpack://convert-currencies-eclipse/../../src/observable/empty.ts","webpack://convert-currencies-eclipse/../../src/observable/forkJoin.ts","webpack://convert-currencies-eclipse/../../src/observable/from.ts","webpack://convert-currencies-eclipse/../../src/observable/fromEvent.ts","webpack://convert-currencies-eclipse/../../src/observable/fromEventPattern.ts","webpack://convert-currencies-eclipse/../../src/observable/fromPromise.ts","webpack://convert-currencies-eclipse/../../src/observable/generate.ts","webpack://convert-currencies-eclipse/../../src/observable/if.ts","webpack://convert-currencies-eclipse/../../src/observable/interval.ts","webpack://convert-currencies-eclipse/../../src/observable/merge.ts","webpack://convert-currencies-eclipse/../../src/observable/never.ts","webpack://convert-currencies-eclipse/../../src/observable/of.ts","webpack://convert-currencies-eclipse/../../src/observable/onErrorResumeNext.ts","webpack://convert-currencies-eclipse/../../src/observable/pairs.ts","webpack://convert-currencies-eclipse/../../src/observable/race.ts","webpack://convert-currencies-eclipse/../../src/observable/range.ts","webpack://convert-currencies-eclipse/../../src/observable/throw.ts","webpack://convert-currencies-eclipse/../../src/observable/timer.ts","webpack://convert-currencies-eclipse/../../src/observable/using.ts","webpack://convert-currencies-eclipse/../../src/observable/zip.ts","webpack://convert-currencies-eclipse/../../src/operator/audit.ts","webpack://convert-currencies-eclipse/../../src/operator/auditTime.ts","webpack://convert-currencies-eclipse/../../src/operator/buffer.ts","webpack://convert-currencies-eclipse/../../src/operator/bufferCount.ts","webpack://convert-currencies-eclipse/../../src/operator/bufferTime.ts","webpack://convert-currencies-eclipse/../../src/operator/bufferToggle.ts","webpack://convert-currencies-eclipse/../../src/operator/bufferWhen.ts","webpack://convert-currencies-eclipse/../../src/operator/catch.ts","webpack://convert-currencies-eclipse/../../src/operator/combineAll.ts","webpack://convert-currencies-eclipse/../../src/operator/combineLatest.ts","webpack://convert-currencies-eclipse/../../src/operator/concat.ts","webpack://convert-currencies-eclipse/../../src/operator/concatAll.ts","webpack://convert-currencies-eclipse/../../src/operator/concatMap.ts","webpack://convert-currencies-eclipse/../../src/operator/concatMapTo.ts","webpack://convert-currencies-eclipse/../../src/operator/count.ts","webpack://convert-currencies-eclipse/../../src/operator/debounce.ts","webpack://convert-currencies-eclipse/../../src/operator/debounceTime.ts","webpack://convert-currencies-eclipse/../../src/operator/defaultIfEmpty.ts","webpack://convert-currencies-eclipse/../../src/operator/delay.ts","webpack://convert-currencies-eclipse/../../src/operator/delayWhen.ts","webpack://convert-currencies-eclipse/../../src/operator/dematerialize.ts","webpack://convert-currencies-eclipse/../../src/operator/distinct.ts","webpack://convert-currencies-eclipse/../../src/operator/distinctUntilChanged.ts","webpack://convert-currencies-eclipse/../../src/operator/distinctUntilKeyChanged.ts","webpack://convert-currencies-eclipse/../../src/operator/do.ts","webpack://convert-currencies-eclipse/../../src/operator/elementAt.ts","webpack://convert-currencies-eclipse/../../src/operator/every.ts","webpack://convert-currencies-eclipse/../../src/operator/exhaust.ts","webpack://convert-currencies-eclipse/../../src/operator/exhaustMap.ts","webpack://convert-currencies-eclipse/../../src/operator/expand.ts","webpack://convert-currencies-eclipse/../../src/operator/filter.ts","webpack://convert-currencies-eclipse/../../src/operator/finally.ts","webpack://convert-currencies-eclipse/../../src/operator/find.ts","webpack://convert-currencies-eclipse/../../src/operator/findIndex.ts","webpack://convert-currencies-eclipse/../../src/operator/first.ts","webpack://convert-currencies-eclipse/../../src/operator/groupBy.ts","webpack://convert-currencies-eclipse/../../src/operator/ignoreElements.ts","webpack://convert-currencies-eclipse/../../src/operator/isEmpty.ts","webpack://convert-currencies-eclipse/../../src/operator/last.ts","webpack://convert-currencies-eclipse/../../src/operator/let.ts","webpack://convert-currencies-eclipse/../../src/operator/map.ts","webpack://convert-currencies-eclipse/../../src/operator/mapTo.ts","webpack://convert-currencies-eclipse/../../src/operator/materialize.ts","webpack://convert-currencies-eclipse/../../src/operator/max.ts","webpack://convert-currencies-eclipse/../../src/operator/merge.ts","webpack://convert-currencies-eclipse/../../src/operator/mergeAll.ts","webpack://convert-currencies-eclipse/../../src/operator/mergeMap.ts","webpack://convert-currencies-eclipse/../../src/operator/mergeMapTo.ts","webpack://convert-currencies-eclipse/../../src/operator/mergeScan.ts","webpack://convert-currencies-eclipse/../../src/operator/min.ts","webpack://convert-currencies-eclipse/../../src/operator/multicast.ts","webpack://convert-currencies-eclipse/../../src/operator/observeOn.ts","webpack://convert-currencies-eclipse/../../src/operator/onErrorResumeNext.ts","webpack://convert-currencies-eclipse/../../src/operator/pairwise.ts","webpack://convert-currencies-eclipse/../../src/operator/partition.ts","webpack://convert-currencies-eclipse/../../src/operator/pluck.ts","webpack://convert-currencies-eclipse/../../src/operator/publish.ts","webpack://convert-currencies-eclipse/../../src/operator/publishBehavior.ts","webpack://convert-currencies-eclipse/../../src/operator/publishLast.ts","webpack://convert-currencies-eclipse/../../src/operator/publishReplay.ts","webpack://convert-currencies-eclipse/../../src/operator/race.ts","webpack://convert-currencies-eclipse/../../src/operator/reduce.ts","webpack://convert-currencies-eclipse/../../src/operator/repeat.ts","webpack://convert-currencies-eclipse/../../src/operator/repeatWhen.ts","webpack://convert-currencies-eclipse/../../src/operator/retry.ts","webpack://convert-currencies-eclipse/../../src/operator/retryWhen.ts","webpack://convert-currencies-eclipse/../../src/operator/sample.ts","webpack://convert-currencies-eclipse/../../src/operator/sampleTime.ts","webpack://convert-currencies-eclipse/../../src/operator/scan.ts","webpack://convert-currencies-eclipse/../../src/operator/sequenceEqual.ts","webpack://convert-currencies-eclipse/../../src/operator/share.ts","webpack://convert-currencies-eclipse/../../src/operator/shareReplay.ts","webpack://convert-currencies-eclipse/../../src/operator/single.ts","webpack://convert-currencies-eclipse/../../src/operator/skip.ts","webpack://convert-currencies-eclipse/../../src/operator/skipLast.ts","webpack://convert-currencies-eclipse/../../src/operator/skipUntil.ts","webpack://convert-currencies-eclipse/../../src/operator/skipWhile.ts","webpack://convert-currencies-eclipse/../../src/operator/startWith.ts","webpack://convert-currencies-eclipse/../../src/operator/subscribeOn.ts","webpack://convert-currencies-eclipse/../../src/operator/switch.ts","webpack://convert-currencies-eclipse/../../src/operator/switchMap.ts","webpack://convert-currencies-eclipse/../../src/operator/switchMapTo.ts","webpack://convert-currencies-eclipse/../../src/operator/take.ts","webpack://convert-currencies-eclipse/../../src/operator/takeLast.ts","webpack://convert-currencies-eclipse/../../src/operator/takeUntil.ts","webpack://convert-currencies-eclipse/../../src/operator/takeWhile.ts","webpack://convert-currencies-eclipse/../../src/operator/throttle.ts","webpack://convert-currencies-eclipse/../../src/operator/throttleTime.ts","webpack://convert-currencies-eclipse/../../src/operator/timeInterval.ts","webpack://convert-currencies-eclipse/../../src/operator/timeout.ts","webpack://convert-currencies-eclipse/../../src/operator/timeoutWith.ts","webpack://convert-currencies-eclipse/../../src/operator/timestamp.ts","webpack://convert-currencies-eclipse/../../src/operator/toArray.ts","webpack://convert-currencies-eclipse/../../src/operator/window.ts","webpack://convert-currencies-eclipse/../../src/operator/windowCount.ts","webpack://convert-currencies-eclipse/../../src/operator/windowTime.ts","webpack://convert-currencies-eclipse/../../src/operator/windowToggle.ts","webpack://convert-currencies-eclipse/../../src/operator/windowWhen.ts","webpack://convert-currencies-eclipse/../../src/operator/withLatestFrom.ts","webpack://convert-currencies-eclipse/../../src/operator/zip.ts","webpack://convert-currencies-eclipse/../../src/operator/zipAll.ts","webpack://convert-currencies-eclipse/../src/operators.ts","webpack://convert-currencies-eclipse/../../src/operators/audit.ts","webpack://convert-currencies-eclipse/../../src/operators/auditTime.ts","webpack://convert-currencies-eclipse/../../src/operators/buffer.ts","webpack://convert-currencies-eclipse/../../src/operators/bufferCount.ts","webpack://convert-currencies-eclipse/../../src/operators/bufferTime.ts","webpack://convert-currencies-eclipse/../../src/operators/bufferToggle.ts","webpack://convert-currencies-eclipse/../../src/operators/bufferWhen.ts","webpack://convert-currencies-eclipse/../../src/operators/catchError.ts","webpack://convert-currencies-eclipse/../../src/operators/combineAll.ts","webpack://convert-currencies-eclipse/../../src/operators/combineLatest.ts","webpack://convert-currencies-eclipse/../../src/operators/concat.ts","webpack://convert-currencies-eclipse/../../src/operators/concatAll.ts","webpack://convert-currencies-eclipse/../../src/operators/concatMap.ts","webpack://convert-currencies-eclipse/../../src/operators/concatMapTo.ts","webpack://convert-currencies-eclipse/../../src/operators/count.ts","webpack://convert-currencies-eclipse/../../src/operators/debounce.ts","webpack://convert-currencies-eclipse/../../src/operators/debounceTime.ts","webpack://convert-currencies-eclipse/../../src/operators/defaultIfEmpty.ts","webpack://convert-currencies-eclipse/../../src/operators/delay.ts","webpack://convert-currencies-eclipse/../../src/operators/delayWhen.ts","webpack://convert-currencies-eclipse/../../src/operators/dematerialize.ts","webpack://convert-currencies-eclipse/../../src/operators/distinct.ts","webpack://convert-currencies-eclipse/../../src/operators/distinctUntilChanged.ts","webpack://convert-currencies-eclipse/../../src/operators/distinctUntilKeyChanged.ts","webpack://convert-currencies-eclipse/../../src/operators/elementAt.ts","webpack://convert-currencies-eclipse/../../src/operators/every.ts","webpack://convert-currencies-eclipse/../../src/operators/exhaust.ts","webpack://convert-currencies-eclipse/../../src/operators/exhaustMap.ts","webpack://convert-currencies-eclipse/../../src/operators/expand.ts","webpack://convert-currencies-eclipse/../../src/operators/filter.ts","webpack://convert-currencies-eclipse/../../src/operators/finalize.ts","webpack://convert-currencies-eclipse/../../src/operators/find.ts","webpack://convert-currencies-eclipse/../../src/operators/findIndex.ts","webpack://convert-currencies-eclipse/../../src/operators/first.ts","webpack://convert-currencies-eclipse/../../src/operators/groupBy.ts","webpack://convert-currencies-eclipse/../../src/operators/ignoreElements.ts","webpack://convert-currencies-eclipse/../../src/operators/isEmpty.ts","webpack://convert-currencies-eclipse/../../src/operators/last.ts","webpack://convert-currencies-eclipse/../../src/operators/map.ts","webpack://convert-currencies-eclipse/../../src/operators/mapTo.ts","webpack://convert-currencies-eclipse/../../src/operators/materialize.ts","webpack://convert-currencies-eclipse/../../src/operators/max.ts","webpack://convert-currencies-eclipse/../../src/operators/merge.ts","webpack://convert-currencies-eclipse/../../src/operators/mergeAll.ts","webpack://convert-currencies-eclipse/../../src/operators/mergeMap.ts","webpack://convert-currencies-eclipse/../../src/operators/mergeMapTo.ts","webpack://convert-currencies-eclipse/../../src/operators/mergeScan.ts","webpack://convert-currencies-eclipse/../../src/operators/min.ts","webpack://convert-currencies-eclipse/../../src/operators/multicast.ts","webpack://convert-currencies-eclipse/../../src/operators/observeOn.ts","webpack://convert-currencies-eclipse/../../src/operators/onErrorResumeNext.ts","webpack://convert-currencies-eclipse/../../src/operators/pairwise.ts","webpack://convert-currencies-eclipse/../../src/operators/partition.ts","webpack://convert-currencies-eclipse/../../src/operators/pluck.ts","webpack://convert-currencies-eclipse/../../src/operators/publish.ts","webpack://convert-currencies-eclipse/../../src/operators/publishBehavior.ts","webpack://convert-currencies-eclipse/../../src/operators/publishLast.ts","webpack://convert-currencies-eclipse/../../src/operators/publishReplay.ts","webpack://convert-currencies-eclipse/../../src/operators/race.ts","webpack://convert-currencies-eclipse/../../src/operators/reduce.ts","webpack://convert-currencies-eclipse/../../src/operators/refCount.ts","webpack://convert-currencies-eclipse/../../src/operators/repeat.ts","webpack://convert-currencies-eclipse/../../src/operators/repeatWhen.ts","webpack://convert-currencies-eclipse/../../src/operators/retry.ts","webpack://convert-currencies-eclipse/../../src/operators/retryWhen.ts","webpack://convert-currencies-eclipse/../../src/operators/sample.ts","webpack://convert-currencies-eclipse/../../src/operators/sampleTime.ts","webpack://convert-currencies-eclipse/../../src/operators/scan.ts","webpack://convert-currencies-eclipse/../../src/operators/sequenceEqual.ts","webpack://convert-currencies-eclipse/../../src/operators/share.ts","webpack://convert-currencies-eclipse/../../src/operators/shareReplay.ts","webpack://convert-currencies-eclipse/../../src/operators/single.ts","webpack://convert-currencies-eclipse/../../src/operators/skip.ts","webpack://convert-currencies-eclipse/../../src/operators/skipLast.ts","webpack://convert-currencies-eclipse/../../src/operators/skipUntil.ts","webpack://convert-currencies-eclipse/../../src/operators/skipWhile.ts","webpack://convert-currencies-eclipse/../../src/operators/startWith.ts","webpack://convert-currencies-eclipse/../../src/operators/subscribeOn.ts","webpack://convert-currencies-eclipse/../../src/operators/switchAll.ts","webpack://convert-currencies-eclipse/../../src/operators/switchMap.ts","webpack://convert-currencies-eclipse/../../src/operators/switchMapTo.ts","webpack://convert-currencies-eclipse/../../src/operators/take.ts","webpack://convert-currencies-eclipse/../../src/operators/takeLast.ts","webpack://convert-currencies-eclipse/../../src/operators/takeUntil.ts","webpack://convert-currencies-eclipse/../../src/operators/takeWhile.ts","webpack://convert-currencies-eclipse/../../src/operators/tap.ts","webpack://convert-currencies-eclipse/../../src/operators/throttle.ts","webpack://convert-currencies-eclipse/../../src/operators/throttleTime.ts","webpack://convert-currencies-eclipse/../../src/operators/timeInterval.ts","webpack://convert-currencies-eclipse/../../src/operators/timeout.ts","webpack://convert-currencies-eclipse/../../src/operators/timeoutWith.ts","webpack://convert-currencies-eclipse/../../src/operators/timestamp.ts","webpack://convert-currencies-eclipse/../../src/operators/toArray.ts","webpack://convert-currencies-eclipse/../../src/operators/window.ts","webpack://convert-currencies-eclipse/../../src/operators/windowCount.ts","webpack://convert-currencies-eclipse/../../src/operators/windowTime.ts","webpack://convert-currencies-eclipse/../../src/operators/windowToggle.ts","webpack://convert-currencies-eclipse/../../src/operators/windowWhen.ts","webpack://convert-currencies-eclipse/../../src/operators/withLatestFrom.ts","webpack://convert-currencies-eclipse/../../src/operators/zip.ts","webpack://convert-currencies-eclipse/../../src/operators/zipAll.ts","webpack://convert-currencies-eclipse/../../src/scheduler/Action.ts","webpack://convert-currencies-eclipse/../../src/scheduler/AnimationFrameAction.ts","webpack://convert-currencies-eclipse/../../src/scheduler/AnimationFrameScheduler.ts","webpack://convert-currencies-eclipse/../../src/scheduler/AsapAction.ts","webpack://convert-currencies-eclipse/../../src/scheduler/AsapScheduler.ts","webpack://convert-currencies-eclipse/../../src/scheduler/AsyncAction.ts","webpack://convert-currencies-eclipse/../../src/scheduler/AsyncScheduler.ts","webpack://convert-currencies-eclipse/../../src/scheduler/QueueAction.ts","webpack://convert-currencies-eclipse/../../src/scheduler/QueueScheduler.ts","webpack://convert-currencies-eclipse/../../src/scheduler/VirtualTimeScheduler.ts","webpack://convert-currencies-eclipse/../../src/scheduler/animationFrame.ts","webpack://convert-currencies-eclipse/../../src/scheduler/asap.ts","webpack://convert-currencies-eclipse/../../src/scheduler/async.ts","webpack://convert-currencies-eclipse/../../src/scheduler/queue.ts","webpack://convert-currencies-eclipse/../../src/symbol/iterator.ts","webpack://convert-currencies-eclipse/../../src/symbol/observable.ts","webpack://convert-currencies-eclipse/../../src/symbol/rxSubscriber.ts","webpack://convert-currencies-eclipse/../../src/testing/ColdObservable.ts","webpack://convert-currencies-eclipse/../../src/testing/HotObservable.ts","webpack://convert-currencies-eclipse/../../src/testing/SubscriptionLog.ts","webpack://convert-currencies-eclipse/../../src/testing/SubscriptionLoggable.ts","webpack://convert-currencies-eclipse/../../src/testing/TestScheduler.ts","webpack://convert-currencies-eclipse/../../src/util/AnimationFrame.ts","webpack://convert-currencies-eclipse/../../src/util/ArgumentOutOfRangeError.ts","webpack://convert-currencies-eclipse/../../src/util/EmptyError.ts","webpack://convert-currencies-eclipse/../../src/util/FastMap.ts","webpack://convert-currencies-eclipse/../../src/util/Immediate.ts","webpack://convert-currencies-eclipse/../../src/util/Map.ts","webpack://convert-currencies-eclipse/../../src/util/MapPolyfill.ts","webpack://convert-currencies-eclipse/../../src/util/ObjectUnsubscribedError.ts","webpack://convert-currencies-eclipse/../../src/util/Set.ts","webpack://convert-currencies-eclipse/../../src/util/TimeoutError.ts","webpack://convert-currencies-eclipse/../../src/util/UnsubscriptionError.ts","webpack://convert-currencies-eclipse/../../src/util/applyMixins.ts","webpack://convert-currencies-eclipse/../../src/util/assign.ts","webpack://convert-currencies-eclipse/../../src/util/errorObject.ts","webpack://convert-currencies-eclipse/../../src/util/identity.ts","webpack://convert-currencies-eclipse/../../src/util/isArray.ts","webpack://convert-currencies-eclipse/../../src/util/isArrayLike.ts","webpack://convert-currencies-eclipse/../../src/util/isDate.ts","webpack://convert-currencies-eclipse/../../src/util/isFunction.ts","webpack://convert-currencies-eclipse/../../src/util/isNumeric.ts","webpack://convert-currencies-eclipse/../../src/util/isObject.ts","webpack://convert-currencies-eclipse/../../src/util/isPromise.ts","webpack://convert-currencies-eclipse/../../src/util/isScheduler.ts","webpack://convert-currencies-eclipse/../../src/util/noop.ts","webpack://convert-currencies-eclipse/../../src/util/not.ts","webpack://convert-currencies-eclipse/../../src/util/pipe.ts","webpack://convert-currencies-eclipse/../../src/util/root.ts","webpack://convert-currencies-eclipse/../../src/util/subscribeToResult.ts","webpack://convert-currencies-eclipse/../../src/util/toSubscriber.ts","webpack://convert-currencies-eclipse/../../src/util/tryCatch.ts","webpack://convert-currencies-eclipse/./node_modules/s-vuex-class/lib/bindings.js","webpack://convert-currencies-eclipse/./node_modules/vue-class-component/dist/vue-class-component.esm-bundler.js","webpack://convert-currencies-eclipse/./node_modules/vue-loader/dist/exportHelper.js","webpack://convert-currencies-eclipse/./node_modules/@vue/devtools-api/lib/esm/env.js","webpack://convert-currencies-eclipse/./node_modules/@vue/devtools-api/lib/esm/const.js","webpack://convert-currencies-eclipse/./node_modules/@vue/devtools-api/lib/esm/time.js","webpack://convert-currencies-eclipse/./node_modules/@vue/devtools-api/lib/esm/proxy.js","webpack://convert-currencies-eclipse/./node_modules/@vue/devtools-api/lib/esm/index.js","webpack://convert-currencies-eclipse/./node_modules/vuex/dist/vuex.esm-bundler.js","webpack://convert-currencies-eclipse/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://convert-currencies-eclipse/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://convert-currencies-eclipse/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://convert-currencies-eclipse/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/bind.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/utils.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/AxiosError.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/env/classes/FormData.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/toFormData.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/buildURL.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/InterceptorManager.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/defaults/transitional.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/platform/browser/index.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/defaults/index.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/transformData.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/cancel/isCancel.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/cancel/CanceledError.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/null.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/settle.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/cookies.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/combineURLs.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/buildFullPath.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/speedometer.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/adapters/xhr.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/adapters/adapters.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/dispatchRequest.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/mergeConfig.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/env/data.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/validator.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/core/Axios.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/cancel/CancelToken.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/spread.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://convert-currencies-eclipse/./node_modules/axios/lib/axios.js","webpack://convert-currencies-eclipse/./node_modules/vue-router/dist/vue-router.mjs"],"sourcesContent":["var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","var isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw $TypeError('Incorrect invocation');\n};\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","module.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar $Error = Error;\nvar replace = uncurryThis(''.replace);\n\nvar TEST = (function (arg) { return String($Error(arg).stack); })('zxcasd');\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nmodule.exports = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    isCallable(NewTarget = dummy.constructor) &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (String(name).slice(0, 7) === 'Symbol(') {\n    name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var toString = require('../internals/to-string');\n\nmodule.exports = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","/* eslint-disable no-proto -- safe */\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.27.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.27.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar SILENT_ON_NON_WRITABLE_LENGTH = !function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: INCORRECT_TO_LENGTH || SILENT_ON_NON_WRITABLE_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\n\n// IE8-\nvar INCORRECT_RESULT = [].unshift(0) !== 1;\n\n// V8 ~ Chrome < 71 and Safari <= 15.4, FF < 23 throws InternalError\nvar SILENT_ON_NON_WRITABLE_LENGTH = !function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).unshift();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\n// `Array.prototype.unshift` method\n// https://tc39.es/ecma262/#sec-array.prototype.unshift\n$({ target: 'Array', proto: true, arity: 1, forced: INCORRECT_RESULT || SILENT_ON_NON_WRITABLE_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  unshift: function unshift(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    if (argCount) {\n      doesNotExceedSafeInteger(len + argCount);\n      var k = len;\n      while (k--) {\n        var to = k + argCount;\n        if (k in O) O[to] = O[k];\n        else deletePropertyOrThrow(O, to);\n      }\n      for (var j = 0; j < argCount; j++) {\n        O[j] = arguments[j];\n      }\n    } return setArrayLength(O, len + argCount);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/error-stack-clear');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar descriptor = NativeDOMException && DESCRIPTORS && Object.getOwnPropertyDescriptor(global, DOM_EXCEPTION);\n\n// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it\n// https://github.com/Jarred-Sumner/bun/issues/399\nvar BUGGY_DESCRIPTOR = !!descriptor && !(descriptor.writable && descriptor.configurable);\n\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","import { extend, isArray, toNumber, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n    console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n    constructor(detached = false) {\n        this.detached = detached;\n        /**\n         * @internal\n         */\n        this.active = true;\n        /**\n         * @internal\n         */\n        this.effects = [];\n        /**\n         * @internal\n         */\n        this.cleanups = [];\n        this.parent = activeEffectScope;\n        if (!detached && activeEffectScope) {\n            this.index =\n                (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;\n        }\n    }\n    run(fn) {\n        if (this.active) {\n            const currentEffectScope = activeEffectScope;\n            try {\n                activeEffectScope = this;\n                return fn();\n            }\n            finally {\n                activeEffectScope = currentEffectScope;\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`cannot run an inactive effect scope.`);\n        }\n    }\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    on() {\n        activeEffectScope = this;\n    }\n    /**\n     * This should only be called on non-detached scopes\n     * @internal\n     */\n    off() {\n        activeEffectScope = this.parent;\n    }\n    stop(fromParent) {\n        if (this.active) {\n            let i, l;\n            for (i = 0, l = this.effects.length; i < l; i++) {\n                this.effects[i].stop();\n            }\n            for (i = 0, l = this.cleanups.length; i < l; i++) {\n                this.cleanups[i]();\n            }\n            if (this.scopes) {\n                for (i = 0, l = this.scopes.length; i < l; i++) {\n                    this.scopes[i].stop(true);\n                }\n            }\n            // nested scope, dereference from parent to avoid memory leaks\n            if (!this.detached && this.parent && !fromParent) {\n                // optimized O(1) removal\n                const last = this.parent.scopes.pop();\n                if (last && last !== this) {\n                    this.parent.scopes[this.index] = last;\n                    last.index = this.index;\n                }\n            }\n            this.parent = undefined;\n            this.active = false;\n        }\n    }\n}\nfunction effectScope(detached) {\n    return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n    if (scope && scope.active) {\n        scope.effects.push(effect);\n    }\n}\nfunction getCurrentScope() {\n    return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n    if (activeEffectScope) {\n        activeEffectScope.cleanups.push(fn);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`onScopeDispose() is called when there is no active effect scope` +\n            ` to be associated with.`);\n    }\n}\n\nconst createDep = (effects) => {\n    const dep = new Set(effects);\n    dep.w = 0;\n    dep.n = 0;\n    return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].w |= trackOpBit; // set was tracked\n        }\n    }\n};\nconst finalizeDepMarkers = (effect) => {\n    const { deps } = effect;\n    if (deps.length) {\n        let ptr = 0;\n        for (let i = 0; i < deps.length; i++) {\n            const dep = deps[i];\n            if (wasTracked(dep) && !newTracked(dep)) {\n                dep.delete(effect);\n            }\n            else {\n                deps[ptr++] = dep;\n            }\n            // clear bits\n            dep.w &= ~trackOpBit;\n            dep.n &= ~trackOpBit;\n        }\n        deps.length = ptr;\n    }\n};\n\nconst targetMap = new WeakMap();\n// The number of effects currently being tracked recursively.\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\n/**\n * The bitwise track markers support at most 30 levels of recursion.\n * This value is chosen to enable modern JS engines to use a SMI on all platforms.\n * When recursion depth is greater, fall back to using a full cleanup.\n */\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\nclass ReactiveEffect {\n    constructor(fn, scheduler = null, scope) {\n        this.fn = fn;\n        this.scheduler = scheduler;\n        this.active = true;\n        this.deps = [];\n        this.parent = undefined;\n        recordEffectScope(this, scope);\n    }\n    run() {\n        if (!this.active) {\n            return this.fn();\n        }\n        let parent = activeEffect;\n        let lastShouldTrack = shouldTrack;\n        while (parent) {\n            if (parent === this) {\n                return;\n            }\n            parent = parent.parent;\n        }\n        try {\n            this.parent = activeEffect;\n            activeEffect = this;\n            shouldTrack = true;\n            trackOpBit = 1 << ++effectTrackDepth;\n            if (effectTrackDepth <= maxMarkerBits) {\n                initDepMarkers(this);\n            }\n            else {\n                cleanupEffect(this);\n            }\n            return this.fn();\n        }\n        finally {\n            if (effectTrackDepth <= maxMarkerBits) {\n                finalizeDepMarkers(this);\n            }\n            trackOpBit = 1 << --effectTrackDepth;\n            activeEffect = this.parent;\n            shouldTrack = lastShouldTrack;\n            this.parent = undefined;\n            if (this.deferStop) {\n                this.stop();\n            }\n        }\n    }\n    stop() {\n        // stopped while running itself - defer the cleanup\n        if (activeEffect === this) {\n            this.deferStop = true;\n        }\n        else if (this.active) {\n            cleanupEffect(this);\n            if (this.onStop) {\n                this.onStop();\n            }\n            this.active = false;\n        }\n    }\n}\nfunction cleanupEffect(effect) {\n    const { deps } = effect;\n    if (deps.length) {\n        for (let i = 0; i < deps.length; i++) {\n            deps[i].delete(effect);\n        }\n        deps.length = 0;\n    }\n}\nfunction effect(fn, options) {\n    if (fn.effect) {\n        fn = fn.effect.fn;\n    }\n    const _effect = new ReactiveEffect(fn);\n    if (options) {\n        extend(_effect, options);\n        if (options.scope)\n            recordEffectScope(_effect, options.scope);\n    }\n    if (!options || !options.lazy) {\n        _effect.run();\n    }\n    const runner = _effect.run.bind(_effect);\n    runner.effect = _effect;\n    return runner;\n}\nfunction stop(runner) {\n    runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = false;\n}\nfunction enableTracking() {\n    trackStack.push(shouldTrack);\n    shouldTrack = true;\n}\nfunction resetTracking() {\n    const last = trackStack.pop();\n    shouldTrack = last === undefined ? true : last;\n}\nfunction track(target, type, key) {\n    if (shouldTrack && activeEffect) {\n        let depsMap = targetMap.get(target);\n        if (!depsMap) {\n            targetMap.set(target, (depsMap = new Map()));\n        }\n        let dep = depsMap.get(key);\n        if (!dep) {\n            depsMap.set(key, (dep = createDep()));\n        }\n        const eventInfo = (process.env.NODE_ENV !== 'production')\n            ? { effect: activeEffect, target, type, key }\n            : undefined;\n        trackEffects(dep, eventInfo);\n    }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n    let shouldTrack = false;\n    if (effectTrackDepth <= maxMarkerBits) {\n        if (!newTracked(dep)) {\n            dep.n |= trackOpBit; // set newly tracked\n            shouldTrack = !wasTracked(dep);\n        }\n    }\n    else {\n        // Full cleanup mode.\n        shouldTrack = !dep.has(activeEffect);\n    }\n    if (shouldTrack) {\n        dep.add(activeEffect);\n        activeEffect.deps.push(dep);\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.onTrack) {\n            activeEffect.onTrack(Object.assign({ effect: activeEffect }, debuggerEventExtraInfo));\n        }\n    }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n    const depsMap = targetMap.get(target);\n    if (!depsMap) {\n        // never been tracked\n        return;\n    }\n    let deps = [];\n    if (type === \"clear\" /* TriggerOpTypes.CLEAR */) {\n        // collection being cleared\n        // trigger all effects for target\n        deps = [...depsMap.values()];\n    }\n    else if (key === 'length' && isArray(target)) {\n        const newLength = toNumber(newValue);\n        depsMap.forEach((dep, key) => {\n            if (key === 'length' || key >= newLength) {\n                deps.push(dep);\n            }\n        });\n    }\n    else {\n        // schedule runs for SET | ADD | DELETE\n        if (key !== void 0) {\n            deps.push(depsMap.get(key));\n        }\n        // also run for iteration key on ADD | DELETE | Map.SET\n        switch (type) {\n            case \"add\" /* TriggerOpTypes.ADD */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                else if (isIntegerKey(key)) {\n                    // new index added to array -> length changes\n                    deps.push(depsMap.get('length'));\n                }\n                break;\n            case \"delete\" /* TriggerOpTypes.DELETE */:\n                if (!isArray(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                    if (isMap(target)) {\n                        deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n                    }\n                }\n                break;\n            case \"set\" /* TriggerOpTypes.SET */:\n                if (isMap(target)) {\n                    deps.push(depsMap.get(ITERATE_KEY));\n                }\n                break;\n        }\n    }\n    const eventInfo = (process.env.NODE_ENV !== 'production')\n        ? { target, type, key, newValue, oldValue, oldTarget }\n        : undefined;\n    if (deps.length === 1) {\n        if (deps[0]) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                triggerEffects(deps[0], eventInfo);\n            }\n            else {\n                triggerEffects(deps[0]);\n            }\n        }\n    }\n    else {\n        const effects = [];\n        for (const dep of deps) {\n            if (dep) {\n                effects.push(...dep);\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            triggerEffects(createDep(effects), eventInfo);\n        }\n        else {\n            triggerEffects(createDep(effects));\n        }\n    }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n    // spread into array for stabilization\n    const effects = isArray(dep) ? dep : [...dep];\n    for (const effect of effects) {\n        if (effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n    for (const effect of effects) {\n        if (!effect.computed) {\n            triggerEffect(effect, debuggerEventExtraInfo);\n        }\n    }\n}\nfunction triggerEffect(effect, debuggerEventExtraInfo) {\n    if (effect !== activeEffect || effect.allowRecurse) {\n        if ((process.env.NODE_ENV !== 'production') && effect.onTrigger) {\n            effect.onTrigger(extend({ effect }, debuggerEventExtraInfo));\n        }\n        if (effect.scheduler) {\n            effect.scheduler();\n        }\n        else {\n            effect.run();\n        }\n    }\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n/*#__PURE__*/\nObject.getOwnPropertyNames(Symbol)\n    // ios10.x Object.getOwnPropertyNames(Symbol) can enumerate 'arguments' and 'caller'\n    // but accessing them on Symbol leads to TypeError because Symbol is a strict mode\n    // function\n    .filter(key => key !== 'arguments' && key !== 'caller')\n    .map(key => Symbol[key])\n    .filter(isSymbol));\nconst get = /*#__PURE__*/ createGetter();\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n    const instrumentations = {};\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            const arr = toRaw(this);\n            for (let i = 0, l = this.length; i < l; i++) {\n                track(arr, \"get\" /* TrackOpTypes.GET */, i + '');\n            }\n            // we run the method using the original args first (which may be reactive)\n            const res = arr[key](...args);\n            if (res === -1 || res === false) {\n                // if that didn't work, run it again using raw values.\n                return arr[key](...args.map(toRaw));\n            }\n            else {\n                return res;\n            }\n        };\n    });\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\n        instrumentations[key] = function (...args) {\n            pauseTracking();\n            const res = toRaw(this)[key].apply(this, args);\n            resetTracking();\n            return res;\n        };\n    });\n    return instrumentations;\n}\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === \"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */) {\n            return shallow;\n        }\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */ &&\n            receiver ===\n                (isReadonly\n                    ? shallow\n                        ? shallowReadonlyMap\n                        : readonlyMap\n                    : shallow\n                        ? shallowReactiveMap\n                        : reactiveMap).get(target)) {\n            return target;\n        }\n        const targetIsArray = isArray(target);\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\n            return Reflect.get(arrayInstrumentations, key, receiver);\n        }\n        const res = Reflect.get(target, key, receiver);\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n            return res;\n        }\n        if (!isReadonly) {\n            track(target, \"get\" /* TrackOpTypes.GET */, key);\n        }\n        if (shallow) {\n            return res;\n        }\n        if (isRef(res)) {\n            // ref unwrapping - skip unwrap for Array + integer key.\n            return targetIsArray && isIntegerKey(key) ? res : res.value;\n        }\n        if (isObject(res)) {\n            // Convert returned value into a proxy as well. we do the isObject check\n            // here to avoid invalid value warning. Also need to lazy access readonly\n            // and reactive here to avoid circular dependency.\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        return res;\n    };\n}\nconst set = /*#__PURE__*/ createSetter();\nconst shallowSet = /*#__PURE__*/ createSetter(true);\nfunction createSetter(shallow = false) {\n    return function set(target, key, value, receiver) {\n        let oldValue = target[key];\n        if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n            return false;\n        }\n        if (!shallow) {\n            if (!isShallow(value) && !isReadonly(value)) {\n                oldValue = toRaw(oldValue);\n                value = toRaw(value);\n            }\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n                oldValue.value = value;\n                return true;\n            }\n        }\n        const hadKey = isArray(target) && isIntegerKey(key)\n            ? Number(key) < target.length\n            : hasOwn(target, key);\n        const result = Reflect.set(target, key, value, receiver);\n        // don't trigger if target is something up in the prototype chain of original\n        if (target === toRaw(receiver)) {\n            if (!hadKey) {\n                trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\n            }\n            else if (hasChanged(value, oldValue)) {\n                trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\n            }\n        }\n        return result;\n    };\n}\nfunction deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n        track(target, \"has\" /* TrackOpTypes.HAS */, key);\n    }\n    return result;\n}\nfunction ownKeys(target) {\n    track(target, \"iterate\" /* TrackOpTypes.ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\n    return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n    get,\n    set,\n    deleteProperty,\n    has,\n    ownKeys\n};\nconst readonlyHandlers = {\n    get: readonlyGet,\n    set(target, key) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    },\n    deleteProperty(target, key) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\n        }\n        return true;\n    }\n};\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\n    get: shallowGet,\n    set: shallowSet\n});\n// Props handlers are special in the sense that it should not unwrap top-level\n// refs (in order to allow refs to be explicitly passed down), but should\n// retain the reactivity of the normal readonly object.\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\n    get: shallowReadonlyGet\n});\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\n    // of the value\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, \"get\" /* TrackOpTypes.GET */, key);\n        }\n        track(rawTarget, \"get\" /* TrackOpTypes.GET */, rawKey);\n    }\n    const { has } = getProto(rawTarget);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    if (has.call(rawTarget, key)) {\n        return wrap(target.get(key));\n    }\n    else if (has.call(rawTarget, rawKey)) {\n        return wrap(target.get(rawKey));\n    }\n    else if (target !== rawTarget) {\n        // #3602 readonly(reactive(Map))\n        // ensure that the nested reactive `Map` can do tracking for itself\n        target.get(key);\n    }\n}\nfunction has$1(key, isReadonly = false) {\n    const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\n    const rawTarget = toRaw(target);\n    const rawKey = toRaw(key);\n    if (!isReadonly) {\n        if (key !== rawKey) {\n            track(rawTarget, \"has\" /* TrackOpTypes.HAS */, key);\n        }\n        track(rawTarget, \"has\" /* TrackOpTypes.HAS */, rawKey);\n    }\n    return key === rawKey\n        ? target.has(key)\n        : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n    target = target[\"__v_raw\" /* ReactiveFlags.RAW */];\n    !isReadonly && track(toRaw(target), \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n    return Reflect.get(target, 'size', target);\n}\nfunction add(value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const proto = getProto(target);\n    const hadKey = proto.has.call(target, value);\n    if (!hadKey) {\n        target.add(value);\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, value, value);\n    }\n    return this;\n}\nfunction set$1(key, value) {\n    value = toRaw(value);\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get.call(target, key);\n    target.set(key, value);\n    if (!hadKey) {\n        trigger(target, \"add\" /* TriggerOpTypes.ADD */, key, value);\n    }\n    else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\" /* TriggerOpTypes.SET */, key, value, oldValue);\n    }\n    return this;\n}\nfunction deleteEntry(key) {\n    const target = toRaw(this);\n    const { has, get } = getProto(target);\n    let hadKey = has.call(target, key);\n    if (!hadKey) {\n        key = toRaw(key);\n        hadKey = has.call(target, key);\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        checkIdentityKeys(target, has, key);\n    }\n    const oldValue = get ? get.call(target, key) : undefined;\n    // forward the operation before queueing reactions\n    const result = target.delete(key);\n    if (hadKey) {\n        trigger(target, \"delete\" /* TriggerOpTypes.DELETE */, key, undefined, oldValue);\n    }\n    return result;\n}\nfunction clear() {\n    const target = toRaw(this);\n    const hadItems = target.size !== 0;\n    const oldTarget = (process.env.NODE_ENV !== 'production')\n        ? isMap(target)\n            ? new Map(target)\n            : new Set(target)\n        : undefined;\n    // forward the operation before queueing reactions\n    const result = target.clear();\n    if (hadItems) {\n        trigger(target, \"clear\" /* TriggerOpTypes.CLEAR */, undefined, undefined, oldTarget);\n    }\n    return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n    return function forEach(callback, thisArg) {\n        const observed = this;\n        const target = observed[\"__v_raw\" /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly && track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, ITERATE_KEY);\n        return target.forEach((value, key) => {\n            // important: make sure the callback is\n            // 1. invoked with the reactive map as `this` and 3rd arg\n            // 2. the value received should be a corresponding reactive/readonly.\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\n        });\n    };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n    return function (...args) {\n        const target = this[\"__v_raw\" /* ReactiveFlags.RAW */];\n        const rawTarget = toRaw(target);\n        const targetIsMap = isMap(rawTarget);\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\n        const isKeyOnly = method === 'keys' && targetIsMap;\n        const innerIterator = target[method](...args);\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n        !isReadonly &&\n            track(rawTarget, \"iterate\" /* TrackOpTypes.ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\n        // return a wrapped iterator which returns observed versions of the\n        // values emitted from the real iterator\n        return {\n            // iterator protocol\n            next() {\n                const { value, done } = innerIterator.next();\n                return done\n                    ? { value, done }\n                    : {\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n                        done\n                    };\n            },\n            // iterable protocol\n            [Symbol.iterator]() {\n                return this;\n            }\n        };\n    };\n}\nfunction createReadonlyMethod(type) {\n    return function (...args) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\n        }\n        return type === \"delete\" /* TriggerOpTypes.DELETE */ ? false : this;\n    };\n}\nfunction createInstrumentations() {\n    const mutableInstrumentations = {\n        get(key) {\n            return get$1(this, key);\n        },\n        get size() {\n            return size(this);\n        },\n        has: has$1,\n        add,\n        set: set$1,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, false)\n    };\n    const shallowInstrumentations = {\n        get(key) {\n            return get$1(this, key, false, true);\n        },\n        get size() {\n            return size(this);\n        },\n        has: has$1,\n        add,\n        set: set$1,\n        delete: deleteEntry,\n        clear,\n        forEach: createForEach(false, true)\n    };\n    const readonlyInstrumentations = {\n        get(key) {\n            return get$1(this, key, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has$1.call(this, key, true);\n        },\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, false)\n    };\n    const shallowReadonlyInstrumentations = {\n        get(key) {\n            return get$1(this, key, true, true);\n        },\n        get size() {\n            return size(this, true);\n        },\n        has(key) {\n            return has$1.call(this, key, true);\n        },\n        add: createReadonlyMethod(\"add\" /* TriggerOpTypes.ADD */),\n        set: createReadonlyMethod(\"set\" /* TriggerOpTypes.SET */),\n        delete: createReadonlyMethod(\"delete\" /* TriggerOpTypes.DELETE */),\n        clear: createReadonlyMethod(\"clear\" /* TriggerOpTypes.CLEAR */),\n        forEach: createForEach(true, true)\n    };\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\n    iteratorMethods.forEach(method => {\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\n    });\n    return [\n        mutableInstrumentations,\n        readonlyInstrumentations,\n        shallowInstrumentations,\n        shallowReadonlyInstrumentations\n    ];\n}\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n    const instrumentations = shallow\n        ? isReadonly\n            ? shallowReadonlyInstrumentations\n            : shallowInstrumentations\n        : isReadonly\n            ? readonlyInstrumentations\n            : mutableInstrumentations;\n    return (target, key, receiver) => {\n        if (key === \"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */) {\n            return !isReadonly;\n        }\n        else if (key === \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */) {\n            return isReadonly;\n        }\n        else if (key === \"__v_raw\" /* ReactiveFlags.RAW */) {\n            return target;\n        }\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\n            ? instrumentations\n            : target, key, receiver);\n    };\n}\nconst mutableCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has, key) {\n    const rawKey = toRaw(key);\n    if (rawKey !== key && has.call(target, rawKey)) {\n        const type = toRawType(target);\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\n            `which can lead to inconsistencies. ` +\n            `Avoid differentiating between the raw and reactive versions ` +\n            `of an object and only use the reactive version if possible.`);\n    }\n}\n\nconst reactiveMap = new WeakMap();\nconst shallowReactiveMap = new WeakMap();\nconst readonlyMap = new WeakMap();\nconst shallowReadonlyMap = new WeakMap();\nfunction targetTypeMap(rawType) {\n    switch (rawType) {\n        case 'Object':\n        case 'Array':\n            return 1 /* TargetType.COMMON */;\n        case 'Map':\n        case 'Set':\n        case 'WeakMap':\n        case 'WeakSet':\n            return 2 /* TargetType.COLLECTION */;\n        default:\n            return 0 /* TargetType.INVALID */;\n    }\n}\nfunction getTargetType(value) {\n    return value[\"__v_skip\" /* ReactiveFlags.SKIP */] || !Object.isExtensible(value)\n        ? 0 /* TargetType.INVALID */\n        : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n    // if trying to observe a readonly proxy, return the readonly version.\n    if (isReadonly(target)) {\n        return target;\n    }\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\n}\n/**\n * Return a shallowly-reactive copy of the original object, where only the root\n * level properties are reactive. It also does not auto-unwrap refs (even at the\n * root level).\n */\nfunction shallowReactive(target) {\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\n}\n/**\n * Creates a readonly copy of the original object. Note the returned copy is not\n * made reactive, but `readonly` can be called on an already reactive object.\n */\nfunction readonly(target) {\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\n}\n/**\n * Returns a reactive-copy of the original object, where only the root level\n * properties are readonly, and does NOT unwrap refs nor recursively convert\n * returned properties.\n * This is used for creating the props proxy object for stateful components.\n */\nfunction shallowReadonly(target) {\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\n}\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\n    if (!isObject(target)) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            console.warn(`value cannot be made reactive: ${String(target)}`);\n        }\n        return target;\n    }\n    // target is already a Proxy, return it.\n    // exception: calling readonly() on a reactive object\n    if (target[\"__v_raw\" /* ReactiveFlags.RAW */] &&\n        !(isReadonly && target[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */])) {\n        return target;\n    }\n    // target already has corresponding Proxy\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        return existingProxy;\n    }\n    // only specific value types can be observed.\n    const targetType = getTargetType(target);\n    if (targetType === 0 /* TargetType.INVALID */) {\n        return target;\n    }\n    const proxy = new Proxy(target, targetType === 2 /* TargetType.COLLECTION */ ? collectionHandlers : baseHandlers);\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nfunction isReactive(value) {\n    if (isReadonly(value)) {\n        return isReactive(value[\"__v_raw\" /* ReactiveFlags.RAW */]);\n    }\n    return !!(value && value[\"__v_isReactive\" /* ReactiveFlags.IS_REACTIVE */]);\n}\nfunction isReadonly(value) {\n    return !!(value && value[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */]);\n}\nfunction isShallow(value) {\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\n}\nfunction isProxy(value) {\n    return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n    const raw = observed && observed[\"__v_raw\" /* ReactiveFlags.RAW */];\n    return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n    def(value, \"__v_skip\" /* ReactiveFlags.SKIP */, true);\n    return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref) {\n    if (shouldTrack && activeEffect) {\n        ref = toRaw(ref);\n        if ((process.env.NODE_ENV !== 'production')) {\n            trackEffects(ref.dep || (ref.dep = createDep()), {\n                target: ref,\n                type: \"get\" /* TrackOpTypes.GET */,\n                key: 'value'\n            });\n        }\n        else {\n            trackEffects(ref.dep || (ref.dep = createDep()));\n        }\n    }\n}\nfunction triggerRefValue(ref, newVal) {\n    ref = toRaw(ref);\n    if (ref.dep) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            triggerEffects(ref.dep, {\n                target: ref,\n                type: \"set\" /* TriggerOpTypes.SET */,\n                key: 'value',\n                newValue: newVal\n            });\n        }\n        else {\n            triggerEffects(ref.dep);\n        }\n    }\n}\nfunction isRef(r) {\n    return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n    return createRef(value, false);\n}\nfunction shallowRef(value) {\n    return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n    if (isRef(rawValue)) {\n        return rawValue;\n    }\n    return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n    constructor(value, __v_isShallow) {\n        this.__v_isShallow = __v_isShallow;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this._rawValue = __v_isShallow ? value : toRaw(value);\n        this._value = __v_isShallow ? value : toReactive(value);\n    }\n    get value() {\n        trackRefValue(this);\n        return this._value;\n    }\n    set value(newVal) {\n        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n        newVal = useDirectValue ? newVal : toRaw(newVal);\n        if (hasChanged(newVal, this._rawValue)) {\n            this._rawValue = newVal;\n            this._value = useDirectValue ? newVal : toReactive(newVal);\n            triggerRefValue(this, newVal);\n        }\n    }\n}\nfunction triggerRef(ref) {\n    triggerRefValue(ref, (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\n}\nfunction unref(ref) {\n    return isRef(ref) ? ref.value : ref;\n}\nconst shallowUnwrapHandlers = {\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n    set: (target, key, value, receiver) => {\n        const oldValue = target[key];\n        if (isRef(oldValue) && !isRef(value)) {\n            oldValue.value = value;\n            return true;\n        }\n        else {\n            return Reflect.set(target, key, value, receiver);\n        }\n    }\n};\nfunction proxyRefs(objectWithRefs) {\n    return isReactive(objectWithRefs)\n        ? objectWithRefs\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n    constructor(factory) {\n        this.dep = undefined;\n        this.__v_isRef = true;\n        const { get, set } = factory(() => trackRefValue(this), () => triggerRefValue(this));\n        this._get = get;\n        this._set = set;\n    }\n    get value() {\n        return this._get();\n    }\n    set value(newVal) {\n        this._set(newVal);\n    }\n}\nfunction customRef(factory) {\n    return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\n    }\n    const ret = isArray(object) ? new Array(object.length) : {};\n    for (const key in object) {\n        ret[key] = toRef(object, key);\n    }\n    return ret;\n}\nclass ObjectRefImpl {\n    constructor(_object, _key, _defaultValue) {\n        this._object = _object;\n        this._key = _key;\n        this._defaultValue = _defaultValue;\n        this.__v_isRef = true;\n    }\n    get value() {\n        const val = this._object[this._key];\n        return val === undefined ? this._defaultValue : val;\n    }\n    set value(newVal) {\n        this._object[this._key] = newVal;\n    }\n}\nfunction toRef(object, key, defaultValue) {\n    const val = object[key];\n    return isRef(val)\n        ? val\n        : new ObjectRefImpl(object, key, defaultValue);\n}\n\nvar _a;\nclass ComputedRefImpl {\n    constructor(getter, _setter, isReadonly, isSSR) {\n        this._setter = _setter;\n        this.dep = undefined;\n        this.__v_isRef = true;\n        this[_a] = false;\n        this._dirty = true;\n        this.effect = new ReactiveEffect(getter, () => {\n            if (!this._dirty) {\n                this._dirty = true;\n                triggerRefValue(this);\n            }\n        });\n        this.effect.computed = this;\n        this.effect.active = this._cacheable = !isSSR;\n        this[\"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */] = isReadonly;\n    }\n    get value() {\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        const self = toRaw(this);\n        trackRefValue(self);\n        if (self._dirty || !self._cacheable) {\n            self._dirty = false;\n            self._value = self.effect.run();\n        }\n        return self._value;\n    }\n    set value(newValue) {\n        this._setter(newValue);\n    }\n}\n_a = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n    let getter;\n    let setter;\n    const onlyGetter = isFunction(getterOrOptions);\n    if (onlyGetter) {\n        getter = getterOrOptions;\n        setter = (process.env.NODE_ENV !== 'production')\n            ? () => {\n                console.warn('Write operation failed: computed value is readonly');\n            }\n            : NOOP;\n    }\n    else {\n        getter = getterOrOptions.get;\n        setter = getterOrOptions.set;\n    }\n    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n    if ((process.env.NODE_ENV !== 'production') && debugOptions && !isSSR) {\n        cRef.effect.onTrack = debugOptions.onTrack;\n        cRef.effect.onTrigger = debugOptions.onTrigger;\n    }\n    return cRef;\n}\n\nvar _a$1;\nconst tick = /*#__PURE__*/ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n    queue.push(fn);\n    if (!queued) {\n        queued = true;\n        tick.then(flush);\n    }\n};\nconst flush = () => {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i]();\n    }\n    queue.length = 0;\n    queued = false;\n};\nclass DeferredComputedRefImpl {\n    constructor(getter) {\n        this.dep = undefined;\n        this._dirty = true;\n        this.__v_isRef = true;\n        this[_a$1] = true;\n        let compareTarget;\n        let hasCompareTarget = false;\n        let scheduled = false;\n        this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n            if (this.dep) {\n                if (computedTrigger) {\n                    compareTarget = this._value;\n                    hasCompareTarget = true;\n                }\n                else if (!scheduled) {\n                    const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n                    scheduled = true;\n                    hasCompareTarget = false;\n                    scheduler(() => {\n                        if (this.effect.active && this._get() !== valueToCompare) {\n                            triggerRefValue(this);\n                        }\n                        scheduled = false;\n                    });\n                }\n                // chained upstream computeds are notified synchronously to ensure\n                // value invalidation in case of sync access; normal effects are\n                // deferred to be triggered in scheduler.\n                for (const e of this.dep) {\n                    if (e.computed instanceof DeferredComputedRefImpl) {\n                        e.scheduler(true /* computedTrigger */);\n                    }\n                }\n            }\n            this._dirty = true;\n        });\n        this.effect.computed = this;\n    }\n    _get() {\n        if (this._dirty) {\n            this._dirty = false;\n            return (this._value = this.effect.run());\n        }\n        return this._value;\n    }\n    get value() {\n        trackRefValue(this);\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\n        return toRaw(this)._get();\n    }\n}\n_a$1 = \"__v_isReadonly\" /* ReactiveFlags.IS_READONLY */;\nfunction deferredComputed(getter) {\n    return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isShallow as isShallow$1, isReactive, ReactiveEffect, ref, shallowReadonly, track, reactive, shallowReactive, trigger, isProxy, EffectScope, markRaw, proxyRefs, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isObject, isOn, hasOwn, isModelListener, hasChanged, remove, isSet, isMap, isPlainObject, invokeArrayFns, isBuiltInDirective, capitalize, isGloballyWhitelisted, def, isReservedProp, EMPTY_ARR, toRawType, makeMap, NO, normalizeClass, normalizeStyle } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n    stack.push(vnode);\n}\nfunction popWarningContext() {\n    stack.pop();\n}\nfunction warn(msg, ...args) {\n    if (!(process.env.NODE_ENV !== 'production'))\n        return;\n    // avoid props formatting or warn handler tracking deps that might be mutated\n    // during patch, leading to infinite recursion.\n    pauseTracking();\n    const instance = stack.length ? stack[stack.length - 1].component : null;\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\n    const trace = getComponentTrace();\n    if (appWarnHandler) {\n        callWithErrorHandling(appWarnHandler, instance, 11 /* ErrorCodes.APP_WARN_HANDLER */, [\n            msg + args.join(''),\n            instance && instance.proxy,\n            trace\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\n                .join('\\n'),\n            trace\n        ]);\n    }\n    else {\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n        /* istanbul ignore if */\n        if (trace.length &&\n            // avoid spamming console during tests\n            !false) {\n            warnArgs.push(`\\n`, ...formatTrace(trace));\n        }\n        console.warn(...warnArgs);\n    }\n    resetTracking();\n}\nfunction getComponentTrace() {\n    let currentVNode = stack[stack.length - 1];\n    if (!currentVNode) {\n        return [];\n    }\n    // we can't just use the stack because it will be incomplete during updates\n    // that did not start from the root. Re-construct the parent chain using\n    // instance parent pointers.\n    const normalizedStack = [];\n    while (currentVNode) {\n        const last = normalizedStack[0];\n        if (last && last.vnode === currentVNode) {\n            last.recurseCount++;\n        }\n        else {\n            normalizedStack.push({\n                vnode: currentVNode,\n                recurseCount: 0\n            });\n        }\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\n        currentVNode = parentInstance && parentInstance.vnode;\n    }\n    return normalizedStack;\n}\n/* istanbul ignore next */\nfunction formatTrace(trace) {\n    const logs = [];\n    trace.forEach((entry, i) => {\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\n    });\n    return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\n    const close = `>` + postfix;\n    return vnode.props\n        ? [open, ...formatProps(vnode.props), close]\n        : [open + close];\n}\n/* istanbul ignore next */\nfunction formatProps(props) {\n    const res = [];\n    const keys = Object.keys(props);\n    keys.slice(0, 3).forEach(key => {\n        res.push(...formatProp(key, props[key]));\n    });\n    if (keys.length > 3) {\n        res.push(` ...`);\n    }\n    return res;\n}\n/* istanbul ignore next */\nfunction formatProp(key, value, raw) {\n    if (isString(value)) {\n        value = JSON.stringify(value);\n        return raw ? value : [`${key}=${value}`];\n    }\n    else if (typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        value == null) {\n        return raw ? value : [`${key}=${value}`];\n    }\n    else if (isRef(value)) {\n        value = formatProp(key, toRaw(value.value), true);\n        return raw ? value : [`${key}=Ref<`, value, `>`];\n    }\n    else if (isFunction(value)) {\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n    }\n    else {\n        value = toRaw(value);\n        return raw ? value : [`${key}=`, value];\n    }\n}\n\nconst ErrorTypeStrings = {\n    [\"sp\" /* LifecycleHooks.SERVER_PREFETCH */]: 'serverPrefetch hook',\n    [\"bc\" /* LifecycleHooks.BEFORE_CREATE */]: 'beforeCreate hook',\n    [\"c\" /* LifecycleHooks.CREATED */]: 'created hook',\n    [\"bm\" /* LifecycleHooks.BEFORE_MOUNT */]: 'beforeMount hook',\n    [\"m\" /* LifecycleHooks.MOUNTED */]: 'mounted hook',\n    [\"bu\" /* LifecycleHooks.BEFORE_UPDATE */]: 'beforeUpdate hook',\n    [\"u\" /* LifecycleHooks.UPDATED */]: 'updated',\n    [\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */]: 'beforeUnmount hook',\n    [\"um\" /* LifecycleHooks.UNMOUNTED */]: 'unmounted hook',\n    [\"a\" /* LifecycleHooks.ACTIVATED */]: 'activated hook',\n    [\"da\" /* LifecycleHooks.DEACTIVATED */]: 'deactivated hook',\n    [\"ec\" /* LifecycleHooks.ERROR_CAPTURED */]: 'errorCaptured hook',\n    [\"rtc\" /* LifecycleHooks.RENDER_TRACKED */]: 'renderTracked hook',\n    [\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */]: 'renderTriggered hook',\n    [0 /* ErrorCodes.SETUP_FUNCTION */]: 'setup function',\n    [1 /* ErrorCodes.RENDER_FUNCTION */]: 'render function',\n    [2 /* ErrorCodes.WATCH_GETTER */]: 'watcher getter',\n    [3 /* ErrorCodes.WATCH_CALLBACK */]: 'watcher callback',\n    [4 /* ErrorCodes.WATCH_CLEANUP */]: 'watcher cleanup function',\n    [5 /* ErrorCodes.NATIVE_EVENT_HANDLER */]: 'native event handler',\n    [6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */]: 'component event handler',\n    [7 /* ErrorCodes.VNODE_HOOK */]: 'vnode hook',\n    [8 /* ErrorCodes.DIRECTIVE_HOOK */]: 'directive hook',\n    [9 /* ErrorCodes.TRANSITION_HOOK */]: 'transition hook',\n    [10 /* ErrorCodes.APP_ERROR_HANDLER */]: 'app errorHandler',\n    [11 /* ErrorCodes.APP_WARN_HANDLER */]: 'app warnHandler',\n    [12 /* ErrorCodes.FUNCTION_REF */]: 'ref function',\n    [13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */]: 'async component loader',\n    [14 /* ErrorCodes.SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core'\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n    let res;\n    try {\n        res = args ? fn(...args) : fn();\n    }\n    catch (err) {\n        handleError(err, instance, type);\n    }\n    return res;\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n    if (isFunction(fn)) {\n        const res = callWithErrorHandling(fn, instance, type, args);\n        if (res && isPromise(res)) {\n            res.catch(err => {\n                handleError(err, instance, type);\n            });\n        }\n        return res;\n    }\n    const values = [];\n    for (let i = 0; i < fn.length; i++) {\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n    }\n    return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n    const contextVNode = instance ? instance.vnode : null;\n    if (instance) {\n        let cur = instance.parent;\n        // the exposed instance is the render proxy to keep it consistent with 2.x\n        const exposedInstance = instance.proxy;\n        // in production the hook receives only the error code\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\n        while (cur) {\n            const errorCapturedHooks = cur.ec;\n            if (errorCapturedHooks) {\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n                        return;\n                    }\n                }\n            }\n            cur = cur.parent;\n        }\n        // app-level handling\n        const appErrorHandler = instance.appContext.config.errorHandler;\n        if (appErrorHandler) {\n            callWithErrorHandling(appErrorHandler, null, 10 /* ErrorCodes.APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\n            return;\n        }\n    }\n    logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        const info = ErrorTypeStrings[type];\n        if (contextVNode) {\n            pushWarningContext(contextVNode);\n        }\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n        if (contextVNode) {\n            popWarningContext();\n        }\n        // crash in dev by default so it's more noticeable\n        if (throwInDev) {\n            throw err;\n        }\n        else {\n            console.error(err);\n        }\n    }\n    else {\n        // recover in prod to reduce the impact on end-user\n        console.error(err);\n    }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /*#__PURE__*/ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n    const p = currentFlushPromise || resolvedPromise;\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\n// #2768\n// Use binary-search to find a suitable position in the queue,\n// so that the queue maintains the increasing order of job's id,\n// which can prevent the job from being skipped and also can avoid repeated patching.\nfunction findInsertionIndex(id) {\n    // the start index should be `flushIndex + 1`\n    let start = flushIndex + 1;\n    let end = queue.length;\n    while (start < end) {\n        const middle = (start + end) >>> 1;\n        const middleJobId = getId(queue[middle]);\n        middleJobId < id ? (start = middle + 1) : (end = middle);\n    }\n    return start;\n}\nfunction queueJob(job) {\n    // the dedupe search uses the startIndex argument of Array.includes()\n    // by default the search index includes the current job that is being run\n    // so it cannot recursively trigger itself again.\n    // if the job is a watch() callback, the search will start with a +1 index to\n    // allow it recursively trigger itself - it is the user's responsibility to\n    // ensure it doesn't end up in an infinite loop.\n    if (!queue.length ||\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) {\n        if (job.id == null) {\n            queue.push(job);\n        }\n        else {\n            queue.splice(findInsertionIndex(job.id), 0, job);\n        }\n        queueFlush();\n    }\n}\nfunction queueFlush() {\n    if (!isFlushing && !isFlushPending) {\n        isFlushPending = true;\n        currentFlushPromise = resolvedPromise.then(flushJobs);\n    }\n}\nfunction invalidateJob(job) {\n    const i = queue.indexOf(job);\n    if (i > flushIndex) {\n        queue.splice(i, 1);\n    }\n}\nfunction queuePostFlushCb(cb) {\n    if (!isArray(cb)) {\n        if (!activePostFlushCbs ||\n            !activePostFlushCbs.includes(cb, cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex)) {\n            pendingPostFlushCbs.push(cb);\n        }\n    }\n    else {\n        // if cb is an array, it is a component lifecycle hook which can only be\n        // triggered by a job, which is already deduped in the main queue, so\n        // we can skip duplicate check here to improve perf\n        pendingPostFlushCbs.push(...cb);\n    }\n    queueFlush();\n}\nfunction flushPreFlushCbs(seen, \n// if currently flushing, skip the current job itself\ni = isFlushing ? flushIndex + 1 : 0) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        seen = seen || new Map();\n    }\n    for (; i < queue.length; i++) {\n        const cb = queue[i];\n        if (cb && cb.pre) {\n            if ((process.env.NODE_ENV !== 'production') && checkRecursiveUpdates(seen, cb)) {\n                continue;\n            }\n            queue.splice(i, 1);\n            i--;\n            cb();\n        }\n    }\n}\nfunction flushPostFlushCbs(seen) {\n    if (pendingPostFlushCbs.length) {\n        const deduped = [...new Set(pendingPostFlushCbs)];\n        pendingPostFlushCbs.length = 0;\n        // #1947 already has active queue, nested flushPostFlushCbs call\n        if (activePostFlushCbs) {\n            activePostFlushCbs.push(...deduped);\n            return;\n        }\n        activePostFlushCbs = deduped;\n        if ((process.env.NODE_ENV !== 'production')) {\n            seen = seen || new Map();\n        }\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n                continue;\n            }\n            activePostFlushCbs[postFlushIndex]();\n        }\n        activePostFlushCbs = null;\n        postFlushIndex = 0;\n    }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n    const diff = getId(a) - getId(b);\n    if (diff === 0) {\n        if (a.pre && !b.pre)\n            return -1;\n        if (b.pre && !a.pre)\n            return 1;\n    }\n    return diff;\n};\nfunction flushJobs(seen) {\n    isFlushPending = false;\n    isFlushing = true;\n    if ((process.env.NODE_ENV !== 'production')) {\n        seen = seen || new Map();\n    }\n    // Sort queue before flush.\n    // This ensures that:\n    // 1. Components are updated from parent to child. (because parent is always\n    //    created before the child so its render effect will have smaller\n    //    priority number)\n    // 2. If a component is unmounted during a parent component's update,\n    //    its update can be skipped.\n    queue.sort(comparator);\n    // conditional usage of checkRecursiveUpdate must be determined out of\n    // try ... catch block since Rollup by default de-optimizes treeshaking\n    // inside try-catch. This can leave all warning code unshaked. Although\n    // they would get eventually shaken by a minifier like terser, some minifiers\n    // would fail to do that (e.g. https://github.com/evanw/esbuild/issues/1610)\n    const check = (process.env.NODE_ENV !== 'production')\n        ? (job) => checkRecursiveUpdates(seen, job)\n        : NOOP;\n    try {\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n            const job = queue[flushIndex];\n            if (job && job.active !== false) {\n                if ((process.env.NODE_ENV !== 'production') && check(job)) {\n                    continue;\n                }\n                // console.log(`running:`, job.id)\n                callWithErrorHandling(job, null, 14 /* ErrorCodes.SCHEDULER */);\n            }\n        }\n    }\n    finally {\n        flushIndex = 0;\n        queue.length = 0;\n        flushPostFlushCbs(seen);\n        isFlushing = false;\n        currentFlushPromise = null;\n        // some postFlushCb queued jobs!\n        // keep flushing until it drains.\n        if (queue.length || pendingPostFlushCbs.length) {\n            flushJobs(seen);\n        }\n    }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n    if (!seen.has(fn)) {\n        seen.set(fn, 1);\n    }\n    else {\n        const count = seen.get(fn);\n        if (count > RECURSION_LIMIT) {\n            const instance = fn.ownerInstance;\n            const componentName = instance && getComponentName(instance.type);\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\n                `This means you have a reactive effect that is mutating its own ` +\n                `dependencies and thus recursively triggering itself. Possible sources ` +\n                `include component template, render function, updated hook or ` +\n                `watcher source function.`);\n            return true;\n        }\n        else {\n            seen.set(fn, count + 1);\n        }\n    }\n}\n\n/* eslint-disable no-restricted-globals */\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = new Set();\n// Expose the HMR runtime on the global object\n// This makes it entirely tree-shakable without polluting the exports and makes\n// it easier to be used in toolings like vue-loader\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\n// to be set so that its instances can be registered / removed.\nif ((process.env.NODE_ENV !== 'production')) {\n    getGlobalThis().__VUE_HMR_RUNTIME__ = {\n        createRecord: tryWrap(createRecord),\n        rerender: tryWrap(rerender),\n        reload: tryWrap(reload)\n    };\n}\nconst map = new Map();\nfunction registerHMR(instance) {\n    const id = instance.type.__hmrId;\n    let record = map.get(id);\n    if (!record) {\n        createRecord(id, instance.type);\n        record = map.get(id);\n    }\n    record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n    map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n    if (map.has(id)) {\n        return false;\n    }\n    map.set(id, {\n        initialDef: normalizeClassComponent(initialDef),\n        instances: new Set()\n    });\n    return true;\n}\nfunction normalizeClassComponent(component) {\n    return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n    const record = map.get(id);\n    if (!record) {\n        return;\n    }\n    // update initial record (for not-yet-rendered component)\n    record.initialDef.render = newRender;\n    [...record.instances].forEach(instance => {\n        if (newRender) {\n            instance.render = newRender;\n            normalizeClassComponent(instance.type).render = newRender;\n        }\n        instance.renderCache = [];\n        // this flag forces child components with slot content to update\n        isHmrUpdating = true;\n        instance.update();\n        isHmrUpdating = false;\n    });\n}\nfunction reload(id, newComp) {\n    const record = map.get(id);\n    if (!record)\n        return;\n    newComp = normalizeClassComponent(newComp);\n    // update initial def (for not-yet-rendered components)\n    updateComponentDef(record.initialDef, newComp);\n    // create a snapshot which avoids the set being mutated during updates\n    const instances = [...record.instances];\n    for (const instance of instances) {\n        const oldComp = normalizeClassComponent(instance.type);\n        if (!hmrDirtyComponents.has(oldComp)) {\n            // 1. Update existing comp definition to match new one\n            if (oldComp !== record.initialDef) {\n                updateComponentDef(oldComp, newComp);\n            }\n            // 2. mark definition dirty. This forces the renderer to replace the\n            // component on patch.\n            hmrDirtyComponents.add(oldComp);\n        }\n        // 3. invalidate options resolution cache\n        instance.appContext.optionsCache.delete(instance.type);\n        // 4. actually update\n        if (instance.ceReload) {\n            // custom element\n            hmrDirtyComponents.add(oldComp);\n            instance.ceReload(newComp.styles);\n            hmrDirtyComponents.delete(oldComp);\n        }\n        else if (instance.parent) {\n            // 4. Force the parent instance to re-render. This will cause all updated\n            // components to be unmounted and re-mounted. Queue the update so that we\n            // don't end up forcing the same parent to re-render multiple times.\n            queueJob(instance.parent.update);\n        }\n        else if (instance.appContext.reload) {\n            // root instance mounted via createApp() has a reload method\n            instance.appContext.reload();\n        }\n        else if (typeof window !== 'undefined') {\n            // root instance inside tree created via raw render(). Force reload.\n            window.location.reload();\n        }\n        else {\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\n        }\n    }\n    // 5. make sure to cleanup dirty hmr components after update\n    queuePostFlushCb(() => {\n        for (const instance of instances) {\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\n        }\n    });\n}\nfunction updateComponentDef(oldComp, newComp) {\n    extend(oldComp, newComp);\n    for (const key in oldComp) {\n        if (key !== '__file' && !(key in newComp)) {\n            delete oldComp[key];\n        }\n    }\n}\nfunction tryWrap(fn) {\n    return (id, arg) => {\n        try {\n            return fn(id, arg);\n        }\n        catch (e) {\n            console.error(e);\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\n                `Full reload required.`);\n        }\n    };\n}\n\nlet devtools;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit(event, ...args) {\n    if (devtools) {\n        devtools.emit(event, ...args);\n    }\n    else if (!devtoolsNotInstalled) {\n        buffer.push({ event, args });\n    }\n}\nfunction setDevtoolsHook(hook, target) {\n    var _a, _b;\n    devtools = hook;\n    if (devtools) {\n        devtools.enabled = true;\n        buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\n        buffer = [];\n    }\n    else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== 'undefined' &&\n        // some envs mock window but not fully\n        window.HTMLElement &&\n        // also exclude jsdom\n        !((_b = (_a = window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) === null || _b === void 0 ? void 0 : _b.includes('jsdom'))) {\n        const replay = (target.__VUE_DEVTOOLS_HOOK_REPLAY__ =\n            target.__VUE_DEVTOOLS_HOOK_REPLAY__ || []);\n        replay.push((newHook) => {\n            setDevtoolsHook(newHook, target);\n        });\n        // clear buffer after 3s - the user probably doesn't have devtools installed\n        // at all, and keeping the buffer will cause memory leaks (#4738)\n        setTimeout(() => {\n            if (!devtools) {\n                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n                devtoolsNotInstalled = true;\n                buffer = [];\n            }\n        }, 3000);\n    }\n    else {\n        // non-browser env, assume not installed\n        devtoolsNotInstalled = true;\n        buffer = [];\n    }\n}\nfunction devtoolsInitApp(app, version) {\n    emit(\"app:init\" /* DevtoolsHooks.APP_INIT */, app, version, {\n        Fragment,\n        Text,\n        Comment,\n        Static\n    });\n}\nfunction devtoolsUnmountApp(app) {\n    emit(\"app:unmount\" /* DevtoolsHooks.APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* DevtoolsHooks.COMPONENT_ADDED */);\nconst devtoolsComponentUpdated = \n/*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* DevtoolsHooks.COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* DevtoolsHooks.COMPONENT_REMOVED */);\nconst devtoolsComponentRemoved = (component) => {\n    if (devtools &&\n        typeof devtools.cleanupBuffer === 'function' &&\n        // remove the component if it wasn't buffered\n        !devtools.cleanupBuffer(component)) {\n        _devtoolsComponentRemoved(component);\n    }\n};\nfunction createDevtoolsComponentHook(hook) {\n    return (component) => {\n        emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\n    };\n}\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* DevtoolsHooks.PERFORMANCE_START */);\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* DevtoolsHooks.PERFORMANCE_END */);\nfunction createDevtoolsPerformanceHook(hook) {\n    return (component, type, time) => {\n        emit(hook, component.appContext.app, component.uid, component, type, time);\n    };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n    emit(\"component:emit\" /* DevtoolsHooks.COMPONENT_EMIT */, component.appContext.app, component, event, params);\n}\n\nfunction emit$1(instance, event, ...rawArgs) {\n    if (instance.isUnmounted)\n        return;\n    const props = instance.vnode.props || EMPTY_OBJ;\n    if ((process.env.NODE_ENV !== 'production')) {\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\n        if (emitsOptions) {\n            if (!(event in emitsOptions) &&\n                !(false )) {\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\n                }\n            }\n            else {\n                const validator = emitsOptions[event];\n                if (isFunction(validator)) {\n                    const isValid = validator(...rawArgs);\n                    if (!isValid) {\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\n                    }\n                }\n            }\n        }\n    }\n    let args = rawArgs;\n    const isModelListener = event.startsWith('update:');\n    // for v-model update:xxx events, apply modifiers on args\n    const modelArg = isModelListener && event.slice(7);\n    if (modelArg && modelArg in props) {\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n        if (trim) {\n            args = rawArgs.map(a => (isString(a) ? a.trim() : a));\n        }\n        if (number) {\n            args = rawArgs.map(toNumber);\n        }\n    }\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentEmit(instance, event, args);\n    }\n    if ((process.env.NODE_ENV !== 'production')) {\n        const lowerCaseEvent = event.toLowerCase();\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\n        }\n    }\n    let handlerName;\n    let handler = props[(handlerName = toHandlerKey(event))] ||\n        // also try camelCase event handler (#2249)\n        props[(handlerName = toHandlerKey(camelize(event)))];\n    // for v-model update:xxx events, also trigger kebab-case equivalent\n    // for props passed via kebab-case\n    if (!handler && isModelListener) {\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\n    }\n    if (handler) {\n        callWithAsyncErrorHandling(handler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\n    }\n    const onceHandler = props[handlerName + `Once`];\n    if (onceHandler) {\n        if (!instance.emitted) {\n            instance.emitted = {};\n        }\n        else if (instance.emitted[handlerName]) {\n            return;\n        }\n        instance.emitted[handlerName] = true;\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* ErrorCodes.COMPONENT_EVENT_HANDLER */, args);\n    }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n    const cache = appContext.emitsCache;\n    const cached = cache.get(comp);\n    if (cached !== undefined) {\n        return cached;\n    }\n    const raw = comp.emits;\n    let normalized = {};\n    // apply mixin/extends props\n    let hasExtends = false;\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n        const extendEmits = (raw) => {\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\n            if (normalizedFromExtend) {\n                hasExtends = true;\n                extend(normalized, normalizedFromExtend);\n            }\n        };\n        if (!asMixin && appContext.mixins.length) {\n            appContext.mixins.forEach(extendEmits);\n        }\n        if (comp.extends) {\n            extendEmits(comp.extends);\n        }\n        if (comp.mixins) {\n            comp.mixins.forEach(extendEmits);\n        }\n    }\n    if (!raw && !hasExtends) {\n        if (isObject(comp)) {\n            cache.set(comp, null);\n        }\n        return null;\n    }\n    if (isArray(raw)) {\n        raw.forEach(key => (normalized[key] = null));\n    }\n    else {\n        extend(normalized, raw);\n    }\n    if (isObject(comp)) {\n        cache.set(comp, normalized);\n    }\n    return normalized;\n}\n// Check if an incoming prop key is a declared emit event listener.\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\n// both considered matched listeners.\nfunction isEmitListener(options, key) {\n    if (!options || !isOn(key)) {\n        return false;\n    }\n    key = key.slice(2).replace(/Once$/, '');\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\n        hasOwn(options, hyphenate(key)) ||\n        hasOwn(options, key));\n}\n\n/**\n * mark the current rendering instance for asset resolution (e.g.\n * resolveComponent, resolveDirective) during render\n */\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\n/**\n * Note: rendering calls maybe nested. The function returns the parent rendering\n * instance if present, which should be restored after the render is done:\n *\n * ```js\n * const prev = setCurrentRenderingInstance(i)\n * // ...render\n * setCurrentRenderingInstance(prev)\n * ```\n */\nfunction setCurrentRenderingInstance(instance) {\n    const prev = currentRenderingInstance;\n    currentRenderingInstance = instance;\n    currentScopeId = (instance && instance.type.__scopeId) || null;\n    return prev;\n}\n/**\n * Set scope id when creating hoisted vnodes.\n * @private compiler helper\n */\nfunction pushScopeId(id) {\n    currentScopeId = id;\n}\n/**\n * Technically we no longer need this after 3.0.8 but we need to keep the same\n * API for backwards compat w/ code generated by compilers.\n * @private\n */\nfunction popScopeId() {\n    currentScopeId = null;\n}\n/**\n * Only for backwards compat\n * @private\n */\nconst withScopeId = (_id) => withCtx;\n/**\n * Wrap a slot function to memoize current rendering instance\n * @private compiler helper\n */\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\n) {\n    if (!ctx)\n        return fn;\n    // already normalized\n    if (fn._n) {\n        return fn;\n    }\n    const renderFnWithContext = (...args) => {\n        // If a user calls a compiled slot inside a template expression (#1745), it\n        // can mess up block tracking, so by default we disable block tracking and\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\n        if (renderFnWithContext._d) {\n            setBlockTracking(-1);\n        }\n        const prevInstance = setCurrentRenderingInstance(ctx);\n        let res;\n        try {\n            res = fn(...args);\n        }\n        finally {\n            setCurrentRenderingInstance(prevInstance);\n            if (renderFnWithContext._d) {\n                setBlockTracking(1);\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            devtoolsComponentUpdated(ctx);\n        }\n        return res;\n    };\n    // mark normalized to avoid duplicated wrapping\n    renderFnWithContext._n = true;\n    // mark this as compiled by default\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\n    // rendering flag.\n    renderFnWithContext._c = true;\n    // disable block tracking by default\n    renderFnWithContext._d = true;\n    return renderFnWithContext;\n}\n\n/**\n * dev only flag to track whether $attrs was used during render.\n * If $attrs was used during render then the warning for failed attrs\n * fallthrough can be suppressed.\n */\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n    accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\n    let result;\n    let fallthroughAttrs;\n    const prev = setCurrentRenderingInstance(instance);\n    if ((process.env.NODE_ENV !== 'production')) {\n        accessedAttrs = false;\n    }\n    try {\n        if (vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) {\n            // withProxy is a proxy with a different `has` trap only for\n            // runtime-compiled render functions using `with` block.\n            const proxyToUse = withProxy || proxy;\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\n            fallthroughAttrs = attrs;\n        }\n        else {\n            // functional\n            const render = Component;\n            // in dev, mark attrs accessed if optional props (attrs === props)\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\n                markAttrsAccessed();\n            }\n            result = normalizeVNode(render.length > 1\n                ? render(props, (process.env.NODE_ENV !== 'production')\n                    ? {\n                        get attrs() {\n                            markAttrsAccessed();\n                            return attrs;\n                        },\n                        slots,\n                        emit\n                    }\n                    : { attrs, slots, emit })\n                : render(props, null /* we know it doesn't need it */));\n            fallthroughAttrs = Component.props\n                ? attrs\n                : getFunctionalFallthrough(attrs);\n        }\n    }\n    catch (err) {\n        blockStack.length = 0;\n        handleError(err, instance, 1 /* ErrorCodes.RENDER_FUNCTION */);\n        result = createVNode(Comment);\n    }\n    // attr merging\n    // in dev mode, comments are preserved, and it's possible for a template\n    // to have comments along side the root element which makes it a fragment\n    let root = result;\n    let setRoot = undefined;\n    if ((process.env.NODE_ENV !== 'production') &&\n        result.patchFlag > 0 &&\n        result.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */) {\n        [root, setRoot] = getChildRoot(result);\n    }\n    if (fallthroughAttrs && inheritAttrs !== false) {\n        const keys = Object.keys(fallthroughAttrs);\n        const { shapeFlag } = root;\n        if (keys.length) {\n            if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 6 /* ShapeFlags.COMPONENT */)) {\n                if (propsOptions && keys.some(isModelListener)) {\n                    // If a v-model listener (onUpdate:xxx) has a corresponding declared\n                    // prop, it indicates this component expects to handle v-model and\n                    // it should not fallthrough.\n                    // related: #1543, #1643, #1989\n                    fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\n                }\n                root = cloneVNode(root, fallthroughAttrs);\n            }\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\n                const allAttrs = Object.keys(attrs);\n                const eventAttrs = [];\n                const extraAttrs = [];\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\n                    const key = allAttrs[i];\n                    if (isOn(key)) {\n                        // ignore v-model handlers when they fail to fallthrough\n                        if (!isModelListener(key)) {\n                            // remove `on`, lowercase first letter to reflect event casing\n                            // accurately\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n                        }\n                    }\n                    else {\n                        extraAttrs.push(key);\n                    }\n                }\n                if (extraAttrs.length) {\n                    warn(`Extraneous non-props attributes (` +\n                        `${extraAttrs.join(', ')}) ` +\n                        `were passed to component but could not be automatically inherited ` +\n                        `because component renders fragment or text root nodes.`);\n                }\n                if (eventAttrs.length) {\n                    warn(`Extraneous non-emits event listeners (` +\n                        `${eventAttrs.join(', ')}) ` +\n                        `were passed to component but could not be automatically inherited ` +\n                        `because component renders fragment or text root nodes. ` +\n                        `If the listener is intended to be a component custom event listener only, ` +\n                        `declare it using the \"emits\" option.`);\n                }\n            }\n        }\n    }\n    // inherit directives\n    if (vnode.dirs) {\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\n            warn(`Runtime directive used on component with non-element root node. ` +\n                `The directives will not function as intended.`);\n        }\n        // clone before mutating since the root may be a hoisted vnode\n        root = cloneVNode(root);\n        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n    }\n    // inherit transition data\n    if (vnode.transition) {\n        if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\n            warn(`Component inside <Transition> renders non-element root node ` +\n                `that cannot be animated.`);\n        }\n        root.transition = vnode.transition;\n    }\n    if ((process.env.NODE_ENV !== 'production') && setRoot) {\n        setRoot(root);\n    }\n    else {\n        result = root;\n    }\n    setCurrentRenderingInstance(prev);\n    return result;\n}\n/**\n * dev only\n * In dev mode, template root level comments are rendered, which turns the\n * template into a fragment root, but we need to locate the single element\n * root for attrs and scope id processing.\n */\nconst getChildRoot = (vnode) => {\n    const rawChildren = vnode.children;\n    const dynamicChildren = vnode.dynamicChildren;\n    const childRoot = filterSingleRoot(rawChildren);\n    if (!childRoot) {\n        return [vnode, undefined];\n    }\n    const index = rawChildren.indexOf(childRoot);\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n    const setRoot = (updatedRoot) => {\n        rawChildren[index] = updatedRoot;\n        if (dynamicChildren) {\n            if (dynamicIndex > -1) {\n                dynamicChildren[dynamicIndex] = updatedRoot;\n            }\n            else if (updatedRoot.patchFlag > 0) {\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n            }\n        }\n    };\n    return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children) {\n    let singleRoot;\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isVNode(child)) {\n            // ignore user comment\n            if (child.type !== Comment || child.children === 'v-if') {\n                if (singleRoot) {\n                    // has more than 1 non-comment child, return now\n                    return;\n                }\n                else {\n                    singleRoot = child;\n                }\n            }\n        }\n        else {\n            return;\n        }\n    }\n    return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n    let res;\n    for (const key in attrs) {\n        if (key === 'class' || key === 'style' || isOn(key)) {\n            (res || (res = {}))[key] = attrs[key];\n        }\n    }\n    return res;\n};\nconst filterModelListeners = (attrs, props) => {\n    const res = {};\n    for (const key in attrs) {\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\n            res[key] = attrs[key];\n        }\n    }\n    return res;\n};\nconst isElementRoot = (vnode) => {\n    return (vnode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 1 /* ShapeFlags.ELEMENT */) ||\n        vnode.type === Comment // potential v-if branch switch\n    );\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n    const emits = component.emitsOptions;\n    // Parent component's render function was hot-updated. Since this may have\n    // caused the child component's slots content to have changed, we need to\n    // force the child to update as well.\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\n        return true;\n    }\n    // force child update for runtime directive or transition on component vnode.\n    if (nextVNode.dirs || nextVNode.transition) {\n        return true;\n    }\n    if (optimized && patchFlag >= 0) {\n        if (patchFlag & 1024 /* PatchFlags.DYNAMIC_SLOTS */) {\n            // slot content that references values that might have changed,\n            // e.g. in a v-for\n            return true;\n        }\n        if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\n            if (!prevProps) {\n                return !!nextProps;\n            }\n            // presence of this flag indicates props are always non-null\n            return hasPropsChanged(prevProps, nextProps, emits);\n        }\n        else if (patchFlag & 8 /* PatchFlags.PROPS */) {\n            const dynamicProps = nextVNode.dynamicProps;\n            for (let i = 0; i < dynamicProps.length; i++) {\n                const key = dynamicProps[i];\n                if (nextProps[key] !== prevProps[key] &&\n                    !isEmitListener(emits, key)) {\n                    return true;\n                }\n            }\n        }\n    }\n    else {\n        // this path is only taken by manually written render functions\n        // so presence of any children leads to a forced update\n        if (prevChildren || nextChildren) {\n            if (!nextChildren || !nextChildren.$stable) {\n                return true;\n            }\n        }\n        if (prevProps === nextProps) {\n            return false;\n        }\n        if (!prevProps) {\n            return !!nextProps;\n        }\n        if (!nextProps) {\n            return true;\n        }\n        return hasPropsChanged(prevProps, nextProps, emits);\n    }\n    return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n    const nextKeys = Object.keys(nextProps);\n    if (nextKeys.length !== Object.keys(prevProps).length) {\n        return true;\n    }\n    for (let i = 0; i < nextKeys.length; i++) {\n        const key = nextKeys[i];\n        if (nextProps[key] !== prevProps[key] &&\n            !isEmitListener(emitsOptions, key)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\n) {\n    while (parent && parent.subTree === vnode) {\n        (vnode = parent.vnode).el = el;\n        parent = parent.parent;\n    }\n}\n\nconst isSuspense = (type) => type.__isSuspense;\n// Suspense exposes a component-like API, and is treated like a component\n// in the compiler, but internally it's a special built-in type that hooks\n// directly into the renderer.\nconst SuspenseImpl = {\n    name: 'Suspense',\n    // In order to make Suspense tree-shakable, we need to avoid importing it\n    // directly in the renderer. The renderer checks for the __isSuspense flag\n    // on a vnode's type and calls the `process` method, passing in renderer\n    // internals.\n    __isSuspense: true,\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \n    // platform-specific impl passed from renderer\n    rendererInternals) {\n        if (n1 == null) {\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\n        }\n        else {\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\n        }\n    },\n    hydrate: hydrateSuspense,\n    create: createSuspenseBoundary,\n    normalize: normalizeSuspenseChildren\n};\n// Force-casted public typing for h and TSX props inference\nconst Suspense = (SuspenseImpl\n    );\nfunction triggerEvent(vnode, name) {\n    const eventListener = vnode.props && vnode.props[name];\n    if (isFunction(eventListener)) {\n        eventListener();\n    }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n    const { p: patch, o: { createElement } } = rendererInternals;\n    const hiddenContainer = createElement('div');\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\n    // start mounting the content subtree in an off-dom container\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\n    // now check if we have encountered any async deps\n    if (suspense.deps > 0) {\n        // has async\n        // invoke @fallback event\n        triggerEvent(vnode, 'onPending');\n        triggerEvent(vnode, 'onFallback');\n        // mount the fallback tree\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n        isSVG, slotScopeIds);\n        setActiveBranch(suspense, vnode.ssFallback);\n    }\n    else {\n        // Suspense has no async deps. Just resolve.\n        suspense.resolve();\n    }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n    const suspense = (n2.suspense = n1.suspense);\n    suspense.vnode = n2;\n    n2.el = n1.el;\n    const newBranch = n2.ssContent;\n    const newFallback = n2.ssFallback;\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n    if (pendingBranch) {\n        suspense.pendingBranch = newBranch;\n        if (isSameVNodeType(newBranch, pendingBranch)) {\n            // same root type but content may have changed.\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n            if (suspense.deps <= 0) {\n                suspense.resolve();\n            }\n            else if (isInFallback) {\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n                isSVG, slotScopeIds, optimized);\n                setActiveBranch(suspense, newFallback);\n            }\n        }\n        else {\n            // toggled before pending tree is resolved\n            suspense.pendingId++;\n            if (isHydrating) {\n                // if toggled before hydration is finished, the current DOM tree is\n                // no longer valid. set it as the active branch so it will be unmounted\n                // when resolved\n                suspense.isHydrating = false;\n                suspense.activeBranch = pendingBranch;\n            }\n            else {\n                unmount(pendingBranch, parentComponent, suspense);\n            }\n            // increment pending ID. this is used to invalidate async callbacks\n            // reset suspense state\n            suspense.deps = 0;\n            // discard effects from pending branch\n            suspense.effects.length = 0;\n            // discard previous container\n            suspense.hiddenContainer = createElement('div');\n            if (isInFallback) {\n                // already in fallback state\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n                if (suspense.deps <= 0) {\n                    suspense.resolve();\n                }\n                else {\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n                    isSVG, slotScopeIds, optimized);\n                    setActiveBranch(suspense, newFallback);\n                }\n            }\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n                // toggled \"back\" to current active branch\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n                // force resolve\n                suspense.resolve(true);\n            }\n            else {\n                // switched to a 3rd branch\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n                if (suspense.deps <= 0) {\n                    suspense.resolve();\n                }\n            }\n        }\n    }\n    else {\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n            // root did not change, just normal patch\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n            setActiveBranch(suspense, newBranch);\n        }\n        else {\n            // root node toggled\n            // invoke @pending event\n            triggerEvent(n2, 'onPending');\n            // mount pending branch in off-dom container\n            suspense.pendingBranch = newBranch;\n            suspense.pendingId++;\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\n            if (suspense.deps <= 0) {\n                // incoming branch has no async deps, resolve now.\n                suspense.resolve();\n            }\n            else {\n                const { timeout, pendingId } = suspense;\n                if (timeout > 0) {\n                    setTimeout(() => {\n                        if (suspense.pendingId === pendingId) {\n                            suspense.fallback(newFallback);\n                        }\n                    }, timeout);\n                }\n                else if (timeout === 0) {\n                    suspense.fallback(newFallback);\n                }\n            }\n        }\n    }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n    /* istanbul ignore if */\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\n        hasWarned = true;\n        // @ts-ignore `console.info` cannot be null error\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\n    }\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\n    const suspense = {\n        vnode,\n        parent,\n        parentComponent,\n        isSVG,\n        container,\n        hiddenContainer,\n        anchor,\n        deps: 0,\n        pendingId: 0,\n        timeout: typeof timeout === 'number' ? timeout : -1,\n        activeBranch: null,\n        pendingBranch: null,\n        isInFallback: true,\n        isHydrating,\n        isUnmounted: false,\n        effects: [],\n        resolve(resume = false) {\n            if ((process.env.NODE_ENV !== 'production')) {\n                if (!resume && !suspense.pendingBranch) {\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\n                }\n                if (suspense.isUnmounted) {\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\n                }\n            }\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\n            if (suspense.isHydrating) {\n                suspense.isHydrating = false;\n            }\n            else if (!resume) {\n                const delayEnter = activeBranch &&\n                    pendingBranch.transition &&\n                    pendingBranch.transition.mode === 'out-in';\n                if (delayEnter) {\n                    activeBranch.transition.afterLeave = () => {\n                        if (pendingId === suspense.pendingId) {\n                            move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\n                        }\n                    };\n                }\n                // this is initial anchor on mount\n                let { anchor } = suspense;\n                // unmount current active tree\n                if (activeBranch) {\n                    // if the fallback tree was mounted, it may have been moved\n                    // as part of a parent suspense. get the latest anchor for insertion\n                    anchor = next(activeBranch);\n                    unmount(activeBranch, parentComponent, suspense, true);\n                }\n                if (!delayEnter) {\n                    // move content from off-dom container to actual container\n                    move(pendingBranch, container, anchor, 0 /* MoveType.ENTER */);\n                }\n            }\n            setActiveBranch(suspense, pendingBranch);\n            suspense.pendingBranch = null;\n            suspense.isInFallback = false;\n            // flush buffered effects\n            // check if there is a pending parent suspense\n            let parent = suspense.parent;\n            let hasUnresolvedAncestor = false;\n            while (parent) {\n                if (parent.pendingBranch) {\n                    // found a pending parent suspense, merge buffered post jobs\n                    // into that parent\n                    parent.effects.push(...effects);\n                    hasUnresolvedAncestor = true;\n                    break;\n                }\n                parent = parent.parent;\n            }\n            // no pending parent suspense, flush all jobs\n            if (!hasUnresolvedAncestor) {\n                queuePostFlushCb(effects);\n            }\n            suspense.effects = [];\n            // invoke @resolve event\n            triggerEvent(vnode, 'onResolve');\n        },\n        fallback(fallbackVNode) {\n            if (!suspense.pendingBranch) {\n                return;\n            }\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\n            // invoke @fallback event\n            triggerEvent(vnode, 'onFallback');\n            const anchor = next(activeBranch);\n            const mountFallback = () => {\n                if (!suspense.isInFallback) {\n                    return;\n                }\n                // mount the fallback tree\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\n                isSVG, slotScopeIds, optimized);\n                setActiveBranch(suspense, fallbackVNode);\n            };\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\n            if (delayEnter) {\n                activeBranch.transition.afterLeave = mountFallback;\n            }\n            suspense.isInFallback = true;\n            // unmount current active branch\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\n            true // shouldRemove\n            );\n            if (!delayEnter) {\n                mountFallback();\n            }\n        },\n        move(container, anchor, type) {\n            suspense.activeBranch &&\n                move(suspense.activeBranch, container, anchor, type);\n            suspense.container = container;\n        },\n        next() {\n            return suspense.activeBranch && next(suspense.activeBranch);\n        },\n        registerDep(instance, setupRenderEffect) {\n            const isInPendingSuspense = !!suspense.pendingBranch;\n            if (isInPendingSuspense) {\n                suspense.deps++;\n            }\n            const hydratedEl = instance.vnode.el;\n            instance\n                .asyncDep.catch(err => {\n                handleError(err, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\n            })\n                .then(asyncSetupResult => {\n                // retry when the setup() promise resolves.\n                // component may have been unmounted before resolve.\n                if (instance.isUnmounted ||\n                    suspense.isUnmounted ||\n                    suspense.pendingId !== instance.suspenseId) {\n                    return;\n                }\n                // retry from this component\n                instance.asyncResolved = true;\n                const { vnode } = instance;\n                if ((process.env.NODE_ENV !== 'production')) {\n                    pushWarningContext(vnode);\n                }\n                handleSetupResult(instance, asyncSetupResult, false);\n                if (hydratedEl) {\n                    // vnode may have been replaced if an update happened before the\n                    // async dep is resolved.\n                    vnode.el = hydratedEl;\n                }\n                const placeholder = !hydratedEl && instance.subTree.el;\n                setupRenderEffect(instance, vnode, \n                // component may have been moved before resolve.\n                // if this is not a hydration, instance.subTree will be the comment\n                // placeholder.\n                parentNode(hydratedEl || instance.subTree.el), \n                // anchor will not be used if this is hydration, so only need to\n                // consider the comment placeholder case.\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\n                if (placeholder) {\n                    remove(placeholder);\n                }\n                updateHOCHostEl(instance, vnode.el);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    popWarningContext();\n                }\n                // only decrease deps count if suspense is not already resolved\n                if (isInPendingSuspense && --suspense.deps === 0) {\n                    suspense.resolve();\n                }\n            });\n        },\n        unmount(parentSuspense, doRemove) {\n            suspense.isUnmounted = true;\n            if (suspense.activeBranch) {\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\n            }\n            if (suspense.pendingBranch) {\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\n            }\n        }\n    };\n    return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n    /* eslint-disable no-restricted-globals */\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\n    // there are two possible scenarios for server-rendered suspense:\n    // - success: ssr content should be fully resolved\n    // - failure: ssr content should be the fallback branch.\n    // however, on the client we don't really know if it has failed or not\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\n    // need to construct a suspense boundary first\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\n    if (suspense.deps === 0) {\n        suspense.resolve();\n    }\n    return result;\n    /* eslint-enable no-restricted-globals */\n}\nfunction normalizeSuspenseChildren(vnode) {\n    const { shapeFlag, children } = vnode;\n    const isSlotChildren = shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */;\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\n    vnode.ssFallback = isSlotChildren\n        ? normalizeSuspenseSlot(children.fallback)\n        : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n    let block;\n    if (isFunction(s)) {\n        const trackBlock = isBlockTreeEnabled && s._c;\n        if (trackBlock) {\n            // disableTracking: false\n            // allow block tracking for compiled slots\n            // (see ./componentRenderContext.ts)\n            s._d = false;\n            openBlock();\n        }\n        s = s();\n        if (trackBlock) {\n            s._d = true;\n            block = currentBlock;\n            closeBlock();\n        }\n    }\n    if (isArray(s)) {\n        const singleChild = filterSingleRoot(s);\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\n            warn(`<Suspense> slots expect a single root node.`);\n        }\n        s = singleChild;\n    }\n    s = normalizeVNode(s);\n    if (block && !s.dynamicChildren) {\n        s.dynamicChildren = block.filter(c => c !== s);\n    }\n    return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n    if (suspense && suspense.pendingBranch) {\n        if (isArray(fn)) {\n            suspense.effects.push(...fn);\n        }\n        else {\n            suspense.effects.push(fn);\n        }\n    }\n    else {\n        queuePostFlushCb(fn);\n    }\n}\nfunction setActiveBranch(suspense, branch) {\n    suspense.activeBranch = branch;\n    const { vnode, parentComponent } = suspense;\n    const el = (vnode.el = branch.el);\n    // in case suspense is the root node of a component,\n    // recursively update the HOC el\n    if (parentComponent && parentComponent.subTree === vnode) {\n        parentComponent.vnode.el = el;\n        updateHOCHostEl(parentComponent, el);\n    }\n}\n\nfunction provide(key, value) {\n    if (!currentInstance) {\n        if ((process.env.NODE_ENV !== 'production')) {\n            warn(`provide() can only be used inside setup().`);\n        }\n    }\n    else {\n        let provides = currentInstance.provides;\n        // by default an instance inherits its parent's provides object\n        // but when it needs to provide values of its own, it creates its\n        // own provides object using parent provides object as prototype.\n        // this way in `inject` we can simply look up injections from direct\n        // parent and let the prototype chain do the work.\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n        if (parentProvides === provides) {\n            provides = currentInstance.provides = Object.create(parentProvides);\n        }\n        // TS doesn't allow symbol as index type\n        provides[key] = value;\n    }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n    // fallback to `currentRenderingInstance` so that this can be called in\n    // a functional component\n    const instance = currentInstance || currentRenderingInstance;\n    if (instance) {\n        // #2400\n        // to support `app.use` plugins,\n        // fallback to appContext's `provides` if the instance is at root\n        const provides = instance.parent == null\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\n            : instance.parent.provides;\n        if (provides && key in provides) {\n            // TS doesn't allow symbol as index type\n            return provides[key];\n        }\n        else if (arguments.length > 1) {\n            return treatDefaultAsFactory && isFunction(defaultValue)\n                ? defaultValue.call(instance.proxy)\n                : defaultValue;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`injection \"${String(key)}\" not found.`);\n        }\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`inject() can only be used inside setup() or functional components.`);\n    }\n}\n\n// Simple effect.\nfunction watchEffect(effect, options) {\n    return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\n        ? Object.assign(Object.assign({}, options), { flush: 'post' }) : { flush: 'post' }));\n}\nfunction watchSyncEffect(effect, options) {\n    return doWatch(effect, null, ((process.env.NODE_ENV !== 'production')\n        ? Object.assign(Object.assign({}, options), { flush: 'sync' }) : { flush: 'sync' }));\n}\n// initial value for watchers to trigger on undefined initial values\nconst INITIAL_WATCHER_VALUE = {};\n// implementation\nfunction watch(source, cb, options) {\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\n            `supports \\`watch(source, cb, options?) signature.`);\n    }\n    return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\n        if (immediate !== undefined) {\n            warn(`watch() \"immediate\" option is only respected when using the ` +\n                `watch(source, callback, options?) signature.`);\n        }\n        if (deep !== undefined) {\n            warn(`watch() \"deep\" option is only respected when using the ` +\n                `watch(source, callback, options?) signature.`);\n        }\n    }\n    const warnInvalidSource = (s) => {\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\n            `a reactive object, or an array of these types.`);\n    };\n    const instance = currentInstance;\n    let getter;\n    let forceTrigger = false;\n    let isMultiSource = false;\n    if (isRef(source)) {\n        getter = () => source.value;\n        forceTrigger = isShallow$1(source);\n    }\n    else if (isReactive(source)) {\n        getter = () => source;\n        deep = true;\n    }\n    else if (isArray(source)) {\n        isMultiSource = true;\n        forceTrigger = source.some(s => isReactive(s) || isShallow$1(s));\n        getter = () => source.map(s => {\n            if (isRef(s)) {\n                return s.value;\n            }\n            else if (isReactive(s)) {\n                return traverse(s);\n            }\n            else if (isFunction(s)) {\n                return callWithErrorHandling(s, instance, 2 /* ErrorCodes.WATCH_GETTER */);\n            }\n            else {\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\n            }\n        });\n    }\n    else if (isFunction(source)) {\n        if (cb) {\n            // getter with cb\n            getter = () => callWithErrorHandling(source, instance, 2 /* ErrorCodes.WATCH_GETTER */);\n        }\n        else {\n            // no cb -> simple effect\n            getter = () => {\n                if (instance && instance.isUnmounted) {\n                    return;\n                }\n                if (cleanup) {\n                    cleanup();\n                }\n                return callWithAsyncErrorHandling(source, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [onCleanup]);\n            };\n        }\n    }\n    else {\n        getter = NOOP;\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\n    }\n    if (cb && deep) {\n        const baseGetter = getter;\n        getter = () => traverse(baseGetter());\n    }\n    let cleanup;\n    let onCleanup = (fn) => {\n        cleanup = effect.onStop = () => {\n            callWithErrorHandling(fn, instance, 4 /* ErrorCodes.WATCH_CLEANUP */);\n        };\n    };\n    // in SSR there is no need to setup an actual effect, and it should be noop\n    // unless it's eager or sync flush\n    let ssrCleanup;\n    if (isInSSRComponentSetup) {\n        // we will also not call the invalidate callback (+ runner is not set up)\n        onCleanup = NOOP;\n        if (!cb) {\n            getter();\n        }\n        else if (immediate) {\n            callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\n                getter(),\n                isMultiSource ? [] : undefined,\n                onCleanup\n            ]);\n        }\n        if (flush === 'sync') {\n            const ctx = useSSRContext();\n            ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n        }\n        else {\n            return NOOP;\n        }\n    }\n    let oldValue = isMultiSource\n        ? new Array(source.length).fill(INITIAL_WATCHER_VALUE)\n        : INITIAL_WATCHER_VALUE;\n    const job = () => {\n        if (!effect.active) {\n            return;\n        }\n        if (cb) {\n            // watch(source, cb)\n            const newValue = effect.run();\n            if (deep ||\n                forceTrigger ||\n                (isMultiSource\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\n                    : hasChanged(newValue, oldValue)) ||\n                (false  )) {\n                // cleanup before running cb again\n                if (cleanup) {\n                    cleanup();\n                }\n                callWithAsyncErrorHandling(cb, instance, 3 /* ErrorCodes.WATCH_CALLBACK */, [\n                    newValue,\n                    // pass undefined as the old value when it's changed for the first time\n                    oldValue === INITIAL_WATCHER_VALUE\n                        ? undefined\n                        : (isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE)\n                            ? []\n                            : oldValue,\n                    onCleanup\n                ]);\n                oldValue = newValue;\n            }\n        }\n        else {\n            // watchEffect\n            effect.run();\n        }\n    };\n    // important: mark the job as a watcher callback so that scheduler knows\n    // it is allowed to self-trigger (#1727)\n    job.allowRecurse = !!cb;\n    let scheduler;\n    if (flush === 'sync') {\n        scheduler = job; // the scheduler function gets called directly\n    }\n    else if (flush === 'post') {\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n    }\n    else {\n        // default: 'pre'\n        job.pre = true;\n        if (instance)\n            job.id = instance.uid;\n        scheduler = () => queueJob(job);\n    }\n    const effect = new ReactiveEffect(getter, scheduler);\n    if ((process.env.NODE_ENV !== 'production')) {\n        effect.onTrack = onTrack;\n        effect.onTrigger = onTrigger;\n    }\n    // initial run\n    if (cb) {\n        if (immediate) {\n            job();\n        }\n        else {\n            oldValue = effect.run();\n        }\n    }\n    else if (flush === 'post') {\n        queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);\n    }\n    else {\n        effect.run();\n    }\n    const unwatch = () => {\n        effect.stop();\n        if (instance && instance.scope) {\n            remove(instance.scope.effects, effect);\n        }\n    };\n    if (ssrCleanup)\n        ssrCleanup.push(unwatch);\n    return unwatch;\n}\n// this.$watch\nfunction instanceWatch(source, value, options) {\n    const publicThis = this.proxy;\n    const getter = isString(source)\n        ? source.includes('.')\n            ? createPathGetter(publicThis, source)\n            : () => publicThis[source]\n        : source.bind(publicThis, publicThis);\n    let cb;\n    if (isFunction(value)) {\n        cb = value;\n    }\n    else {\n        cb = value.handler;\n        options = value;\n    }\n    const cur = currentInstance;\n    setCurrentInstance(this);\n    const res = doWatch(getter, cb.bind(publicThis), options);\n    if (cur) {\n        setCurrentInstance(cur);\n    }\n    else {\n        unsetCurrentInstance();\n    }\n    return res;\n}\nfunction createPathGetter(ctx, path) {\n    const segments = path.split('.');\n    return () => {\n        let cur = ctx;\n        for (let i = 0; i < segments.length && cur; i++) {\n            cur = cur[segments[i]];\n        }\n        return cur;\n    };\n}\nfunction traverse(value, seen) {\n    if (!isObject(value) || value[\"__v_skip\" /* ReactiveFlags.SKIP */]) {\n        return value;\n    }\n    seen = seen || new Set();\n    if (seen.has(value)) {\n        return value;\n    }\n    seen.add(value);\n    if (isRef(value)) {\n        traverse(value.value, seen);\n    }\n    else if (isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            traverse(value[i], seen);\n        }\n    }\n    else if (isSet(value) || isMap(value)) {\n        value.forEach((v) => {\n            traverse(v, seen);\n        });\n    }\n    else if (isPlainObject(value)) {\n        for (const key in value) {\n            traverse(value[key], seen);\n        }\n    }\n    return value;\n}\n\nfunction useTransitionState() {\n    const state = {\n        isMounted: false,\n        isLeaving: false,\n        isUnmounting: false,\n        leavingVNodes: new Map()\n    };\n    onMounted(() => {\n        state.isMounted = true;\n    });\n    onBeforeUnmount(() => {\n        state.isUnmounting = true;\n    });\n    return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionImpl = {\n    name: `BaseTransition`,\n    props: {\n        mode: String,\n        appear: Boolean,\n        persisted: Boolean,\n        // enter\n        onBeforeEnter: TransitionHookValidator,\n        onEnter: TransitionHookValidator,\n        onAfterEnter: TransitionHookValidator,\n        onEnterCancelled: TransitionHookValidator,\n        // leave\n        onBeforeLeave: TransitionHookValidator,\n        onLeave: TransitionHookValidator,\n        onAfterLeave: TransitionHookValidator,\n        onLeaveCancelled: TransitionHookValidator,\n        // appear\n        onBeforeAppear: TransitionHookValidator,\n        onAppear: TransitionHookValidator,\n        onAfterAppear: TransitionHookValidator,\n        onAppearCancelled: TransitionHookValidator\n    },\n    setup(props, { slots }) {\n        const instance = getCurrentInstance();\n        const state = useTransitionState();\n        let prevTransitionKey;\n        return () => {\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\n            if (!children || !children.length) {\n                return;\n            }\n            let child = children[0];\n            if (children.length > 1) {\n                let hasFound = false;\n                // locate first non-comment child\n                for (const c of children) {\n                    if (c.type !== Comment) {\n                        if ((process.env.NODE_ENV !== 'production') && hasFound) {\n                            // warn more than one non-comment child\n                            warn('<transition> can only be used on a single element or component. ' +\n                                'Use <transition-group> for lists.');\n                            break;\n                        }\n                        child = c;\n                        hasFound = true;\n                        if (!(process.env.NODE_ENV !== 'production'))\n                            break;\n                    }\n                }\n            }\n            // there's no need to track reactivity for these props so use the raw\n            // props for a bit better perf\n            const rawProps = toRaw(props);\n            const { mode } = rawProps;\n            // check mode\n            if ((process.env.NODE_ENV !== 'production') &&\n                mode &&\n                mode !== 'in-out' &&\n                mode !== 'out-in' &&\n                mode !== 'default') {\n                warn(`invalid <transition> mode: ${mode}`);\n            }\n            if (state.isLeaving) {\n                return emptyPlaceholder(child);\n            }\n            // in the case of <transition><keep-alive/></transition>, we need to\n            // compare the type of the kept-alive children.\n            const innerChild = getKeepAliveChild(child);\n            if (!innerChild) {\n                return emptyPlaceholder(child);\n            }\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\n            setTransitionHooks(innerChild, enterHooks);\n            const oldChild = instance.subTree;\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n            let transitionKeyChanged = false;\n            const { getTransitionKey } = innerChild.type;\n            if (getTransitionKey) {\n                const key = getTransitionKey();\n                if (prevTransitionKey === undefined) {\n                    prevTransitionKey = key;\n                }\n                else if (key !== prevTransitionKey) {\n                    prevTransitionKey = key;\n                    transitionKeyChanged = true;\n                }\n            }\n            // handle mode\n            if (oldInnerChild &&\n                oldInnerChild.type !== Comment &&\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\n                // update old tree's hooks in case of dynamic transition\n                setTransitionHooks(oldInnerChild, leavingHooks);\n                // switching between different views\n                if (mode === 'out-in') {\n                    state.isLeaving = true;\n                    // return placeholder node and queue update when leave finishes\n                    leavingHooks.afterLeave = () => {\n                        state.isLeaving = false;\n                        // #6835\n                        // it also needs to be updated when active is undefined\n                        if (instance.update.active !== false) {\n                            instance.update();\n                        }\n                    };\n                    return emptyPlaceholder(child);\n                }\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n                        // early removal callback\n                        el._leaveCb = () => {\n                            earlyRemove();\n                            el._leaveCb = undefined;\n                            delete enterHooks.delayedLeave;\n                        };\n                        enterHooks.delayedLeave = delayedLeave;\n                    };\n                }\n            }\n            return child;\n        };\n    }\n};\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n    const { leavingVNodes } = state;\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\n    if (!leavingVNodesCache) {\n        leavingVNodesCache = Object.create(null);\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\n    }\n    return leavingVNodesCache;\n}\n// The transition hooks are attached to the vnode as vnode.transition\n// and will be called at appropriate timing in the renderer.\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\n    const key = String(vnode.key);\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n    const callHook = (hook, args) => {\n        hook &&\n            callWithAsyncErrorHandling(hook, instance, 9 /* ErrorCodes.TRANSITION_HOOK */, args);\n    };\n    const callAsyncHook = (hook, args) => {\n        const done = args[1];\n        callHook(hook, args);\n        if (isArray(hook)) {\n            if (hook.every(hook => hook.length <= 1))\n                done();\n        }\n        else if (hook.length <= 1) {\n            done();\n        }\n    };\n    const hooks = {\n        mode,\n        persisted,\n        beforeEnter(el) {\n            let hook = onBeforeEnter;\n            if (!state.isMounted) {\n                if (appear) {\n                    hook = onBeforeAppear || onBeforeEnter;\n                }\n                else {\n                    return;\n                }\n            }\n            // for same element (v-show)\n            if (el._leaveCb) {\n                el._leaveCb(true /* cancelled */);\n            }\n            // for toggled element with same key (v-if)\n            const leavingVNode = leavingVNodesCache[key];\n            if (leavingVNode &&\n                isSameVNodeType(vnode, leavingVNode) &&\n                leavingVNode.el._leaveCb) {\n                // force early removal (not cancelled)\n                leavingVNode.el._leaveCb();\n            }\n            callHook(hook, [el]);\n        },\n        enter(el) {\n            let hook = onEnter;\n            let afterHook = onAfterEnter;\n            let cancelHook = onEnterCancelled;\n            if (!state.isMounted) {\n                if (appear) {\n                    hook = onAppear || onEnter;\n                    afterHook = onAfterAppear || onAfterEnter;\n                    cancelHook = onAppearCancelled || onEnterCancelled;\n                }\n                else {\n                    return;\n                }\n            }\n            let called = false;\n            const done = (el._enterCb = (cancelled) => {\n                if (called)\n                    return;\n                called = true;\n                if (cancelled) {\n                    callHook(cancelHook, [el]);\n                }\n                else {\n                    callHook(afterHook, [el]);\n                }\n                if (hooks.delayedLeave) {\n                    hooks.delayedLeave();\n                }\n                el._enterCb = undefined;\n            });\n            if (hook) {\n                callAsyncHook(hook, [el, done]);\n            }\n            else {\n                done();\n            }\n        },\n        leave(el, remove) {\n            const key = String(vnode.key);\n            if (el._enterCb) {\n                el._enterCb(true /* cancelled */);\n            }\n            if (state.isUnmounting) {\n                return remove();\n            }\n            callHook(onBeforeLeave, [el]);\n            let called = false;\n            const done = (el._leaveCb = (cancelled) => {\n                if (called)\n                    return;\n                called = true;\n                remove();\n                if (cancelled) {\n                    callHook(onLeaveCancelled, [el]);\n                }\n                else {\n                    callHook(onAfterLeave, [el]);\n                }\n                el._leaveCb = undefined;\n                if (leavingVNodesCache[key] === vnode) {\n                    delete leavingVNodesCache[key];\n                }\n            });\n            leavingVNodesCache[key] = vnode;\n            if (onLeave) {\n                callAsyncHook(onLeave, [el, done]);\n            }\n            else {\n                done();\n            }\n        },\n        clone(vnode) {\n            return resolveTransitionHooks(vnode, props, state, instance);\n        }\n    };\n    return hooks;\n}\n// the placeholder really only handles one special case: KeepAlive\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\n// placeholder with empty content to avoid the KeepAlive instance from being\n// unmounted.\nfunction emptyPlaceholder(vnode) {\n    if (isKeepAlive(vnode)) {\n        vnode = cloneVNode(vnode);\n        vnode.children = null;\n        return vnode;\n    }\n}\nfunction getKeepAliveChild(vnode) {\n    return isKeepAlive(vnode)\n        ? vnode.children\n            ? vnode.children[0]\n            : undefined\n        : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n    if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */ && vnode.component) {\n        setTransitionHooks(vnode.component.subTree, hooks);\n    }\n    else if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n    }\n    else {\n        vnode.transition = hooks;\n    }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n    let ret = [];\n    let keyedFragmentCount = 0;\n    for (let i = 0; i < children.length; i++) {\n        let child = children[i];\n        // #5360 inherit parent key in case of <template v-for>\n        const key = parentKey == null\n            ? child.key\n            : String(parentKey) + String(child.key != null ? child.key : i);\n        // handle fragment children case, e.g. v-for\n        if (child.type === Fragment) {\n            if (child.patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */)\n                keyedFragmentCount++;\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));\n        }\n        // comment placeholders should be skipped, e.g. v-if\n        else if (keepComment || child.type !== Comment) {\n            ret.push(key != null ? cloneVNode(child, { key }) : child);\n        }\n    }\n    // #1126 if a transition children list contains multiple sub fragments, these\n    // fragments will be merged into a flat children array. Since each v-for\n    // fragment may contain different static bindings inside, we need to de-op\n    // these children to force full diffs to ensure correct behavior.\n    if (keyedFragmentCount > 1) {\n        for (let i = 0; i < ret.length; i++) {\n            ret[i].patchFlag = -2 /* PatchFlags.BAIL */;\n        }\n    }\n    return ret;\n}\n\n// implementation, close to no-op\nfunction defineComponent(options) {\n    return isFunction(options) ? { setup: options, name: options.name } : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\nfunction defineAsyncComponent(source) {\n    if (isFunction(source)) {\n        source = { loader: source };\n    }\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\n    suspensible = true, onError: userOnError } = source;\n    let pendingRequest = null;\n    let resolvedComp;\n    let retries = 0;\n    const retry = () => {\n        retries++;\n        pendingRequest = null;\n        return load();\n    };\n    const load = () => {\n        let thisRequest;\n        return (pendingRequest ||\n            (thisRequest = pendingRequest =\n                loader()\n                    .catch(err => {\n                    err = err instanceof Error ? err : new Error(String(err));\n                    if (userOnError) {\n                        return new Promise((resolve, reject) => {\n                            const userRetry = () => resolve(retry());\n                            const userFail = () => reject(err);\n                            userOnError(err, userRetry, userFail, retries + 1);\n                        });\n                    }\n                    else {\n                        throw err;\n                    }\n                })\n                    .then((comp) => {\n                    if (thisRequest !== pendingRequest && pendingRequest) {\n                        return pendingRequest;\n                    }\n                    if ((process.env.NODE_ENV !== 'production') && !comp) {\n                        warn(`Async component loader resolved to undefined. ` +\n                            `If you are using retry(), make sure to return its return value.`);\n                    }\n                    // interop module default\n                    if (comp &&\n                        (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\n                        comp = comp.default;\n                    }\n                    if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\n                        throw new Error(`Invalid async component load result: ${comp}`);\n                    }\n                    resolvedComp = comp;\n                    return comp;\n                })));\n    };\n    return defineComponent({\n        name: 'AsyncComponentWrapper',\n        __asyncLoader: load,\n        get __asyncResolved() {\n            return resolvedComp;\n        },\n        setup() {\n            const instance = currentInstance;\n            // already resolved\n            if (resolvedComp) {\n                return () => createInnerComp(resolvedComp, instance);\n            }\n            const onError = (err) => {\n                pendingRequest = null;\n                handleError(err, instance, 13 /* ErrorCodes.ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\n            };\n            // suspense-controlled or SSR.\n            if ((suspensible && instance.suspense) ||\n                (isInSSRComponentSetup)) {\n                return load()\n                    .then(comp => {\n                    return () => createInnerComp(comp, instance);\n                })\n                    .catch(err => {\n                    onError(err);\n                    return () => errorComponent\n                        ? createVNode(errorComponent, {\n                            error: err\n                        })\n                        : null;\n                });\n            }\n            const loaded = ref(false);\n            const error = ref();\n            const delayed = ref(!!delay);\n            if (delay) {\n                setTimeout(() => {\n                    delayed.value = false;\n                }, delay);\n            }\n            if (timeout != null) {\n                setTimeout(() => {\n                    if (!loaded.value && !error.value) {\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\n                        onError(err);\n                        error.value = err;\n                    }\n                }, timeout);\n            }\n            load()\n                .then(() => {\n                loaded.value = true;\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n                    // parent is keep-alive, force update so the loaded component's\n                    // name is taken into account\n                    queueJob(instance.parent.update);\n                }\n            })\n                .catch(err => {\n                onError(err);\n                error.value = err;\n            });\n            return () => {\n                if (loaded.value && resolvedComp) {\n                    return createInnerComp(resolvedComp, instance);\n                }\n                else if (error.value && errorComponent) {\n                    return createVNode(errorComponent, {\n                        error: error.value\n                    });\n                }\n                else if (loadingComponent && !delayed.value) {\n                    return createVNode(loadingComponent);\n                }\n            };\n        }\n    });\n}\nfunction createInnerComp(comp, parent) {\n    const { ref, props, children, ce } = parent.vnode;\n    const vnode = createVNode(comp, props, children);\n    // ensure inner component inherits the async wrapper's ref owner\n    vnode.ref = ref;\n    // pass the custom element callback on to the inner comp\n    // and remove it from the async wrapper\n    vnode.ce = ce;\n    delete parent.vnode.ce;\n    return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n    name: `KeepAlive`,\n    // Marker for special handling inside the renderer. We are not using a ===\n    // check directly on KeepAlive in the renderer, because importing it directly\n    // would prevent it from being tree-shaken.\n    __isKeepAlive: true,\n    props: {\n        include: [String, RegExp, Array],\n        exclude: [String, RegExp, Array],\n        max: [String, Number]\n    },\n    setup(props, { slots }) {\n        const instance = getCurrentInstance();\n        // KeepAlive communicates with the instantiated renderer via the\n        // ctx where the renderer passes in its internals,\n        // and the KeepAlive instance exposes activate/deactivate implementations.\n        // The whole point of this is to avoid importing KeepAlive directly in the\n        // renderer to facilitate tree-shaking.\n        const sharedContext = instance.ctx;\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\n        // for KeepAlive, we just need to render its children\n        if (!sharedContext.renderer) {\n            return () => {\n                const children = slots.default && slots.default();\n                return children && children.length === 1 ? children[0] : children;\n            };\n        }\n        const cache = new Map();\n        const keys = new Set();\n        let current = null;\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            instance.__v_cache = cache;\n        }\n        const parentSuspense = instance.suspense;\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\n        const storageContainer = createElement('div');\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n            const instance = vnode.component;\n            move(vnode, container, anchor, 0 /* MoveType.ENTER */, parentSuspense);\n            // in case props have changed\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\n            queuePostRenderEffect(() => {\n                instance.isDeactivated = false;\n                if (instance.a) {\n                    invokeArrayFns(instance.a);\n                }\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n                if (vnodeHook) {\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\n                }\n            }, parentSuspense);\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                // Update components tree\n                devtoolsComponentAdded(instance);\n            }\n        };\n        sharedContext.deactivate = (vnode) => {\n            const instance = vnode.component;\n            move(vnode, storageContainer, null, 1 /* MoveType.LEAVE */, parentSuspense);\n            queuePostRenderEffect(() => {\n                if (instance.da) {\n                    invokeArrayFns(instance.da);\n                }\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n                if (vnodeHook) {\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\n                }\n                instance.isDeactivated = true;\n            }, parentSuspense);\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                // Update components tree\n                devtoolsComponentAdded(instance);\n            }\n        };\n        function unmount(vnode) {\n            // reset the shapeFlag so it can be properly unmounted\n            resetShapeFlag(vnode);\n            _unmount(vnode, instance, parentSuspense, true);\n        }\n        function pruneCache(filter) {\n            cache.forEach((vnode, key) => {\n                const name = getComponentName(vnode.type);\n                if (name && (!filter || !filter(name))) {\n                    pruneCacheEntry(key);\n                }\n            });\n        }\n        function pruneCacheEntry(key) {\n            const cached = cache.get(key);\n            if (!current || cached.type !== current.type) {\n                unmount(cached);\n            }\n            else if (current) {\n                // current active instance should no longer be kept-alive.\n                // we can't unmount it now but it might be later, so reset its flag now.\n                resetShapeFlag(current);\n            }\n            cache.delete(key);\n            keys.delete(key);\n        }\n        // prune cache on include/exclude prop change\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\n            include && pruneCache(name => matches(include, name));\n            exclude && pruneCache(name => !matches(exclude, name));\n        }, \n        // prune post-render after `current` has been updated\n        { flush: 'post', deep: true });\n        // cache sub tree after render\n        let pendingCacheKey = null;\n        const cacheSubtree = () => {\n            // fix #1621, the pendingCacheKey could be 0\n            if (pendingCacheKey != null) {\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n            }\n        };\n        onMounted(cacheSubtree);\n        onUpdated(cacheSubtree);\n        onBeforeUnmount(() => {\n            cache.forEach(cached => {\n                const { subTree, suspense } = instance;\n                const vnode = getInnerChild(subTree);\n                if (cached.type === vnode.type) {\n                    // current instance will be unmounted as part of keep-alive's unmount\n                    resetShapeFlag(vnode);\n                    // but invoke its deactivated hook here\n                    const da = vnode.component.da;\n                    da && queuePostRenderEffect(da, suspense);\n                    return;\n                }\n                unmount(cached);\n            });\n        });\n        return () => {\n            pendingCacheKey = null;\n            if (!slots.default) {\n                return null;\n            }\n            const children = slots.default();\n            const rawVNode = children[0];\n            if (children.length > 1) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`KeepAlive should contain exactly one component child.`);\n                }\n                current = null;\n                return children;\n            }\n            else if (!isVNode(rawVNode) ||\n                (!(rawVNode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */) &&\n                    !(rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */))) {\n                current = null;\n                return rawVNode;\n            }\n            let vnode = getInnerChild(rawVNode);\n            const comp = vnode.type;\n            // for async components, name check should be based in its loaded\n            // inner component if available\n            const name = getComponentName(isAsyncWrapper(vnode)\n                ? vnode.type.__asyncResolved || {}\n                : comp);\n            const { include, exclude, max } = props;\n            if ((include && (!name || !matches(include, name))) ||\n                (exclude && name && matches(exclude, name))) {\n                current = vnode;\n                return rawVNode;\n            }\n            const key = vnode.key == null ? comp : vnode.key;\n            const cachedVNode = cache.get(key);\n            // clone vnode if it's reused because we are going to mutate it\n            if (vnode.el) {\n                vnode = cloneVNode(vnode);\n                if (rawVNode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                    rawVNode.ssContent = vnode;\n                }\n            }\n            // #1513 it's possible for the returned vnode to be cloned due to attr\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\n            // that is mounted. Instead of caching it directly, we store the pending\n            // key and cache `instance.subTree` (the normalized vnode) in\n            // beforeMount/beforeUpdate hooks.\n            pendingCacheKey = key;\n            if (cachedVNode) {\n                // copy over mounted state\n                vnode.el = cachedVNode.el;\n                vnode.component = cachedVNode.component;\n                if (vnode.transition) {\n                    // recursively update transition hooks on subTree\n                    setTransitionHooks(vnode, vnode.transition);\n                }\n                // avoid vnode being mounted as fresh\n                vnode.shapeFlag |= 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\n                // make this key the freshest\n                keys.delete(key);\n                keys.add(key);\n            }\n            else {\n                keys.add(key);\n                // prune oldest entry\n                if (max && keys.size > parseInt(max, 10)) {\n                    pruneCacheEntry(keys.values().next().value);\n                }\n            }\n            // avoid vnode being unmounted\n            vnode.shapeFlag |= 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\n            current = vnode;\n            return isSuspense(rawVNode.type) ? rawVNode : vnode;\n        };\n    }\n};\n// export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n    if (isArray(pattern)) {\n        return pattern.some((p) => matches(p, name));\n    }\n    else if (isString(pattern)) {\n        return pattern.split(',').includes(name);\n    }\n    else if (pattern.test) {\n        return pattern.test(name);\n    }\n    /* istanbul ignore next */\n    return false;\n}\nfunction onActivated(hook, target) {\n    registerKeepAliveHook(hook, \"a\" /* LifecycleHooks.ACTIVATED */, target);\n}\nfunction onDeactivated(hook, target) {\n    registerKeepAliveHook(hook, \"da\" /* LifecycleHooks.DEACTIVATED */, target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n    // cache the deactivate branch check wrapper for injected hooks so the same\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\n    // deactivation check\".\n    const wrappedHook = hook.__wdc ||\n        (hook.__wdc = () => {\n            // only fire the hook if the target instance is NOT in a deactivated branch.\n            let current = target;\n            while (current) {\n                if (current.isDeactivated) {\n                    return;\n                }\n                current = current.parent;\n            }\n            return hook();\n        });\n    injectHook(type, wrappedHook, target);\n    // In addition to registering it on the target instance, we walk up the parent\n    // chain and register it on all ancestor instances that are keep-alive roots.\n    // This avoids the need to walk the entire component tree when invoking these\n    // hooks, and more importantly, avoids the need to track child components in\n    // arrays.\n    if (target) {\n        let current = target.parent;\n        while (current && current.parent) {\n            if (isKeepAlive(current.parent.vnode)) {\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\n            }\n            current = current.parent;\n        }\n    }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n    // injectHook wraps the original for error handling, so make sure to remove\n    // the wrapped version.\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\n    onUnmounted(() => {\n        remove(keepAliveRoot[type], injected);\n    }, target);\n}\nfunction resetShapeFlag(vnode) {\n    // bitwise operations to remove keep alive flags\n    vnode.shapeFlag &= ~256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\n    vnode.shapeFlag &= ~512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\n}\nfunction getInnerChild(vnode) {\n    return vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */ ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n    if (target) {\n        const hooks = target[type] || (target[type] = []);\n        // cache the error handling wrapper for injected hooks so the same hook\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\n        // handling\".\n        const wrappedHook = hook.__weh ||\n            (hook.__weh = (...args) => {\n                if (target.isUnmounted) {\n                    return;\n                }\n                // disable tracking inside all lifecycle hooks\n                // since they can potentially be called inside effects.\n                pauseTracking();\n                // Set currentInstance during hook invocation.\n                // This assumes the hook does not synchronously trigger other hooks, which\n                // can only be false when the user does something really funky.\n                setCurrentInstance(target);\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\n                unsetCurrentInstance();\n                resetTracking();\n                return res;\n            });\n        if (prepend) {\n            hooks.unshift(wrappedHook);\n        }\n        else {\n            hooks.push(wrappedHook);\n        }\n        return wrappedHook;\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\n        warn(`${apiName} is called when there is no active component instance to be ` +\n            `associated with. ` +\n            `Lifecycle injection APIs can only be used during execution of setup().` +\n            (` If you are using async setup(), make sure to register lifecycle ` +\n                    `hooks before the first await statement.`\n                ));\n    }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* LifecycleHooks.SERVER_PREFETCH */) &&\n    injectHook(lifecycle, (...args) => hook(...args), target);\nconst onBeforeMount = createHook(\"bm\" /* LifecycleHooks.BEFORE_MOUNT */);\nconst onMounted = createHook(\"m\" /* LifecycleHooks.MOUNTED */);\nconst onBeforeUpdate = createHook(\"bu\" /* LifecycleHooks.BEFORE_UPDATE */);\nconst onUpdated = createHook(\"u\" /* LifecycleHooks.UPDATED */);\nconst onBeforeUnmount = createHook(\"bum\" /* LifecycleHooks.BEFORE_UNMOUNT */);\nconst onUnmounted = createHook(\"um\" /* LifecycleHooks.UNMOUNTED */);\nconst onServerPrefetch = createHook(\"sp\" /* LifecycleHooks.SERVER_PREFETCH */);\nconst onRenderTriggered = createHook(\"rtg\" /* LifecycleHooks.RENDER_TRIGGERED */);\nconst onRenderTracked = createHook(\"rtc\" /* LifecycleHooks.RENDER_TRACKED */);\nfunction onErrorCaptured(hook, target = currentInstance) {\n    injectHook(\"ec\" /* LifecycleHooks.ERROR_CAPTURED */, hook, target);\n}\n\n/**\nRuntime helper for applying directives to a vnode. Example usage:\n\nconst comp = resolveComponent('comp')\nconst foo = resolveDirective('foo')\nconst bar = resolveDirective('bar')\n\nreturn withDirectives(h(comp), [\n  [foo, this.x],\n  [bar, this.y]\n])\n*/\nfunction validateDirectiveName(name) {\n    if (isBuiltInDirective(name)) {\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\n    }\n}\n/**\n * Adds directives to a VNode.\n */\nfunction withDirectives(vnode, directives) {\n    const internalInstance = currentRenderingInstance;\n    if (internalInstance === null) {\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\n        return vnode;\n    }\n    const instance = getExposeProxy(internalInstance) ||\n        internalInstance.proxy;\n    const bindings = vnode.dirs || (vnode.dirs = []);\n    for (let i = 0; i < directives.length; i++) {\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n        if (dir) {\n            if (isFunction(dir)) {\n                dir = {\n                    mounted: dir,\n                    updated: dir\n                };\n            }\n            if (dir.deep) {\n                traverse(value);\n            }\n            bindings.push({\n                dir,\n                instance,\n                value,\n                oldValue: void 0,\n                arg,\n                modifiers\n            });\n        }\n    }\n    return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n    const bindings = vnode.dirs;\n    const oldBindings = prevVNode && prevVNode.dirs;\n    for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i];\n        if (oldBindings) {\n            binding.oldValue = oldBindings[i].value;\n        }\n        let hook = binding.dir[name];\n        if (hook) {\n            // disable tracking inside all lifecycle hooks\n            // since they can potentially be called inside effects.\n            pauseTracking();\n            callWithAsyncErrorHandling(hook, instance, 8 /* ErrorCodes.DIRECTIVE_HOOK */, [\n                vnode.el,\n                binding,\n                vnode,\n                prevVNode\n            ]);\n            resetTracking();\n        }\n    }\n}\n\nconst COMPONENTS = 'components';\nconst DIRECTIVES = 'directives';\n/**\n * @private\n */\nfunction resolveComponent(name, maybeSelfReference) {\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol();\n/**\n * @private\n */\nfunction resolveDynamicComponent(component) {\n    if (isString(component)) {\n        return resolveAsset(COMPONENTS, component, false) || component;\n    }\n    else {\n        // invalid types will fallthrough to createVNode and raise warning\n        return (component || NULL_DYNAMIC_COMPONENT);\n    }\n}\n/**\n * @private\n */\nfunction resolveDirective(name) {\n    return resolveAsset(DIRECTIVES, name);\n}\n// implementation\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n    const instance = currentRenderingInstance || currentInstance;\n    if (instance) {\n        const Component = instance.type;\n        // explicit self name has highest priority\n        if (type === COMPONENTS) {\n            const selfName = getComponentName(Component, false /* do not include inferred name to avoid breaking existing code */);\n            if (selfName &&\n                (selfName === name ||\n                    selfName === camelize(name) ||\n                    selfName === capitalize(camelize(name)))) {\n                return Component;\n            }\n        }\n        const res = \n        // local registration\n        // check instance[type] first which is resolved for options API\n        resolve(instance[type] || Component[type], name) ||\n            // global registration\n            resolve(instance.appContext[type], name);\n        if (!res && maybeSelfReference) {\n            // fallback to implicit self-reference\n            return Component;\n        }\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\n            const extra = type === COMPONENTS\n                ? `\\nIf this is a native custom element, make sure to exclude it from ` +\n                    `component resolution via compilerOptions.isCustomElement.`\n                : ``;\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n        }\n        return res;\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\n            `can only be used in render() or setup().`);\n    }\n}\nfunction resolve(registry, name) {\n    return (registry &&\n        (registry[name] ||\n            registry[camelize(name)] ||\n            registry[capitalize(camelize(name))]));\n}\n\n/**\n * Actual implementation\n */\nfunction renderList(source, renderItem, cache, index) {\n    let ret;\n    const cached = (cache && cache[index]);\n    if (isArray(source) || isString(source)) {\n        ret = new Array(source.length);\n        for (let i = 0, l = source.length; i < l; i++) {\n            ret[i] = renderItem(source[i], i, undefined, cached && cached[i]);\n        }\n    }\n    else if (typeof source === 'number') {\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\n            warn(`The v-for range expect an integer value but got ${source}.`);\n        }\n        ret = new Array(source);\n        for (let i = 0; i < source; i++) {\n            ret[i] = renderItem(i + 1, i, undefined, cached && cached[i]);\n        }\n    }\n    else if (isObject(source)) {\n        if (source[Symbol.iterator]) {\n            ret = Array.from(source, (item, i) => renderItem(item, i, undefined, cached && cached[i]));\n        }\n        else {\n            const keys = Object.keys(source);\n            ret = new Array(keys.length);\n            for (let i = 0, l = keys.length; i < l; i++) {\n                const key = keys[i];\n                ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n            }\n        }\n    }\n    else {\n        ret = [];\n    }\n    if (cache) {\n        cache[index] = ret;\n    }\n    return ret;\n}\n\n/**\n * Compiler runtime helper for creating dynamic slots object\n * @private\n */\nfunction createSlots(slots, dynamicSlots) {\n    for (let i = 0; i < dynamicSlots.length; i++) {\n        const slot = dynamicSlots[i];\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\n        if (isArray(slot)) {\n            for (let j = 0; j < slot.length; j++) {\n                slots[slot[j].name] = slot[j].fn;\n            }\n        }\n        else if (slot) {\n            // conditional single slot generated by <template v-if=\"...\" #foo>\n            slots[slot.name] = slot.key\n                ? (...args) => {\n                    const res = slot.fn(...args);\n                    // attach branch key so each conditional branch is considered a\n                    // different fragment\n                    if (res)\n                        res.key = slot.key;\n                    return res;\n                }\n                : slot.fn;\n        }\n    }\n    return slots;\n}\n\n/**\n * Compiler runtime helper for rendering `<slot/>`\n * @private\n */\nfunction renderSlot(slots, name, props = {}, \n// this is not a user-facing function, so the fallback is always generated by\n// the compiler and guaranteed to be a function returning an array\nfallback, noSlotted) {\n    if (currentRenderingInstance.isCE ||\n        (currentRenderingInstance.parent &&\n            isAsyncWrapper(currentRenderingInstance.parent) &&\n            currentRenderingInstance.parent.isCE)) {\n        if (name !== 'default')\n            props.name = name;\n        return createVNode('slot', props, fallback && fallback());\n    }\n    let slot = slots[name];\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\n            `function. You need to mark this component with $dynamic-slots in the ` +\n            `parent template.`);\n        slot = () => [];\n    }\n    // a compiled slot disables block tracking by default to avoid manual\n    // invocation interfering with template-based block tracking, but in\n    // `renderSlot` we can be sure that it's template-based so we can force\n    // enable it.\n    if (slot && slot._c) {\n        slot._d = false;\n    }\n    openBlock();\n    const validSlotContent = slot && ensureValidVNode(slot(props));\n    const rendered = createBlock(Fragment, {\n        key: props.key ||\n            // slot content array of a dynamic conditional slot may have a branch\n            // key attached in the `createSlots` helper, respect that\n            (validSlotContent && validSlotContent.key) ||\n            `_${name}`\n    }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* SlotFlags.STABLE */\n        ? 64 /* PatchFlags.STABLE_FRAGMENT */\n        : -2 /* PatchFlags.BAIL */);\n    if (!noSlotted && rendered.scopeId) {\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\n    }\n    if (slot && slot._c) {\n        slot._d = true;\n    }\n    return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n    return vnodes.some(child => {\n        if (!isVNode(child))\n            return true;\n        if (child.type === Comment)\n            return false;\n        if (child.type === Fragment &&\n            !ensureValidVNode(child.children))\n            return false;\n        return true;\n    })\n        ? vnodes\n        : null;\n}\n\n/**\n * For prefixing keys in v-on=\"obj\" with \"on\"\n * @private\n */\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n    const ret = {};\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\n        warn(`v-on with no argument expects an object value.`);\n        return ret;\n    }\n    for (const key in obj) {\n        ret[preserveCaseIfNecessary && /[A-Z]/.test(key)\n            ? `on:${key}`\n            : toHandlerKey(key)] = obj[key];\n    }\n    return ret;\n}\n\n/**\n * #2437 In Vue 3, functional components do not have a public instance proxy but\n * they exist in the internal parent chain. For code that relies on traversing\n * public $parent chains, skip functional ones and go to the parent instead.\n */\nconst getPublicInstance = (i) => {\n    if (!i)\n        return null;\n    if (isStatefulComponent(i))\n        return getExposeProxy(i) || i.proxy;\n    return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = \n// Move PURE marker to new line to workaround compiler discarding it\n// due to type annotation\n/*#__PURE__*/ extend(Object.create(null), {\n    $: i => i,\n    $el: i => i.vnode.el,\n    $data: i => i.data,\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\n    $parent: i => getPublicInstance(i.parent),\n    $root: i => getPublicInstance(i.root),\n    $emit: i => i.emit,\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\n    $forceUpdate: i => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: i => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\n});\nconst isReservedPrefix = (key) => key === '_' || key === '$';\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n    get({ _: instance }, key) {\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n        // for internal formatters to know that this is a Vue instance\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\n            return true;\n        }\n        // data / props / ctx\n        // This getter gets called for every property access on the render context\n        // during render and is a major hotspot. The most expensive part of this\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\n        // access on a plain object, so we use an accessCache object (with null\n        // prototype) to memoize what access type a key corresponds to.\n        let normalizedProps;\n        if (key[0] !== '$') {\n            const n = accessCache[key];\n            if (n !== undefined) {\n                switch (n) {\n                    case 1 /* AccessTypes.SETUP */:\n                        return setupState[key];\n                    case 2 /* AccessTypes.DATA */:\n                        return data[key];\n                    case 4 /* AccessTypes.CONTEXT */:\n                        return ctx[key];\n                    case 3 /* AccessTypes.PROPS */:\n                        return props[key];\n                    // default: just fallthrough\n                }\n            }\n            else if (hasSetupBinding(setupState, key)) {\n                accessCache[key] = 1 /* AccessTypes.SETUP */;\n                return setupState[key];\n            }\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n                accessCache[key] = 2 /* AccessTypes.DATA */;\n                return data[key];\n            }\n            else if (\n            // only cache other properties when instance has declared (thus stable)\n            // props\n            (normalizedProps = instance.propsOptions[0]) &&\n                hasOwn(normalizedProps, key)) {\n                accessCache[key] = 3 /* AccessTypes.PROPS */;\n                return props[key];\n            }\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n                accessCache[key] = 4 /* AccessTypes.CONTEXT */;\n                return ctx[key];\n            }\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n                accessCache[key] = 0 /* AccessTypes.OTHER */;\n            }\n        }\n        const publicGetter = publicPropertiesMap[key];\n        let cssModule, globalProperties;\n        // public $xxx properties\n        if (publicGetter) {\n            if (key === '$attrs') {\n                track(instance, \"get\" /* TrackOpTypes.GET */, key);\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\n            }\n            return publicGetter(instance);\n        }\n        else if (\n        // css module (injected by vue-loader)\n        (cssModule = type.__cssModules) &&\n            (cssModule = cssModule[key])) {\n            return cssModule;\n        }\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n            // user may set custom properties to `this` that start with `$`\n            accessCache[key] = 4 /* AccessTypes.CONTEXT */;\n            return ctx[key];\n        }\n        else if (\n        // global properties\n        ((globalProperties = appContext.config.globalProperties),\n            hasOwn(globalProperties, key))) {\n            {\n                return globalProperties[key];\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production') &&\n            currentRenderingInstance &&\n            (!isString(key) ||\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\n                // to infinite warning loop\n                key.indexOf('__v') !== 0)) {\n            if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\n            }\n            else if (instance === currentRenderingInstance) {\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\n                    `but is not defined on instance.`);\n            }\n        }\n    },\n    set({ _: instance }, key, value) {\n        const { data, setupState, ctx } = instance;\n        if (hasSetupBinding(setupState, key)) {\n            setupState[key] = value;\n            return true;\n        }\n        else if ((process.env.NODE_ENV !== 'production') &&\n            setupState.__isScriptSetup &&\n            hasOwn(setupState, key)) {\n            warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n            return false;\n        }\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n            data[key] = value;\n            return true;\n        }\n        else if (hasOwn(instance.props, key)) {\n            (process.env.NODE_ENV !== 'production') && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n            return false;\n        }\n        if (key[0] === '$' && key.slice(1) in instance) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Attempting to mutate public property \"${key}\". ` +\n                    `Properties starting with $ are reserved and readonly.`);\n            return false;\n        }\n        else {\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\n                Object.defineProperty(ctx, key, {\n                    enumerable: true,\n                    configurable: true,\n                    value\n                });\n            }\n            else {\n                ctx[key] = value;\n            }\n        }\n        return true;\n    },\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\n        let normalizedProps;\n        return (!!accessCache[key] ||\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\n            hasSetupBinding(setupState, key) ||\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\n            hasOwn(ctx, key) ||\n            hasOwn(publicPropertiesMap, key) ||\n            hasOwn(appContext.config.globalProperties, key));\n    },\n    defineProperty(target, key, descriptor) {\n        if (descriptor.get != null) {\n            // invalidate key cache of a getter based property #5417\n            target._.accessCache[key] = 0;\n        }\n        else if (hasOwn(descriptor, 'value')) {\n            this.set(target, key, descriptor.value, null);\n        }\n        return Reflect.defineProperty(target, key, descriptor);\n    }\n};\nif ((process.env.NODE_ENV !== 'production') && !false) {\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\n            `The keys will be empty in production mode to avoid performance overhead.`);\n        return Reflect.ownKeys(target);\n    };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /*#__PURE__*/ extend({}, PublicInstanceProxyHandlers, {\n    get(target, key) {\n        // fast path for unscopables when using `with` block\n        if (key === Symbol.unscopables) {\n            return;\n        }\n        return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\n        }\n        return has;\n    }\n});\n// dev only\n// In dev mode, the proxy target exposes the same properties as seen on `this`\n// for easier console inspection. In prod mode it will be an empty object so\n// these properties definitions can be skipped.\nfunction createDevRenderContext(instance) {\n    const target = {};\n    // expose internal instance for proxy handlers\n    Object.defineProperty(target, `_`, {\n        configurable: true,\n        enumerable: false,\n        get: () => instance\n    });\n    // expose public properties\n    Object.keys(publicPropertiesMap).forEach(key => {\n        Object.defineProperty(target, key, {\n            configurable: true,\n            enumerable: false,\n            get: () => publicPropertiesMap[key](instance),\n            // intercepted by the proxy so no need for implementation,\n            // but needed to prevent set errors\n            set: NOOP\n        });\n    });\n    return target;\n}\n// dev only\nfunction exposePropsOnRenderContext(instance) {\n    const { ctx, propsOptions: [propsOptions] } = instance;\n    if (propsOptions) {\n        Object.keys(propsOptions).forEach(key => {\n            Object.defineProperty(ctx, key, {\n                enumerable: true,\n                configurable: true,\n                get: () => instance.props[key],\n                set: NOOP\n            });\n        });\n    }\n}\n// dev only\nfunction exposeSetupStateOnRenderContext(instance) {\n    const { ctx, setupState } = instance;\n    Object.keys(toRaw(setupState)).forEach(key => {\n        if (!setupState.__isScriptSetup) {\n            if (isReservedPrefix(key[0])) {\n                warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\n                    `which are reserved prefixes for Vue internals.`);\n                return;\n            }\n            Object.defineProperty(ctx, key, {\n                enumerable: true,\n                configurable: true,\n                get: () => setupState[key],\n                set: NOOP\n            });\n        }\n    });\n}\n\nfunction createDuplicateChecker() {\n    const cache = Object.create(null);\n    return (type, key) => {\n        if (cache[key]) {\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n        }\n        else {\n            cache[key] = type;\n        }\n    };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n    const options = resolveMergedOptions(instance);\n    const publicThis = instance.proxy;\n    const ctx = instance.ctx;\n    // do not cache property access on public proxy during state initialization\n    shouldCacheAccess = false;\n    // call beforeCreate first before accessing other options since\n    // the hook may mutate resolved options (#2791)\n    if (options.beforeCreate) {\n        callHook(options.beforeCreate, instance, \"bc\" /* LifecycleHooks.BEFORE_CREATE */);\n    }\n    const { \n    // state\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \n    // lifecycle\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \n    // public API\n    expose, inheritAttrs, \n    // assets\n    components, directives, filters } = options;\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\n    if ((process.env.NODE_ENV !== 'production')) {\n        const [propsOptions] = instance.propsOptions;\n        if (propsOptions) {\n            for (const key in propsOptions) {\n                checkDuplicateProperties(\"Props\" /* OptionTypes.PROPS */, key);\n            }\n        }\n    }\n    // options initialization order (to be consistent with Vue 2):\n    // - props (already done outside of this function)\n    // - inject\n    // - methods\n    // - data (deferred since it relies on `this` access)\n    // - computed\n    // - watch (deferred since it relies on `this` access)\n    if (injectOptions) {\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties, instance.appContext.config.unwrapInjectedRef);\n    }\n    if (methods) {\n        for (const key in methods) {\n            const methodHandler = methods[key];\n            if (isFunction(methodHandler)) {\n                // In dev mode, we use the `createRenderContext` function to define\n                // methods to the proxy target, and those are read-only but\n                // reconfigurable, so it needs to be redefined here\n                if ((process.env.NODE_ENV !== 'production')) {\n                    Object.defineProperty(ctx, key, {\n                        value: methodHandler.bind(publicThis),\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    });\n                }\n                else {\n                    ctx[key] = methodHandler.bind(publicThis);\n                }\n                if ((process.env.NODE_ENV !== 'production')) {\n                    checkDuplicateProperties(\"Methods\" /* OptionTypes.METHODS */, key);\n                }\n            }\n            else if ((process.env.NODE_ENV !== 'production')) {\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\n                    `Did you reference the function correctly?`);\n            }\n        }\n    }\n    if (dataOptions) {\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\n            warn(`The data option must be a function. ` +\n                `Plain object usage is no longer supported.`);\n        }\n        const data = dataOptions.call(publicThis, publicThis);\n        if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\n                `intend to perform data fetching before component renders, use ` +\n                `async setup() + <Suspense>.`);\n        }\n        if (!isObject(data)) {\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\n        }\n        else {\n            instance.data = reactive(data);\n            if ((process.env.NODE_ENV !== 'production')) {\n                for (const key in data) {\n                    checkDuplicateProperties(\"Data\" /* OptionTypes.DATA */, key);\n                    // expose data on ctx during dev\n                    if (!isReservedPrefix(key[0])) {\n                        Object.defineProperty(ctx, key, {\n                            configurable: true,\n                            enumerable: true,\n                            get: () => data[key],\n                            set: NOOP\n                        });\n                    }\n                }\n            }\n        }\n    }\n    // state initialization complete at this point - start caching access\n    shouldCacheAccess = true;\n    if (computedOptions) {\n        for (const key in computedOptions) {\n            const opt = computedOptions[key];\n            const get = isFunction(opt)\n                ? opt.bind(publicThis, publicThis)\n                : isFunction(opt.get)\n                    ? opt.get.bind(publicThis, publicThis)\n                    : NOOP;\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\n                warn(`Computed property \"${key}\" has no getter.`);\n            }\n            const set = !isFunction(opt) && isFunction(opt.set)\n                ? opt.set.bind(publicThis)\n                : (process.env.NODE_ENV !== 'production')\n                    ? () => {\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\n                    }\n                    : NOOP;\n            const c = computed({\n                get,\n                set\n            });\n            Object.defineProperty(ctx, key, {\n                enumerable: true,\n                configurable: true,\n                get: () => c.value,\n                set: v => (c.value = v)\n            });\n            if ((process.env.NODE_ENV !== 'production')) {\n                checkDuplicateProperties(\"Computed\" /* OptionTypes.COMPUTED */, key);\n            }\n        }\n    }\n    if (watchOptions) {\n        for (const key in watchOptions) {\n            createWatcher(watchOptions[key], ctx, publicThis, key);\n        }\n    }\n    if (provideOptions) {\n        const provides = isFunction(provideOptions)\n            ? provideOptions.call(publicThis)\n            : provideOptions;\n        Reflect.ownKeys(provides).forEach(key => {\n            provide(key, provides[key]);\n        });\n    }\n    if (created) {\n        callHook(created, instance, \"c\" /* LifecycleHooks.CREATED */);\n    }\n    function registerLifecycleHook(register, hook) {\n        if (isArray(hook)) {\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\n        }\n        else if (hook) {\n            register(hook.bind(publicThis));\n        }\n    }\n    registerLifecycleHook(onBeforeMount, beforeMount);\n    registerLifecycleHook(onMounted, mounted);\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n    registerLifecycleHook(onUpdated, updated);\n    registerLifecycleHook(onActivated, activated);\n    registerLifecycleHook(onDeactivated, deactivated);\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\n    registerLifecycleHook(onRenderTracked, renderTracked);\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n    registerLifecycleHook(onUnmounted, unmounted);\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\n    if (isArray(expose)) {\n        if (expose.length) {\n            const exposed = instance.exposed || (instance.exposed = {});\n            expose.forEach(key => {\n                Object.defineProperty(exposed, key, {\n                    get: () => publicThis[key],\n                    set: val => (publicThis[key] = val)\n                });\n            });\n        }\n        else if (!instance.exposed) {\n            instance.exposed = {};\n        }\n    }\n    // options that are handled when creating the instance but also need to be\n    // applied from mixins\n    if (render && instance.render === NOOP) {\n        instance.render = render;\n    }\n    if (inheritAttrs != null) {\n        instance.inheritAttrs = inheritAttrs;\n    }\n    // asset options.\n    if (components)\n        instance.components = components;\n    if (directives)\n        instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP, unwrapRef = false) {\n    if (isArray(injectOptions)) {\n        injectOptions = normalizeInject(injectOptions);\n    }\n    for (const key in injectOptions) {\n        const opt = injectOptions[key];\n        let injected;\n        if (isObject(opt)) {\n            if ('default' in opt) {\n                injected = inject(opt.from || key, opt.default, true /* treat default function as factory */);\n            }\n            else {\n                injected = inject(opt.from || key);\n            }\n        }\n        else {\n            injected = inject(opt);\n        }\n        if (isRef(injected)) {\n            // TODO remove the check in 3.3\n            if (unwrapRef) {\n                Object.defineProperty(ctx, key, {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => injected.value,\n                    set: v => (injected.value = v)\n                });\n            }\n            else {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`injected property \"${key}\" is a ref and will be auto-unwrapped ` +\n                        `and no longer needs \\`.value\\` in the next minor release. ` +\n                        `To opt-in to the new behavior now, ` +\n                        `set \\`app.config.unwrapInjectedRef = true\\` (this config is ` +\n                        `temporary and will not be needed in the future.)`);\n                }\n                ctx[key] = injected;\n            }\n        }\n        else {\n            ctx[key] = injected;\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            checkDuplicateProperties(\"Inject\" /* OptionTypes.INJECT */, key);\n        }\n    }\n}\nfunction callHook(hook, instance, type) {\n    callWithAsyncErrorHandling(isArray(hook)\n        ? hook.map(h => h.bind(instance.proxy))\n        : hook.bind(instance.proxy), instance, type);\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n    const getter = key.includes('.')\n        ? createPathGetter(publicThis, key)\n        : () => publicThis[key];\n    if (isString(raw)) {\n        const handler = ctx[raw];\n        if (isFunction(handler)) {\n            watch(getter, handler);\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n        }\n    }\n    else if (isFunction(raw)) {\n        watch(getter, raw.bind(publicThis));\n    }\n    else if (isObject(raw)) {\n        if (isArray(raw)) {\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\n        }\n        else {\n            const handler = isFunction(raw.handler)\n                ? raw.handler.bind(publicThis)\n                : ctx[raw.handler];\n            if (isFunction(handler)) {\n                watch(getter, handler, raw);\n            }\n            else if ((process.env.NODE_ENV !== 'production')) {\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n            }\n        }\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`Invalid watch option: \"${key}\"`, raw);\n    }\n}\n/**\n * Resolve merged options and cache it on the component.\n * This is done only once per-component since the merging does not involve\n * instances.\n */\nfunction resolveMergedOptions(instance) {\n    const base = instance.type;\n    const { mixins, extends: extendsOptions } = base;\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\n    const cached = cache.get(base);\n    let resolved;\n    if (cached) {\n        resolved = cached;\n    }\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\n        {\n            resolved = base;\n        }\n    }\n    else {\n        resolved = {};\n        if (globalMixins.length) {\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\n        }\n        mergeOptions(resolved, base, optionMergeStrategies);\n    }\n    if (isObject(base)) {\n        cache.set(base, resolved);\n    }\n    return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n    const { mixins, extends: extendsOptions } = from;\n    if (extendsOptions) {\n        mergeOptions(to, extendsOptions, strats, true);\n    }\n    if (mixins) {\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\n    }\n    for (const key in from) {\n        if (asMixin && key === 'expose') {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\n                    `It should only be declared in the base component itself.`);\n        }\n        else {\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\n        }\n    }\n    return to;\n}\nconst internalOptionMergeStrats = {\n    data: mergeDataFn,\n    props: mergeObjectOptions,\n    emits: mergeObjectOptions,\n    // objects\n    methods: mergeObjectOptions,\n    computed: mergeObjectOptions,\n    // lifecycle\n    beforeCreate: mergeAsArray,\n    created: mergeAsArray,\n    beforeMount: mergeAsArray,\n    mounted: mergeAsArray,\n    beforeUpdate: mergeAsArray,\n    updated: mergeAsArray,\n    beforeDestroy: mergeAsArray,\n    beforeUnmount: mergeAsArray,\n    destroyed: mergeAsArray,\n    unmounted: mergeAsArray,\n    activated: mergeAsArray,\n    deactivated: mergeAsArray,\n    errorCaptured: mergeAsArray,\n    serverPrefetch: mergeAsArray,\n    // assets\n    components: mergeObjectOptions,\n    directives: mergeObjectOptions,\n    // watch\n    watch: mergeWatchOptions,\n    // provide / inject\n    provide: mergeDataFn,\n    inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n    if (!from) {\n        return to;\n    }\n    if (!to) {\n        return from;\n    }\n    return function mergedDataFn() {\n        return (extend)(isFunction(to) ? to.call(this, this) : to, isFunction(from) ? from.call(this, this) : from);\n    };\n}\nfunction mergeInject(to, from) {\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n    if (isArray(raw)) {\n        const res = {};\n        for (let i = 0; i < raw.length; i++) {\n            res[raw[i]] = raw[i];\n        }\n        return res;\n    }\n    return raw;\n}\nfunction mergeAsArray(to, from) {\n    return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n    return to ? extend(extend(Object.create(null), to), from) : from;\n}\nfunction mergeWatchOptions(to, from) {\n    if (!to)\n        return from;\n    if (!from)\n        return to;\n    const merged = extend(Object.create(null), to);\n    for (const key in from) {\n        merged[key] = mergeAsArray(to[key], from[key]);\n    }\n    return merged;\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\nisSSR = false) {\n    const props = {};\n    const attrs = {};\n    def(attrs, InternalObjectKey, 1);\n    instance.propsDefaults = Object.create(null);\n    setFullProps(instance, rawProps, props, attrs);\n    // ensure all declared prop keys are present\n    for (const key in instance.propsOptions[0]) {\n        if (!(key in props)) {\n            props[key] = undefined;\n        }\n    }\n    // validation\n    if ((process.env.NODE_ENV !== 'production')) {\n        validateProps(rawProps || {}, props, instance);\n    }\n    if (isStateful) {\n        // stateful\n        instance.props = isSSR ? props : shallowReactive(props);\n    }\n    else {\n        if (!instance.type.props) {\n            // functional w/ optional props, props === attrs\n            instance.props = attrs;\n        }\n        else {\n            // functional w/ declared props\n            instance.props = props;\n        }\n    }\n    instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n    while (instance) {\n        if (instance.type.__hmrId)\n            return true;\n        instance = instance.parent;\n    }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n    const { props, attrs, vnode: { patchFlag } } = instance;\n    const rawCurrentProps = toRaw(props);\n    const [options] = instance.propsOptions;\n    let hasAttrsChanged = false;\n    if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !((process.env.NODE_ENV !== 'production') && isInHmrContext(instance)) &&\n        (optimized || patchFlag > 0) &&\n        !(patchFlag & 16 /* PatchFlags.FULL_PROPS */)) {\n        if (patchFlag & 8 /* PatchFlags.PROPS */) {\n            // Compiler-generated props & no keys change, just set the updated\n            // the props.\n            const propsToUpdate = instance.vnode.dynamicProps;\n            for (let i = 0; i < propsToUpdate.length; i++) {\n                let key = propsToUpdate[i];\n                // skip if the prop key is a declared emit event listener\n                if (isEmitListener(instance.emitsOptions, key)) {\n                    continue;\n                }\n                // PROPS flag guarantees rawProps to be non-null\n                const value = rawProps[key];\n                if (options) {\n                    // attr / props separation was done on init and will be consistent\n                    // in this code path, so just check if attrs have it.\n                    if (hasOwn(attrs, key)) {\n                        if (value !== attrs[key]) {\n                            attrs[key] = value;\n                            hasAttrsChanged = true;\n                        }\n                    }\n                    else {\n                        const camelizedKey = camelize(key);\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\n                    }\n                }\n                else {\n                    if (value !== attrs[key]) {\n                        attrs[key] = value;\n                        hasAttrsChanged = true;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        // full props update.\n        if (setFullProps(instance, rawProps, props, attrs)) {\n            hasAttrsChanged = true;\n        }\n        // in case of dynamic props, check if we need to delete keys from\n        // the props object\n        let kebabKey;\n        for (const key in rawCurrentProps) {\n            if (!rawProps ||\n                // for camelCase\n                (!hasOwn(rawProps, key) &&\n                    // it's possible the original props was passed in as kebab-case\n                    // and converted to camelCase (#955)\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\n                if (options) {\n                    if (rawPrevProps &&\n                        // for camelCase\n                        (rawPrevProps[key] !== undefined ||\n                            // for kebab-case\n                            rawPrevProps[kebabKey] !== undefined)) {\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\n                    }\n                }\n                else {\n                    delete props[key];\n                }\n            }\n        }\n        // in the case of functional component w/o props declaration, props and\n        // attrs point to the same object so it should already have been updated.\n        if (attrs !== rawCurrentProps) {\n            for (const key in attrs) {\n                if (!rawProps ||\n                    (!hasOwn(rawProps, key) &&\n                        (!false ))) {\n                    delete attrs[key];\n                    hasAttrsChanged = true;\n                }\n            }\n        }\n    }\n    // trigger updates for $attrs in case it's used in component slots\n    if (hasAttrsChanged) {\n        trigger(instance, \"set\" /* TriggerOpTypes.SET */, '$attrs');\n    }\n    if ((process.env.NODE_ENV !== 'production')) {\n        validateProps(rawProps || {}, props, instance);\n    }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n    const [options, needCastKeys] = instance.propsOptions;\n    let hasAttrsChanged = false;\n    let rawCastValues;\n    if (rawProps) {\n        for (let key in rawProps) {\n            // key, ref are reserved and never passed down\n            if (isReservedProp(key)) {\n                continue;\n            }\n            const value = rawProps[key];\n            // prop option names are camelized during normalization, so to support\n            // kebab -> camel conversion here we need to camelize the key.\n            let camelKey;\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n                    props[camelKey] = value;\n                }\n                else {\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n                }\n            }\n            else if (!isEmitListener(instance.emitsOptions, key)) {\n                if (!(key in attrs) || value !== attrs[key]) {\n                    attrs[key] = value;\n                    hasAttrsChanged = true;\n                }\n            }\n        }\n    }\n    if (needCastKeys) {\n        const rawCurrentProps = toRaw(props);\n        const castValues = rawCastValues || EMPTY_OBJ;\n        for (let i = 0; i < needCastKeys.length; i++) {\n            const key = needCastKeys[i];\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\n        }\n    }\n    return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n    const opt = options[key];\n    if (opt != null) {\n        const hasDefault = hasOwn(opt, 'default');\n        // default values\n        if (hasDefault && value === undefined) {\n            const defaultValue = opt.default;\n            if (opt.type !== Function && isFunction(defaultValue)) {\n                const { propsDefaults } = instance;\n                if (key in propsDefaults) {\n                    value = propsDefaults[key];\n                }\n                else {\n                    setCurrentInstance(instance);\n                    value = propsDefaults[key] = defaultValue.call(null, props);\n                    unsetCurrentInstance();\n                }\n            }\n            else {\n                value = defaultValue;\n            }\n        }\n        // boolean casting\n        if (opt[0 /* BooleanFlags.shouldCast */]) {\n            if (isAbsent && !hasDefault) {\n                value = false;\n            }\n            else if (opt[1 /* BooleanFlags.shouldCastTrue */] &&\n                (value === '' || value === hyphenate(key))) {\n                value = true;\n            }\n        }\n    }\n    return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n    const cache = appContext.propsCache;\n    const cached = cache.get(comp);\n    if (cached) {\n        return cached;\n    }\n    const raw = comp.props;\n    const normalized = {};\n    const needCastKeys = [];\n    // apply mixin/extends props\n    let hasExtends = false;\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n        const extendProps = (raw) => {\n            hasExtends = true;\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\n            extend(normalized, props);\n            if (keys)\n                needCastKeys.push(...keys);\n        };\n        if (!asMixin && appContext.mixins.length) {\n            appContext.mixins.forEach(extendProps);\n        }\n        if (comp.extends) {\n            extendProps(comp.extends);\n        }\n        if (comp.mixins) {\n            comp.mixins.forEach(extendProps);\n        }\n    }\n    if (!raw && !hasExtends) {\n        if (isObject(comp)) {\n            cache.set(comp, EMPTY_ARR);\n        }\n        return EMPTY_ARR;\n    }\n    if (isArray(raw)) {\n        for (let i = 0; i < raw.length; i++) {\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\n                warn(`props must be strings when using array syntax.`, raw[i]);\n            }\n            const normalizedKey = camelize(raw[i]);\n            if (validatePropName(normalizedKey)) {\n                normalized[normalizedKey] = EMPTY_OBJ;\n            }\n        }\n    }\n    else if (raw) {\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\n            warn(`invalid props options`, raw);\n        }\n        for (const key in raw) {\n            const normalizedKey = camelize(key);\n            if (validatePropName(normalizedKey)) {\n                const opt = raw[key];\n                const prop = (normalized[normalizedKey] =\n                    isArray(opt) || isFunction(opt) ? { type: opt } : Object.assign({}, opt));\n                if (prop) {\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\n                    const stringIndex = getTypeIndex(String, prop.type);\n                    prop[0 /* BooleanFlags.shouldCast */] = booleanIndex > -1;\n                    prop[1 /* BooleanFlags.shouldCastTrue */] =\n                        stringIndex < 0 || booleanIndex < stringIndex;\n                    // if the prop needs boolean casting or default value\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\n                        needCastKeys.push(normalizedKey);\n                    }\n                }\n            }\n        }\n    }\n    const res = [normalized, needCastKeys];\n    if (isObject(comp)) {\n        cache.set(comp, res);\n    }\n    return res;\n}\nfunction validatePropName(key) {\n    if (key[0] !== '$') {\n        return true;\n    }\n    else if ((process.env.NODE_ENV !== 'production')) {\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n    }\n    return false;\n}\n// use function string name to check type constructors\n// so that it works across vms / iframes.\nfunction getType(ctor) {\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\n    return match ? match[1] : ctor === null ? 'null' : '';\n}\nfunction isSameType(a, b) {\n    return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n    if (isArray(expectedTypes)) {\n        return expectedTypes.findIndex(t => isSameType(t, type));\n    }\n    else if (isFunction(expectedTypes)) {\n        return isSameType(expectedTypes, type) ? 0 : -1;\n    }\n    return -1;\n}\n/**\n * dev only\n */\nfunction validateProps(rawProps, props, instance) {\n    const resolvedValues = toRaw(props);\n    const options = instance.propsOptions[0];\n    for (const key in options) {\n        let opt = options[key];\n        if (opt == null)\n            continue;\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\n    }\n}\n/**\n * dev only\n */\nfunction validateProp(name, value, prop, isAbsent) {\n    const { type, required, validator } = prop;\n    // required!\n    if (required && isAbsent) {\n        warn('Missing required prop: \"' + name + '\"');\n        return;\n    }\n    // missing but optional\n    if (value == null && !prop.required) {\n        return;\n    }\n    // type check\n    if (type != null && type !== true) {\n        let isValid = false;\n        const types = isArray(type) ? type : [type];\n        const expectedTypes = [];\n        // value is valid as long as one of the specified types match\n        for (let i = 0; i < types.length && !isValid; i++) {\n            const { valid, expectedType } = assertType(value, types[i]);\n            expectedTypes.push(expectedType || '');\n            isValid = valid;\n        }\n        if (!isValid) {\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\n            return;\n        }\n    }\n    // custom validator\n    if (validator && !validator(value)) {\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n    }\n}\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\n/**\n * dev only\n */\nfunction assertType(value, type) {\n    let valid;\n    const expectedType = getType(type);\n    if (isSimpleType(expectedType)) {\n        const t = typeof value;\n        valid = t === expectedType.toLowerCase();\n        // for primitive wrapper objects\n        if (!valid && t === 'object') {\n            valid = value instanceof type;\n        }\n    }\n    else if (expectedType === 'Object') {\n        valid = isObject(value);\n    }\n    else if (expectedType === 'Array') {\n        valid = isArray(value);\n    }\n    else if (expectedType === 'null') {\n        valid = value === null;\n    }\n    else {\n        valid = value instanceof type;\n    }\n    return {\n        valid,\n        expectedType\n    };\n}\n/**\n * dev only\n */\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\n    const expectedType = expectedTypes[0];\n    const receivedType = toRawType(value);\n    const expectedValue = styleValue(value, expectedType);\n    const receivedValue = styleValue(value, receivedType);\n    // check if we need to specify expected value\n    if (expectedTypes.length === 1 &&\n        isExplicable(expectedType) &&\n        !isBoolean(expectedType, receivedType)) {\n        message += ` with value ${expectedValue}`;\n    }\n    message += `, got ${receivedType} `;\n    // check if we need to specify received value\n    if (isExplicable(receivedType)) {\n        message += `with value ${receivedValue}.`;\n    }\n    return message;\n}\n/**\n * dev only\n */\nfunction styleValue(value, type) {\n    if (type === 'String') {\n        return `\"${value}\"`;\n    }\n    else if (type === 'Number') {\n        return `${Number(value)}`;\n    }\n    else {\n        return `${value}`;\n    }\n}\n/**\n * dev only\n */\nfunction isExplicable(type) {\n    const explicitTypes = ['string', 'number', 'boolean'];\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\n}\n/**\n * dev only\n */\nfunction isBoolean(...args) {\n    return args.some(elem => elem.toLowerCase() === 'boolean');\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\nconst normalizeSlotValue = (value) => isArray(value)\n    ? value.map(normalizeVNode)\n    : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n    if (rawSlot._n) {\n        // already normalized - #5353\n        return rawSlot;\n    }\n    const normalized = withCtx((...args) => {\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\n                `this will not track dependencies used in the slot. ` +\n                `Invoke the slot function inside the render function instead.`);\n        }\n        return normalizeSlotValue(rawSlot(...args));\n    }, ctx);\n    normalized._c = false;\n    return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n    const ctx = rawSlots._ctx;\n    for (const key in rawSlots) {\n        if (isInternalKey(key))\n            continue;\n        const value = rawSlots[key];\n        if (isFunction(value)) {\n            slots[key] = normalizeSlot(key, value, ctx);\n        }\n        else if (value != null) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                !(false )) {\n                warn(`Non-function value encountered for slot \"${key}\". ` +\n                    `Prefer function slots for better performance.`);\n            }\n            const normalized = normalizeSlotValue(value);\n            slots[key] = () => normalized;\n        }\n    }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n    if ((process.env.NODE_ENV !== 'production') &&\n        !isKeepAlive(instance.vnode) &&\n        !(false )) {\n        warn(`Non-function value encountered for default slot. ` +\n            `Prefer function slots for better performance.`);\n    }\n    const normalized = normalizeSlotValue(children);\n    instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n    if (instance.vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\n        const type = children._;\n        if (type) {\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\n            // we should avoid the proxy object polluting the slots of the internal instance\n            instance.slots = toRaw(children);\n            // make compiler marker non-enumerable\n            def(children, '_', type);\n        }\n        else {\n            normalizeObjectSlots(children, (instance.slots = {}));\n        }\n    }\n    else {\n        instance.slots = {};\n        if (children) {\n            normalizeVNodeSlots(instance, children);\n        }\n    }\n    def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n    const { vnode, slots } = instance;\n    let needDeletionCheck = true;\n    let deletionComparisonTarget = EMPTY_OBJ;\n    if (vnode.shapeFlag & 32 /* ShapeFlags.SLOTS_CHILDREN */) {\n        const type = children._;\n        if (type) {\n            // compiled slots.\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\n                // Parent was HMR updated so slot content may have changed.\n                // force update slots and mark instance for hmr as well\n                extend(slots, children);\n            }\n            else if (optimized && type === 1 /* SlotFlags.STABLE */) {\n                // compiled AND stable.\n                // no need to update, and skip stale slots removal.\n                needDeletionCheck = false;\n            }\n            else {\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\n                // normalization.\n                extend(slots, children);\n                // #2893\n                // when rendering the optimized slots by manually written render function,\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\n                // i.e. let the `renderSlot` create the bailed Fragment\n                if (!optimized && type === 1 /* SlotFlags.STABLE */) {\n                    delete slots._;\n                }\n            }\n        }\n        else {\n            needDeletionCheck = !children.$stable;\n            normalizeObjectSlots(children, slots);\n        }\n        deletionComparisonTarget = children;\n    }\n    else if (children) {\n        // non slot object children (direct value) passed to a component\n        normalizeVNodeSlots(instance, children);\n        deletionComparisonTarget = { default: 1 };\n    }\n    // delete stale slots\n    if (needDeletionCheck) {\n        for (const key in slots) {\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n                delete slots[key];\n            }\n        }\n    }\n};\n\nfunction createAppContext() {\n    return {\n        app: null,\n        config: {\n            isNativeTag: NO,\n            performance: false,\n            globalProperties: {},\n            optionMergeStrategies: {},\n            errorHandler: undefined,\n            warnHandler: undefined,\n            compilerOptions: {}\n        },\n        mixins: [],\n        components: {},\n        directives: {},\n        provides: Object.create(null),\n        optionsCache: new WeakMap(),\n        propsCache: new WeakMap(),\n        emitsCache: new WeakMap()\n    };\n}\nlet uid = 0;\nfunction createAppAPI(render, hydrate) {\n    return function createApp(rootComponent, rootProps = null) {\n        if (!isFunction(rootComponent)) {\n            rootComponent = Object.assign({}, rootComponent);\n        }\n        if (rootProps != null && !isObject(rootProps)) {\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\n            rootProps = null;\n        }\n        const context = createAppContext();\n        const installedPlugins = new Set();\n        let isMounted = false;\n        const app = (context.app = {\n            _uid: uid++,\n            _component: rootComponent,\n            _props: rootProps,\n            _container: null,\n            _context: context,\n            _instance: null,\n            version,\n            get config() {\n                return context.config;\n            },\n            set config(v) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\n                }\n            },\n            use(plugin, ...options) {\n                if (installedPlugins.has(plugin)) {\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\n                }\n                else if (plugin && isFunction(plugin.install)) {\n                    installedPlugins.add(plugin);\n                    plugin.install(app, ...options);\n                }\n                else if (isFunction(plugin)) {\n                    installedPlugins.add(plugin);\n                    plugin(app, ...options);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\n                        `function.`);\n                }\n                return app;\n            },\n            mixin(mixin) {\n                if (__VUE_OPTIONS_API__) {\n                    if (!context.mixins.includes(mixin)) {\n                        context.mixins.push(mixin);\n                    }\n                    else if ((process.env.NODE_ENV !== 'production')) {\n                        warn('Mixin has already been applied to target app' +\n                            (mixin.name ? `: ${mixin.name}` : ''));\n                    }\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Mixins are only available in builds supporting Options API');\n                }\n                return app;\n            },\n            component(name, component) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    validateComponentName(name, context.config);\n                }\n                if (!component) {\n                    return context.components[name];\n                }\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\n                    warn(`Component \"${name}\" has already been registered in target app.`);\n                }\n                context.components[name] = component;\n                return app;\n            },\n            directive(name, directive) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    validateDirectiveName(name);\n                }\n                if (!directive) {\n                    return context.directives[name];\n                }\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\n                }\n                context.directives[name] = directive;\n                return app;\n            },\n            mount(rootContainer, isHydrate, isSVG) {\n                if (!isMounted) {\n                    // #5571\n                    if ((process.env.NODE_ENV !== 'production') && rootContainer.__vue_app__) {\n                        warn(`There is already an app instance mounted on the host container.\\n` +\n                            ` If you want to mount another app on the same host container,` +\n                            ` you need to unmount the previous app by calling \\`app.unmount()\\` first.`);\n                    }\n                    const vnode = createVNode(rootComponent, rootProps);\n                    // store app context on the root VNode.\n                    // this will be set on the root instance on initial mount.\n                    vnode.appContext = context;\n                    // HMR root reload\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        context.reload = () => {\n                            render(cloneVNode(vnode), rootContainer, isSVG);\n                        };\n                    }\n                    if (isHydrate && hydrate) {\n                        hydrate(vnode, rootContainer);\n                    }\n                    else {\n                        render(vnode, rootContainer, isSVG);\n                    }\n                    isMounted = true;\n                    app._container = rootContainer;\n                    rootContainer.__vue_app__ = app;\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                        app._instance = vnode.component;\n                        devtoolsInitApp(app, version);\n                    }\n                    return getExposeProxy(vnode.component) || vnode.component.proxy;\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`App has already been mounted.\\n` +\n                        `If you want to remount the same app, move your app creation logic ` +\n                        `into a factory function and create fresh app instances for each ` +\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\n                }\n            },\n            unmount() {\n                if (isMounted) {\n                    render(null, app._container);\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                        app._instance = null;\n                        devtoolsUnmountApp(app);\n                    }\n                    delete app._container.__vue_app__;\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`Cannot unmount an app that is not mounted.`);\n                }\n            },\n            provide(key, value) {\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\n                    warn(`App already provides property with key \"${String(key)}\". ` +\n                        `It will be overwritten with the new value.`);\n                }\n                context.provides[key] = value;\n                return app;\n            }\n        });\n        return app;\n    };\n}\n\n/**\n * Function for handling a template ref\n */\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n    if (isArray(rawRef)) {\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\n        return;\n    }\n    if (isAsyncWrapper(vnode) && !isUnmount) {\n        // when mounting async components, nothing needs to be done,\n        // because the template ref is forwarded to inner component\n        return;\n    }\n    const refValue = vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\n        : vnode.el;\n    const value = isUnmount ? null : refValue;\n    const { i: owner, r: ref } = rawRef;\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\n            `A vnode with ref must be created inside the render function.`);\n        return;\n    }\n    const oldRef = oldRawRef && oldRawRef.r;\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\n    const setupState = owner.setupState;\n    // dynamic ref changed. unset old ref\n    if (oldRef != null && oldRef !== ref) {\n        if (isString(oldRef)) {\n            refs[oldRef] = null;\n            if (hasOwn(setupState, oldRef)) {\n                setupState[oldRef] = null;\n            }\n        }\n        else if (isRef(oldRef)) {\n            oldRef.value = null;\n        }\n    }\n    if (isFunction(ref)) {\n        callWithErrorHandling(ref, owner, 12 /* ErrorCodes.FUNCTION_REF */, [value, refs]);\n    }\n    else {\n        const _isString = isString(ref);\n        const _isRef = isRef(ref);\n        if (_isString || _isRef) {\n            const doSet = () => {\n                if (rawRef.f) {\n                    const existing = _isString\n                        ? hasOwn(setupState, ref)\n                            ? setupState[ref]\n                            : refs[ref]\n                        : ref.value;\n                    if (isUnmount) {\n                        isArray(existing) && remove(existing, refValue);\n                    }\n                    else {\n                        if (!isArray(existing)) {\n                            if (_isString) {\n                                refs[ref] = [refValue];\n                                if (hasOwn(setupState, ref)) {\n                                    setupState[ref] = refs[ref];\n                                }\n                            }\n                            else {\n                                ref.value = [refValue];\n                                if (rawRef.k)\n                                    refs[rawRef.k] = ref.value;\n                            }\n                        }\n                        else if (!existing.includes(refValue)) {\n                            existing.push(refValue);\n                        }\n                    }\n                }\n                else if (_isString) {\n                    refs[ref] = value;\n                    if (hasOwn(setupState, ref)) {\n                        setupState[ref] = value;\n                    }\n                }\n                else if (_isRef) {\n                    ref.value = value;\n                    if (rawRef.k)\n                        refs[rawRef.k] = value;\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Invalid template ref type:', ref, `(${typeof ref})`);\n                }\n            };\n            if (value) {\n                doSet.id = -1;\n                queuePostRenderEffect(doSet, parentSuspense);\n            }\n            else {\n                doSet();\n            }\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn('Invalid template ref type:', ref, `(${typeof ref})`);\n        }\n    }\n}\n\nlet hasMismatch = false;\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\nconst isComment = (node) => node.nodeType === 8 /* DOMNodeTypes.COMMENT */;\n// Note: hydration is DOM-specific\n// But we have to place it in core due to tight coupling with core - splitting\n// it out creates a ton of unnecessary complexity.\n// Hydration also depends on some renderer internal logic which needs to be\n// passed in via arguments.\nfunction createHydrationFunctions(rendererInternals) {\n    const { mt: mountComponent, p: patch, o: { patchProp, createText, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\n    const hydrate = (vnode, container) => {\n        if (!container.hasChildNodes()) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\n                    `Performing full mount instead.`);\n            patch(null, vnode, container);\n            flushPostFlushCbs();\n            container._vnode = vnode;\n            return;\n        }\n        hasMismatch = false;\n        hydrateNode(container.firstChild, vnode, null, null, null);\n        flushPostFlushCbs();\n        container._vnode = vnode;\n        if (hasMismatch && !false) {\n            // this error should show up in production\n            console.error(`Hydration completed but contains mismatches.`);\n        }\n    };\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n        const isFragmentStart = isComment(node) && node.data === '[';\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\n        const { type, ref, shapeFlag, patchFlag } = vnode;\n        let domType = node.nodeType;\n        vnode.el = node;\n        if (patchFlag === -2 /* PatchFlags.BAIL */) {\n            optimized = false;\n            vnode.dynamicChildren = null;\n        }\n        let nextNode = null;\n        switch (type) {\n            case Text:\n                if (domType !== 3 /* DOMNodeTypes.TEXT */) {\n                    // #5728 empty text node inside a slot can cause hydration failure\n                    // because the server rendered HTML won't contain a text node\n                    if (vnode.children === '') {\n                        insert((vnode.el = createText('')), parentNode(node), node);\n                        nextNode = node;\n                    }\n                    else {\n                        nextNode = onMismatch();\n                    }\n                }\n                else {\n                    if (node.data !== vnode.children) {\n                        hasMismatch = true;\n                        (process.env.NODE_ENV !== 'production') &&\n                            warn(`Hydration text mismatch:` +\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\n                        node.data = vnode.children;\n                    }\n                    nextNode = nextSibling(node);\n                }\n                break;\n            case Comment:\n                if (domType !== 8 /* DOMNodeTypes.COMMENT */ || isFragmentStart) {\n                    nextNode = onMismatch();\n                }\n                else {\n                    nextNode = nextSibling(node);\n                }\n                break;\n            case Static:\n                if (isFragmentStart) {\n                    // entire template is static but SSRed as a fragment\n                    node = nextSibling(node);\n                    domType = node.nodeType;\n                }\n                if (domType === 1 /* DOMNodeTypes.ELEMENT */ || domType === 3 /* DOMNodeTypes.TEXT */) {\n                    // determine anchor, adopt content\n                    nextNode = node;\n                    // if the static vnode has its content stripped during build,\n                    // adopt it from the server-rendered HTML.\n                    const needToAdoptContent = !vnode.children.length;\n                    for (let i = 0; i < vnode.staticCount; i++) {\n                        if (needToAdoptContent)\n                            vnode.children +=\n                                nextNode.nodeType === 1 /* DOMNodeTypes.ELEMENT */\n                                    ? nextNode.outerHTML\n                                    : nextNode.data;\n                        if (i === vnode.staticCount - 1) {\n                            vnode.anchor = nextNode;\n                        }\n                        nextNode = nextSibling(nextNode);\n                    }\n                    return isFragmentStart ? nextSibling(nextNode) : nextNode;\n                }\n                else {\n                    onMismatch();\n                }\n                break;\n            case Fragment:\n                if (!isFragmentStart) {\n                    nextNode = onMismatch();\n                }\n                else {\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n                }\n                break;\n            default:\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\n                    if (domType !== 1 /* DOMNodeTypes.ELEMENT */ ||\n                        vnode.type.toLowerCase() !==\n                            node.tagName.toLowerCase()) {\n                        nextNode = onMismatch();\n                    }\n                    else {\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n                    }\n                }\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n                    // when setting up the render effect, if the initial vnode already\n                    // has .el set, the component will perform hydration instead of mount\n                    // on its sub-tree.\n                    vnode.slotScopeIds = slotScopeIds;\n                    const container = parentNode(node);\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\n                    // component may be async, so in the case of fragments we cannot rely\n                    // on component's rendered output to determine the end of the fragment\n                    // instead, we do a lookahead to find the end anchor node.\n                    nextNode = isFragmentStart\n                        ? locateClosingAsyncAnchor(node)\n                        : nextSibling(node);\n                    // #4293 teleport as component root\n                    if (nextNode &&\n                        isComment(nextNode) &&\n                        nextNode.data === 'teleport end') {\n                        nextNode = nextSibling(nextNode);\n                    }\n                    // #3787\n                    // if component is async, it may get moved / unmounted before its\n                    // inner component is loaded, so we need to give it a placeholder\n                    // vnode that matches its adopted DOM.\n                    if (isAsyncWrapper(vnode)) {\n                        let subTree;\n                        if (isFragmentStart) {\n                            subTree = createVNode(Fragment);\n                            subTree.anchor = nextNode\n                                ? nextNode.previousSibling\n                                : container.lastChild;\n                        }\n                        else {\n                            subTree =\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\n                        }\n                        subTree.el = node;\n                        vnode.component.subTree = subTree;\n                    }\n                }\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n                    if (domType !== 8 /* DOMNodeTypes.COMMENT */) {\n                        nextNode = onMismatch();\n                    }\n                    else {\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\n                    }\n                }\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\n                }\n        }\n        if (ref != null) {\n            setRef(ref, null, parentSuspense, vnode);\n        }\n        return nextNode;\n    };\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n        optimized = optimized || !!vnode.dynamicChildren;\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\n        // #4006 for form elements with non-string v-model value bindings\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\n        // skip props & children if this is hoisted static nodes\n        // #5405 in dev, always hydrate children for HMR\n        if ((process.env.NODE_ENV !== 'production') || forcePatchValue || patchFlag !== -1 /* PatchFlags.HOISTED */) {\n            if (dirs) {\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\n            }\n            // props\n            if (props) {\n                if (forcePatchValue ||\n                    !optimized ||\n                    patchFlag & (16 /* PatchFlags.FULL_PROPS */ | 32 /* PatchFlags.HYDRATE_EVENTS */)) {\n                    for (const key in props) {\n                        if ((forcePatchValue && key.endsWith('value')) ||\n                            (isOn(key) && !isReservedProp(key))) {\n                            patchProp(el, key, null, props[key], false, undefined, parentComponent);\n                        }\n                    }\n                }\n                else if (props.onClick) {\n                    // Fast path for click listeners (which is most often) to avoid\n                    // iterating through props.\n                    patchProp(el, 'onClick', null, props.onClick, false, undefined, parentComponent);\n                }\n            }\n            // vnode / directive hooks\n            let vnodeHooks;\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n            }\n            if (dirs) {\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n            }\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n                queueEffectWithSuspense(() => {\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n                }, parentSuspense);\n            }\n            // children\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */ &&\n                // skip if element has innerHTML / textContent\n                !(props && (props.innerHTML || props.textContent))) {\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\n                let hasWarned = false;\n                while (next) {\n                    hasMismatch = true;\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\n                            `server rendered element contains more child nodes than client vdom.`);\n                        hasWarned = true;\n                    }\n                    // The SSRed DOM contains more nodes than it should. Remove them.\n                    const cur = next;\n                    next = next.nextSibling;\n                    remove(cur);\n                }\n            }\n            else if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n                if (el.textContent !== vnode.children) {\n                    hasMismatch = true;\n                    (process.env.NODE_ENV !== 'production') &&\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\n                            `- Client: ${el.textContent}\\n` +\n                            `- Server: ${vnode.children}`);\n                    el.textContent = vnode.children;\n                }\n            }\n        }\n        return el.nextSibling;\n    };\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n        optimized = optimized || !!parentVNode.dynamicChildren;\n        const children = parentVNode.children;\n        const l = children.length;\n        let hasWarned = false;\n        for (let i = 0; i < l; i++) {\n            const vnode = optimized\n                ? children[i]\n                : (children[i] = normalizeVNode(children[i]));\n            if (node) {\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\n            }\n            else if (vnode.type === Text && !vnode.children) {\n                continue;\n            }\n            else {\n                hasMismatch = true;\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\n                        `server rendered element contains fewer child nodes than client vdom.`);\n                    hasWarned = true;\n                }\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n            }\n        }\n        return node;\n    };\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n        if (fragmentSlotScopeIds) {\n            slotScopeIds = slotScopeIds\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\n                : fragmentSlotScopeIds;\n        }\n        const container = parentNode(node);\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\n        if (next && isComment(next) && next.data === ']') {\n            return nextSibling((vnode.anchor = next));\n        }\n        else {\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\n            // back. This should have led to node/children mismatch warnings.\n            hasMismatch = true;\n            // since the anchor is missing, we need to create one and insert it\n            insert((vnode.anchor = createComment(`]`)), container, next);\n            return next;\n        }\n    };\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n        hasMismatch = true;\n        (process.env.NODE_ENV !== 'production') &&\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* DOMNodeTypes.TEXT */\n                ? `(text)`\n                : isComment(node) && node.data === '['\n                    ? `(start of fragment)`\n                    : ``);\n        vnode.el = null;\n        if (isFragment) {\n            // remove excessive fragment nodes\n            const end = locateClosingAsyncAnchor(node);\n            while (true) {\n                const next = nextSibling(node);\n                if (next && next !== end) {\n                    remove(next);\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        const next = nextSibling(node);\n        const container = parentNode(node);\n        remove(node);\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\n        return next;\n    };\n    const locateClosingAsyncAnchor = (node) => {\n        let match = 0;\n        while (node) {\n            node = nextSibling(node);\n            if (node && isComment(node)) {\n                if (node.data === '[')\n                    match++;\n                if (node.data === ']') {\n                    if (match === 0) {\n                        return nextSibling(node);\n                    }\n                    else {\n                        match--;\n                    }\n                }\n            }\n        }\n        return node;\n    };\n    return [hydrate, hydrateNode];\n}\n\n/* eslint-disable no-restricted-globals */\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n    if (instance.appContext.config.performance && isSupported()) {\n        perf.mark(`vue-${type}-${instance.uid}`);\n    }\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n    }\n}\nfunction endMeasure(instance, type) {\n    if (instance.appContext.config.performance && isSupported()) {\n        const startTag = `vue-${type}-${instance.uid}`;\n        const endTag = startTag + `:end`;\n        perf.mark(endTag);\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\n        perf.clearMarks(startTag);\n        perf.clearMarks(endTag);\n    }\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n    }\n}\nfunction isSupported() {\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\n\n/**\n * This is only called in esm-bundler builds.\n * It is called when a renderer is created, in `baseCreateRenderer` so that\n * importing runtime-core is side-effects free.\n *\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    const needWarn = [];\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_OPTIONS_API__`);\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\n    }\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\n        (process.env.NODE_ENV !== 'production') && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n    }\n    if ((process.env.NODE_ENV !== 'production') && needWarn.length) {\n        const multi = needWarn.length > 1;\n        console.warn(`Feature flag${multi ? `s` : ``} ${needWarn.join(', ')} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, ` +\n            `which expects these compile-time feature flags to be globally injected ` +\n            `via the bundler config in order to get better tree-shaking in the ` +\n            `production bundle.\\n\\n` +\n            `For more details, see https://link.vuejs.org/feature-flags.`);\n    }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense\n    ;\n/**\n * The createRenderer function accepts two generic arguments:\n * HostNode and HostElement, corresponding to Node and Element types in the\n * host environment. For example, for runtime-dom, HostNode would be the DOM\n * `Node` interface and HostElement would be the DOM `Element` interface.\n *\n * Custom renderers can pass in the platform specific types like this:\n *\n * ``` js\n * const { render, createApp } = createRenderer<Node, Element>({\n *   patchProp,\n *   ...nodeOps\n * })\n * ```\n */\nfunction createRenderer(options) {\n    return baseCreateRenderer(options);\n}\n// Separate API for creating hydration-enabled renderer.\n// Hydration logic is only used when calling this function, making it\n// tree-shakable.\nfunction createHydrationRenderer(options) {\n    return baseCreateRenderer(options, createHydrationFunctions);\n}\n// implementation\nfunction baseCreateRenderer(options, createHydrationFns) {\n    // compile-time feature flags check\n    {\n        initFeatureFlags();\n    }\n    const target = getGlobalThis();\n    target.__VUE__ = true;\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n    }\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, insertStaticContent: hostInsertStaticContent } = options;\n    // Note: functions inside this closure should use `const xxx = () => {}`\n    // style in order to prevent being inlined by minifiers.\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\n        if (n1 === n2) {\n            return;\n        }\n        // patching & not same type, unmount old tree\n        if (n1 && !isSameVNodeType(n1, n2)) {\n            anchor = getNextHostNode(n1);\n            unmount(n1, parentComponent, parentSuspense, true);\n            n1 = null;\n        }\n        if (n2.patchFlag === -2 /* PatchFlags.BAIL */) {\n            optimized = false;\n            n2.dynamicChildren = null;\n        }\n        const { type, ref, shapeFlag } = n2;\n        switch (type) {\n            case Text:\n                processText(n1, n2, container, anchor);\n                break;\n            case Comment:\n                processCommentNode(n1, n2, container, anchor);\n                break;\n            case Static:\n                if (n1 == null) {\n                    mountStaticNode(n2, container, anchor, isSVG);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    patchStaticNode(n1, n2, container, isSVG);\n                }\n                break;\n            case Fragment:\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                break;\n            default:\n                if (shapeFlag & 1 /* ShapeFlags.ELEMENT */) {\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n                }\n                else if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\n                }\n        }\n        // set ref\n        if (ref != null && parentComponent) {\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n        }\n    };\n    const processText = (n1, n2, container, anchor) => {\n        if (n1 == null) {\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\n        }\n        else {\n            const el = (n2.el = n1.el);\n            if (n2.children !== n1.children) {\n                hostSetText(el, n2.children);\n            }\n        }\n    };\n    const processCommentNode = (n1, n2, container, anchor) => {\n        if (n1 == null) {\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\n        }\n        else {\n            // there's no support for dynamic comments\n            n2.el = n1.el;\n        }\n    };\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG, n2.el, n2.anchor);\n    };\n    /**\n     * Dev / HMR only\n     */\n    const patchStaticNode = (n1, n2, container, isSVG) => {\n        // static nodes are only patched during dev for HMR\n        if (n2.children !== n1.children) {\n            const anchor = hostNextSibling(n1.anchor);\n            // remove existing\n            removeStaticNode(n1);\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\n        }\n        else {\n            n2.el = n1.el;\n            n2.anchor = n1.anchor;\n        }\n    };\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n        let next;\n        while (el && el !== anchor) {\n            next = hostNextSibling(el);\n            hostInsert(el, container, nextSibling);\n            el = next;\n        }\n        hostInsert(anchor, container, nextSibling);\n    };\n    const removeStaticNode = ({ el, anchor }) => {\n        let next;\n        while (el && el !== anchor) {\n            next = hostNextSibling(el);\n            hostRemove(el);\n            el = next;\n        }\n        hostRemove(anchor);\n    };\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        isSVG = isSVG || n2.type === 'svg';\n        if (n1 == null) {\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n        else {\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n    };\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        let el;\n        let vnodeHook;\n        const { type, props, shapeFlag, transition, dirs } = vnode;\n        el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\n        // mount children first, since some props may rely on child content\n        // being already rendered, e.g. `<select value>`\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n            hostSetElementText(el, vnode.children);\n        }\n        else if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n            mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\n        }\n        if (dirs) {\n            invokeDirectiveHook(vnode, null, parentComponent, 'created');\n        }\n        // props\n        if (props) {\n            for (const key in props) {\n                if (key !== 'value' && !isReservedProp(key)) {\n                    hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n                }\n            }\n            /**\n             * Special case for setting value on DOM elements:\n             * - it can be order-sensitive (e.g. should be set *after* min/max, #2325, #4024)\n             * - it needs to be forced (#1471)\n             * #2353 proposes adding another renderer option to configure this, but\n             * the properties affects are so finite it is worth special casing it\n             * here to reduce the complexity. (Special casing it also should not\n             * affect non-DOM renderers)\n             */\n            if ('value' in props) {\n                hostPatchProp(el, 'value', null, props.value);\n            }\n            if ((vnodeHook = props.onVnodeBeforeMount)) {\n                invokeVNodeHook(vnodeHook, parentComponent, vnode);\n            }\n        }\n        // scopeId\n        setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            Object.defineProperty(el, '__vnode', {\n                value: vnode,\n                enumerable: false\n            });\n            Object.defineProperty(el, '__vueParentComponent', {\n                value: parentComponent,\n                enumerable: false\n            });\n        }\n        if (dirs) {\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\n        }\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\n        // #1689 For inside suspense + suspense resolved case, just call it\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\n            transition &&\n            !transition.persisted;\n        if (needCallTransitionHooks) {\n            transition.beforeEnter(el);\n        }\n        hostInsert(el, container, anchor);\n        if ((vnodeHook = props && props.onVnodeMounted) ||\n            needCallTransitionHooks ||\n            dirs) {\n            queuePostRenderEffect(() => {\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n                needCallTransitionHooks && transition.enter(el);\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\n            }, parentSuspense);\n        }\n    };\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n        if (scopeId) {\n            hostSetScopeId(el, scopeId);\n        }\n        if (slotScopeIds) {\n            for (let i = 0; i < slotScopeIds.length; i++) {\n                hostSetScopeId(el, slotScopeIds[i]);\n            }\n        }\n        if (parentComponent) {\n            let subTree = parentComponent.subTree;\n            if ((process.env.NODE_ENV !== 'production') &&\n                subTree.patchFlag > 0 &&\n                subTree.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */) {\n                subTree =\n                    filterSingleRoot(subTree.children) || subTree;\n            }\n            if (vnode === subTree) {\n                const parentVNode = parentComponent.vnode;\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\n            }\n        }\n    };\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n        for (let i = start; i < children.length; i++) {\n            const child = (children[i] = optimized\n                ? cloneIfMounted(children[i])\n                : normalizeVNode(children[i]));\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n    };\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        const el = (n2.el = n1.el);\n        let { patchFlag, dynamicChildren, dirs } = n2;\n        // #1426 take the old vnode's patch flag into account since user may clone a\n        // compiler-generated vnode, which de-opts to FULL_PROPS\n        patchFlag |= n1.patchFlag & 16 /* PatchFlags.FULL_PROPS */;\n        const oldProps = n1.props || EMPTY_OBJ;\n        const newProps = n2.props || EMPTY_OBJ;\n        let vnodeHook;\n        // disable recurse in beforeUpdate hooks\n        parentComponent && toggleRecurse(parentComponent, false);\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        }\n        if (dirs) {\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\n        }\n        parentComponent && toggleRecurse(parentComponent, true);\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\n            // HMR updated, force full diff\n            patchFlag = 0;\n            optimized = false;\n            dynamicChildren = null;\n        }\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\n        if (dynamicChildren) {\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\n                traverseStaticChildren(n1, n2);\n            }\n        }\n        else if (!optimized) {\n            // full diff\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\n        }\n        if (patchFlag > 0) {\n            // the presence of a patchFlag means this element's render code was\n            // generated by the compiler and can take the fast path.\n            // in this path old node and new node are guaranteed to have the same shape\n            // (i.e. at the exact same position in the source template)\n            if (patchFlag & 16 /* PatchFlags.FULL_PROPS */) {\n                // element props contain dynamic keys, full diff needed\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n            }\n            else {\n                // class\n                // this flag is matched when the element has dynamic class bindings.\n                if (patchFlag & 2 /* PatchFlags.CLASS */) {\n                    if (oldProps.class !== newProps.class) {\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\n                    }\n                }\n                // style\n                // this flag is matched when the element has dynamic style bindings\n                if (patchFlag & 4 /* PatchFlags.STYLE */) {\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\n                }\n                // props\n                // This flag is matched when the element has dynamic prop/attr bindings\n                // other than class and style. The keys of dynamic prop/attrs are saved for\n                // faster iteration.\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\n                // bail out and go through a full diff because we need to unset the old key\n                if (patchFlag & 8 /* PatchFlags.PROPS */) {\n                    // if the flag is present then dynamicProps must be non-null\n                    const propsToUpdate = n2.dynamicProps;\n                    for (let i = 0; i < propsToUpdate.length; i++) {\n                        const key = propsToUpdate[i];\n                        const prev = oldProps[key];\n                        const next = newProps[key];\n                        // #1471 force patch value\n                        if (next !== prev || key === 'value') {\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\n                        }\n                    }\n                }\n            }\n            // text\n            // This flag is matched when the element has only dynamic text children.\n            if (patchFlag & 1 /* PatchFlags.TEXT */) {\n                if (n1.children !== n2.children) {\n                    hostSetElementText(el, n2.children);\n                }\n            }\n        }\n        else if (!optimized && dynamicChildren == null) {\n            // unoptimized, full diff\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\n        }\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n            queuePostRenderEffect(() => {\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\n            }, parentSuspense);\n        }\n    };\n    // The fast path for blocks.\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n        for (let i = 0; i < newChildren.length; i++) {\n            const oldVNode = oldChildren[i];\n            const newVNode = newChildren[i];\n            // Determine the container (parent element) for the patch.\n            const container = \n            // oldVNode may be an errored async setup() component inside Suspense\n            // which will not have a mounted element\n            oldVNode.el &&\n                // - In the case of a Fragment, we need to provide the actual parent\n                // of the Fragment itself so it can move its children.\n                (oldVNode.type === Fragment ||\n                    // - In the case of different nodes, there is going to be a replacement\n                    // which also requires the correct parent container\n                    !isSameVNodeType(oldVNode, newVNode) ||\n                    // - In the case of a component, it could contain anything.\n                    oldVNode.shapeFlag & (6 /* ShapeFlags.COMPONENT */ | 64 /* ShapeFlags.TELEPORT */))\n                ? hostParentNode(oldVNode.el)\n                : // In other cases, the parent container is not actually used so we\n                    // just pass the block element here to avoid a DOM parentNode call.\n                    fallbackContainer;\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\n        }\n    };\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n        if (oldProps !== newProps) {\n            if (oldProps !== EMPTY_OBJ) {\n                for (const key in oldProps) {\n                    if (!isReservedProp(key) && !(key in newProps)) {\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n                    }\n                }\n            }\n            for (const key in newProps) {\n                // empty string is not valid prop\n                if (isReservedProp(key))\n                    continue;\n                const next = newProps[key];\n                const prev = oldProps[key];\n                // defer patching value\n                if (next !== prev && key !== 'value') {\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\n                }\n            }\n            if ('value' in newProps) {\n                hostPatchProp(el, 'value', oldProps.value, newProps.value);\n            }\n        }\n    };\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n        if ((process.env.NODE_ENV !== 'production') &&\n            // #5523 dev root fragment may inherit directives\n            (isHmrUpdating || patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */)) {\n            // HMR updated / Dev root fragment (w/ comments), force full diff\n            patchFlag = 0;\n            optimized = false;\n            dynamicChildren = null;\n        }\n        // check if this is a slot fragment with :slotted scope ids\n        if (fragmentSlotScopeIds) {\n            slotScopeIds = slotScopeIds\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\n                : fragmentSlotScopeIds;\n        }\n        if (n1 == null) {\n            hostInsert(fragmentStartAnchor, container, anchor);\n            hostInsert(fragmentEndAnchor, container, anchor);\n            // a fragment can only have array children\n            // since they are either generated by the compiler, or implicitly created\n            // from arrays.\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n        else {\n            if (patchFlag > 0 &&\n                patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */ &&\n                dynamicChildren &&\n                // #2715 the previous fragment could've been a BAILed one as a result\n                // of renderSlot() with no valid children\n                n1.dynamicChildren) {\n                // a stable fragment (template root or <template v-for>) doesn't need to\n                // patch children order, but it may contain dynamicChildren.\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\n                    traverseStaticChildren(n1, n2);\n                }\n                else if (\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\n                //  get moved around. Make sure all root level vnodes inherit el.\n                // #2134 or if it's a component root, it may also get moved around\n                // as the component is being moved.\n                n2.key != null ||\n                    (parentComponent && n2 === parentComponent.subTree)) {\n                    traverseStaticChildren(n1, n2, true /* shallow */);\n                }\n            }\n            else {\n                // keyed / unkeyed, or manual fragments.\n                // for keyed & unkeyed, since they are compiler generated from v-for,\n                // each child is guaranteed to be a block so the fragment will never\n                // have dynamicChildren.\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n            }\n        }\n    };\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        n2.slotScopeIds = slotScopeIds;\n        if (n1 == null) {\n            if (n2.shapeFlag & 512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */) {\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\n            }\n            else {\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\n            }\n        }\n        else {\n            updateComponent(n1, n2, optimized);\n        }\n    };\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\n            registerHMR(instance);\n        }\n        if ((process.env.NODE_ENV !== 'production')) {\n            pushWarningContext(initialVNode);\n            startMeasure(instance, `mount`);\n        }\n        // inject renderer internals for keepAlive\n        if (isKeepAlive(initialVNode)) {\n            instance.ctx.renderer = internals;\n        }\n        // resolve props and slots for setup context\n        {\n            if ((process.env.NODE_ENV !== 'production')) {\n                startMeasure(instance, `init`);\n            }\n            setupComponent(instance);\n            if ((process.env.NODE_ENV !== 'production')) {\n                endMeasure(instance, `init`);\n            }\n        }\n        // setup() is async. This component relies on async logic to be resolved\n        // before proceeding\n        if (instance.asyncDep) {\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n            // Give it a placeholder if this is not hydration\n            // TODO handle self-defined fallback\n            if (!initialVNode.el) {\n                const placeholder = (instance.subTree = createVNode(Comment));\n                processCommentNode(null, placeholder, container, anchor);\n            }\n            return;\n        }\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\n        if ((process.env.NODE_ENV !== 'production')) {\n            popWarningContext();\n            endMeasure(instance, `mount`);\n        }\n    };\n    const updateComponent = (n1, n2, optimized) => {\n        const instance = (n2.component = n1.component);\n        if (shouldUpdateComponent(n1, n2, optimized)) {\n            if (instance.asyncDep &&\n                !instance.asyncResolved) {\n                // async & still pending - just update props and slots\n                // since the component's reactive effect for render isn't set-up yet\n                if ((process.env.NODE_ENV !== 'production')) {\n                    pushWarningContext(n2);\n                }\n                updateComponentPreRender(instance, n2, optimized);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    popWarningContext();\n                }\n                return;\n            }\n            else {\n                // normal update\n                instance.next = n2;\n                // in case the child component is also queued, remove it to avoid\n                // double updating the same child component in the same flush.\n                invalidateJob(instance.update);\n                // instance.update is the reactive effect.\n                instance.update();\n            }\n        }\n        else {\n            // no update needed. just copy over properties\n            n2.el = n1.el;\n            instance.vnode = n2;\n        }\n    };\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n        const componentUpdateFn = () => {\n            if (!instance.isMounted) {\n                let vnodeHook;\n                const { el, props } = initialVNode;\n                const { bm, m, parent } = instance;\n                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n                toggleRecurse(instance, false);\n                // beforeMount hook\n                if (bm) {\n                    invokeArrayFns(bm);\n                }\n                // onVnodeBeforeMount\n                if (!isAsyncWrapperVNode &&\n                    (vnodeHook = props && props.onVnodeBeforeMount)) {\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\n                }\n                toggleRecurse(instance, true);\n                if (el && hydrateNode) {\n                    // vnode has adopted host node - perform hydration instead of mount.\n                    const hydrateSubTree = () => {\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            startMeasure(instance, `render`);\n                        }\n                        instance.subTree = renderComponentRoot(instance);\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            endMeasure(instance, `render`);\n                        }\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            startMeasure(instance, `hydrate`);\n                        }\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\n                        if ((process.env.NODE_ENV !== 'production')) {\n                            endMeasure(instance, `hydrate`);\n                        }\n                    };\n                    if (isAsyncWrapperVNode) {\n                        initialVNode.type.__asyncLoader().then(\n                        // note: we are moving the render call into an async callback,\n                        // which means it won't track dependencies - but it's ok because\n                        // a server-rendered async wrapper is already in resolved state\n                        // and it will never need to change.\n                        () => !instance.isUnmounted && hydrateSubTree());\n                    }\n                    else {\n                        hydrateSubTree();\n                    }\n                }\n                else {\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        startMeasure(instance, `render`);\n                    }\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        endMeasure(instance, `render`);\n                    }\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        startMeasure(instance, `patch`);\n                    }\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\n                    if ((process.env.NODE_ENV !== 'production')) {\n                        endMeasure(instance, `patch`);\n                    }\n                    initialVNode.el = subTree.el;\n                }\n                // mounted hook\n                if (m) {\n                    queuePostRenderEffect(m, parentSuspense);\n                }\n                // onVnodeMounted\n                if (!isAsyncWrapperVNode &&\n                    (vnodeHook = props && props.onVnodeMounted)) {\n                    const scopedInitialVNode = initialVNode;\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\n                }\n                // activated hook for keep-alive roots.\n                // #1742 activated hook must be accessed after first render\n                // since the hook may be injected by a child keep-alive\n                if (initialVNode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */ ||\n                    (parent &&\n                        isAsyncWrapper(parent.vnode) &&\n                        parent.vnode.shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */)) {\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n                }\n                instance.isMounted = true;\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                    devtoolsComponentAdded(instance);\n                }\n                // #2458: deference mount-only object parameters to prevent memleaks\n                initialVNode = container = anchor = null;\n            }\n            else {\n                // updateComponent\n                // This is triggered by mutation of component's own state (next: null)\n                // OR parent calling processComponent (next: VNode)\n                let { next, bu, u, parent, vnode } = instance;\n                let originNext = next;\n                let vnodeHook;\n                if ((process.env.NODE_ENV !== 'production')) {\n                    pushWarningContext(next || instance.vnode);\n                }\n                // Disallow component effect recursion during pre-lifecycle hooks.\n                toggleRecurse(instance, false);\n                if (next) {\n                    next.el = vnode.el;\n                    updateComponentPreRender(instance, next, optimized);\n                }\n                else {\n                    next = vnode;\n                }\n                // beforeUpdate hook\n                if (bu) {\n                    invokeArrayFns(bu);\n                }\n                // onVnodeBeforeUpdate\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\n                }\n                toggleRecurse(instance, true);\n                // render\n                if ((process.env.NODE_ENV !== 'production')) {\n                    startMeasure(instance, `render`);\n                }\n                const nextTree = renderComponentRoot(instance);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    endMeasure(instance, `render`);\n                }\n                const prevTree = instance.subTree;\n                instance.subTree = nextTree;\n                if ((process.env.NODE_ENV !== 'production')) {\n                    startMeasure(instance, `patch`);\n                }\n                patch(prevTree, nextTree, \n                // parent may have changed if it's in a teleport\n                hostParentNode(prevTree.el), \n                // anchor may have changed if it's in a fragment\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    endMeasure(instance, `patch`);\n                }\n                next.el = nextTree.el;\n                if (originNext === null) {\n                    // self-triggered update. In case of HOC, update parent component\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\n                    // to child component's vnode\n                    updateHOCHostEl(instance, nextTree.el);\n                }\n                // updated hook\n                if (u) {\n                    queuePostRenderEffect(u, parentSuspense);\n                }\n                // onVnodeUpdated\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\n                }\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n                    devtoolsComponentUpdated(instance);\n                }\n                if ((process.env.NODE_ENV !== 'production')) {\n                    popWarningContext();\n                }\n            }\n        };\n        // create reactive effect for rendering\n        const effect = (instance.effect = new ReactiveEffect(componentUpdateFn, () => queueJob(update), instance.scope // track it in component's effect scope\n        ));\n        const update = (instance.update = () => effect.run());\n        update.id = instance.uid;\n        // allowRecurse\n        // #1801, #2043 component render effects should allow recursive updates\n        toggleRecurse(instance, true);\n        if ((process.env.NODE_ENV !== 'production')) {\n            effect.onTrack = instance.rtc\n                ? e => invokeArrayFns(instance.rtc, e)\n                : void 0;\n            effect.onTrigger = instance.rtg\n                ? e => invokeArrayFns(instance.rtg, e)\n                : void 0;\n            update.ownerInstance = instance;\n        }\n        update();\n    };\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\n        nextVNode.component = instance;\n        const prevProps = instance.vnode.props;\n        instance.vnode = nextVNode;\n        instance.next = null;\n        updateProps(instance, nextVNode.props, prevProps, optimized);\n        updateSlots(instance, nextVNode.children, optimized);\n        pauseTracking();\n        // props update may have triggered pre-flush watchers.\n        // flush them before the render update.\n        flushPreFlushCbs();\n        resetTracking();\n    };\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n        const c1 = n1 && n1.children;\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n        const c2 = n2.children;\n        const { patchFlag, shapeFlag } = n2;\n        // fast path\n        if (patchFlag > 0) {\n            if (patchFlag & 128 /* PatchFlags.KEYED_FRAGMENT */) {\n                // this could be either fully-keyed or mixed (some keyed some not)\n                // presence of patchFlag means children are guaranteed to be arrays\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                return;\n            }\n            else if (patchFlag & 256 /* PatchFlags.UNKEYED_FRAGMENT */) {\n                // unkeyed\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                return;\n            }\n        }\n        // children has 3 possibilities: text, array or no children.\n        if (shapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n            // text children fast path\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                unmountChildren(c1, parentComponent, parentSuspense);\n            }\n            if (c2 !== c1) {\n                hostSetElementText(container, c2);\n            }\n        }\n        else {\n            if (prevShapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                // prev children was array\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                    // two arrays, cannot assume anything, do full diff\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else {\n                    // no new children, just unmount old\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\n                }\n            }\n            else {\n                // prev children was text OR null\n                // new children is array OR null\n                if (prevShapeFlag & 8 /* ShapeFlags.TEXT_CHILDREN */) {\n                    hostSetElementText(container, '');\n                }\n                // mount new if array\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n            }\n        }\n    };\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        c1 = c1 || EMPTY_ARR;\n        c2 = c2 || EMPTY_ARR;\n        const oldLength = c1.length;\n        const newLength = c2.length;\n        const commonLength = Math.min(oldLength, newLength);\n        let i;\n        for (i = 0; i < commonLength; i++) {\n            const nextChild = (c2[i] = optimized\n                ? cloneIfMounted(c2[i])\n                : normalizeVNode(c2[i]));\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n        }\n        if (oldLength > newLength) {\n            // remove old\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\n        }\n        else {\n            // mount new\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\n        }\n    };\n    // can be all-keyed or mixed\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n        let i = 0;\n        const l2 = c2.length;\n        let e1 = c1.length - 1; // prev ending index\n        let e2 = l2 - 1; // next ending index\n        // 1. sync from start\n        // (a b) c\n        // (a b) d e\n        while (i <= e1 && i <= e2) {\n            const n1 = c1[i];\n            const n2 = (c2[i] = optimized\n                ? cloneIfMounted(c2[i])\n                : normalizeVNode(c2[i]));\n            if (isSameVNodeType(n1, n2)) {\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n            }\n            else {\n                break;\n            }\n            i++;\n        }\n        // 2. sync from end\n        // a (b c)\n        // d e (b c)\n        while (i <= e1 && i <= e2) {\n            const n1 = c1[e1];\n            const n2 = (c2[e2] = optimized\n                ? cloneIfMounted(c2[e2])\n                : normalizeVNode(c2[e2]));\n            if (isSameVNodeType(n1, n2)) {\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n            }\n            else {\n                break;\n            }\n            e1--;\n            e2--;\n        }\n        // 3. common sequence + mount\n        // (a b)\n        // (a b) c\n        // i = 2, e1 = 1, e2 = 2\n        // (a b)\n        // c (a b)\n        // i = 0, e1 = -1, e2 = 0\n        if (i > e1) {\n            if (i <= e2) {\n                const nextPos = e2 + 1;\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n                while (i <= e2) {\n                    patch(null, (c2[i] = optimized\n                        ? cloneIfMounted(c2[i])\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                    i++;\n                }\n            }\n        }\n        // 4. common sequence + unmount\n        // (a b) c\n        // (a b)\n        // i = 2, e1 = 2, e2 = 1\n        // a (b c)\n        // (b c)\n        // i = 0, e1 = 0, e2 = -1\n        else if (i > e2) {\n            while (i <= e1) {\n                unmount(c1[i], parentComponent, parentSuspense, true);\n                i++;\n            }\n        }\n        // 5. unknown sequence\n        // [i ... e1 + 1]: a b [c d e] f g\n        // [i ... e2 + 1]: a b [e d c h] f g\n        // i = 2, e1 = 4, e2 = 5\n        else {\n            const s1 = i; // prev starting index\n            const s2 = i; // next starting index\n            // 5.1 build key:index map for newChildren\n            const keyToNewIndexMap = new Map();\n            for (i = s2; i <= e2; i++) {\n                const nextChild = (c2[i] = optimized\n                    ? cloneIfMounted(c2[i])\n                    : normalizeVNode(c2[i]));\n                if (nextChild.key != null) {\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\n                    }\n                    keyToNewIndexMap.set(nextChild.key, i);\n                }\n            }\n            // 5.2 loop through old children left to be patched and try to patch\n            // matching nodes & remove nodes that are no longer present\n            let j;\n            let patched = 0;\n            const toBePatched = e2 - s2 + 1;\n            let moved = false;\n            // used to track whether any node has moved\n            let maxNewIndexSoFar = 0;\n            // works as Map<newIndex, oldIndex>\n            // Note that oldIndex is offset by +1\n            // and oldIndex = 0 is a special value indicating the new node has\n            // no corresponding old node.\n            // used for determining longest stable subsequence\n            const newIndexToOldIndexMap = new Array(toBePatched);\n            for (i = 0; i < toBePatched; i++)\n                newIndexToOldIndexMap[i] = 0;\n            for (i = s1; i <= e1; i++) {\n                const prevChild = c1[i];\n                if (patched >= toBePatched) {\n                    // all new children have been patched so this can only be a removal\n                    unmount(prevChild, parentComponent, parentSuspense, true);\n                    continue;\n                }\n                let newIndex;\n                if (prevChild.key != null) {\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\n                }\n                else {\n                    // key-less node, try to locate a key-less node of the same type\n                    for (j = s2; j <= e2; j++) {\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\n                            isSameVNodeType(prevChild, c2[j])) {\n                            newIndex = j;\n                            break;\n                        }\n                    }\n                }\n                if (newIndex === undefined) {\n                    unmount(prevChild, parentComponent, parentSuspense, true);\n                }\n                else {\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\n                    if (newIndex >= maxNewIndexSoFar) {\n                        maxNewIndexSoFar = newIndex;\n                    }\n                    else {\n                        moved = true;\n                    }\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                    patched++;\n                }\n            }\n            // 5.3 move and mount\n            // generate longest stable subsequence only when nodes have moved\n            const increasingNewIndexSequence = moved\n                ? getSequence(newIndexToOldIndexMap)\n                : EMPTY_ARR;\n            j = increasingNewIndexSequence.length - 1;\n            // looping backwards so that we can use last patched node as anchor\n            for (i = toBePatched - 1; i >= 0; i--) {\n                const nextIndex = s2 + i;\n                const nextChild = c2[nextIndex];\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n                if (newIndexToOldIndexMap[i] === 0) {\n                    // mount new\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n                else if (moved) {\n                    // move if:\n                    // There is no stable subsequence (e.g. a reverse)\n                    // OR current node is not among the stable sequence\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\n                        move(nextChild, container, anchor, 2 /* MoveType.REORDER */);\n                    }\n                    else {\n                        j--;\n                    }\n                }\n            }\n        }\n    };\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n        const { el, type, transition, children, shapeFlag } = vnode;\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n            move(vnode.component.subTree, container, anchor, moveType);\n            return;\n        }\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n            vnode.suspense.move(container, anchor, moveType);\n            return;\n        }\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n            type.move(vnode, container, anchor, internals);\n            return;\n        }\n        if (type === Fragment) {\n            hostInsert(el, container, anchor);\n            for (let i = 0; i < children.length; i++) {\n                move(children[i], container, anchor, moveType);\n            }\n            hostInsert(vnode.anchor, container, anchor);\n            return;\n        }\n        if (type === Static) {\n            moveStaticNode(vnode, container, anchor);\n            return;\n        }\n        // single nodes\n        const needTransition = moveType !== 2 /* MoveType.REORDER */ &&\n            shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\n            transition;\n        if (needTransition) {\n            if (moveType === 0 /* MoveType.ENTER */) {\n                transition.beforeEnter(el);\n                hostInsert(el, container, anchor);\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n            }\n            else {\n                const { leave, delayLeave, afterLeave } = transition;\n                const remove = () => hostInsert(el, container, anchor);\n                const performLeave = () => {\n                    leave(el, () => {\n                        remove();\n                        afterLeave && afterLeave();\n                    });\n                };\n                if (delayLeave) {\n                    delayLeave(el, remove, performLeave);\n                }\n                else {\n                    performLeave();\n                }\n            }\n        }\n        else {\n            hostInsert(el, container, anchor);\n        }\n    };\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\n        // unset ref\n        if (ref != null) {\n            setRef(ref, null, parentSuspense, vnode, true);\n        }\n        if (shapeFlag & 256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */) {\n            parentComponent.ctx.deactivate(vnode);\n            return;\n        }\n        const shouldInvokeDirs = shapeFlag & 1 /* ShapeFlags.ELEMENT */ && dirs;\n        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n        let vnodeHook;\n        if (shouldInvokeVnodeHook &&\n            (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        }\n        if (shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n            unmountComponent(vnode.component, parentSuspense, doRemove);\n        }\n        else {\n            if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n                vnode.suspense.unmount(parentSuspense, doRemove);\n                return;\n            }\n            if (shouldInvokeDirs) {\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\n            }\n            if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\n            }\n            else if (dynamicChildren &&\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\n                (type !== Fragment ||\n                    (patchFlag > 0 && patchFlag & 64 /* PatchFlags.STABLE_FRAGMENT */))) {\n                // fast path for block nodes: only need to unmount dynamic children.\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\n            }\n            else if ((type === Fragment &&\n                patchFlag &\n                    (128 /* PatchFlags.KEYED_FRAGMENT */ | 256 /* PatchFlags.UNKEYED_FRAGMENT */)) ||\n                (!optimized && shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */)) {\n                unmountChildren(children, parentComponent, parentSuspense);\n            }\n            if (doRemove) {\n                remove(vnode);\n            }\n        }\n        if ((shouldInvokeVnodeHook &&\n            (vnodeHook = props && props.onVnodeUnmounted)) ||\n            shouldInvokeDirs) {\n            queuePostRenderEffect(() => {\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n                shouldInvokeDirs &&\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\n            }, parentSuspense);\n        }\n    };\n    const remove = vnode => {\n        const { type, el, anchor, transition } = vnode;\n        if (type === Fragment) {\n            if ((process.env.NODE_ENV !== 'production') &&\n                vnode.patchFlag > 0 &&\n                vnode.patchFlag & 2048 /* PatchFlags.DEV_ROOT_FRAGMENT */ &&\n                transition &&\n                !transition.persisted) {\n                vnode.children.forEach(child => {\n                    if (child.type === Comment) {\n                        hostRemove(child.el);\n                    }\n                    else {\n                        remove(child);\n                    }\n                });\n            }\n            else {\n                removeFragment(el, anchor);\n            }\n            return;\n        }\n        if (type === Static) {\n            removeStaticNode(vnode);\n            return;\n        }\n        const performRemove = () => {\n            hostRemove(el);\n            if (transition && !transition.persisted && transition.afterLeave) {\n                transition.afterLeave();\n            }\n        };\n        if (vnode.shapeFlag & 1 /* ShapeFlags.ELEMENT */ &&\n            transition &&\n            !transition.persisted) {\n            const { leave, delayLeave } = transition;\n            const performLeave = () => leave(el, performRemove);\n            if (delayLeave) {\n                delayLeave(vnode.el, performRemove, performLeave);\n            }\n            else {\n                performLeave();\n            }\n        }\n        else {\n            performRemove();\n        }\n    };\n    const removeFragment = (cur, end) => {\n        // For fragments, directly remove all contained DOM nodes.\n        // (fragment child nodes cannot have transition)\n        let next;\n        while (cur !== end) {\n            next = hostNextSibling(cur);\n            hostRemove(cur);\n            cur = next;\n        }\n        hostRemove(end);\n    };\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\n            unregisterHMR(instance);\n        }\n        const { bum, scope, update, subTree, um } = instance;\n        // beforeUnmount hook\n        if (bum) {\n            invokeArrayFns(bum);\n        }\n        // stop effects in component scope\n        scope.stop();\n        // update may be null if a component is unmounted before its async\n        // setup has resolved.\n        if (update) {\n            // so that scheduler will no longer invoke it\n            update.active = false;\n            unmount(subTree, instance, parentSuspense, doRemove);\n        }\n        // unmounted hook\n        if (um) {\n            queuePostRenderEffect(um, parentSuspense);\n        }\n        queuePostRenderEffect(() => {\n            instance.isUnmounted = true;\n        }, parentSuspense);\n        // A component with async dep inside a pending suspense is unmounted before\n        // its async dep resolves. This should remove the dep from the suspense, and\n        // cause the suspense to resolve immediately if that was the last dep.\n        if (parentSuspense &&\n            parentSuspense.pendingBranch &&\n            !parentSuspense.isUnmounted &&\n            instance.asyncDep &&\n            !instance.asyncResolved &&\n            instance.suspenseId === parentSuspense.pendingId) {\n            parentSuspense.deps--;\n            if (parentSuspense.deps === 0) {\n                parentSuspense.resolve();\n            }\n        }\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            devtoolsComponentRemoved(instance);\n        }\n    };\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n        for (let i = start; i < children.length; i++) {\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n        }\n    };\n    const getNextHostNode = vnode => {\n        if (vnode.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n            return getNextHostNode(vnode.component.subTree);\n        }\n        if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n            return vnode.suspense.next();\n        }\n        return hostNextSibling((vnode.anchor || vnode.el));\n    };\n    const render = (vnode, container, isSVG) => {\n        if (vnode == null) {\n            if (container._vnode) {\n                unmount(container._vnode, null, null, true);\n            }\n        }\n        else {\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n        }\n        flushPreFlushCbs();\n        flushPostFlushCbs();\n        container._vnode = vnode;\n    };\n    const internals = {\n        p: patch,\n        um: unmount,\n        m: move,\n        r: remove,\n        mt: mountComponent,\n        mc: mountChildren,\n        pc: patchChildren,\n        pbc: patchBlockChildren,\n        n: getNextHostNode,\n        o: options\n    };\n    let hydrate;\n    let hydrateNode;\n    if (createHydrationFns) {\n        [hydrate, hydrateNode] = createHydrationFns(internals);\n    }\n    return {\n        render,\n        hydrate,\n        createApp: createAppAPI(render, hydrate)\n    };\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n    effect.allowRecurse = update.allowRecurse = allowed;\n}\n/**\n * #1156\n * When a component is HMR-enabled, we need to make sure that all static nodes\n * inside a block also inherit the DOM element from the previous tree so that\n * HMR updates (which are full updates) can retrieve the element for patching.\n *\n * #2080\n * Inside keyed `template` fragment static children, if a fragment is moved,\n * the children will always be moved. Therefore, in order to ensure correct move\n * position, el should be inherited from previous nodes.\n */\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n    const ch1 = n1.children;\n    const ch2 = n2.children;\n    if (isArray(ch1) && isArray(ch2)) {\n        for (let i = 0; i < ch1.length; i++) {\n            // this is only called in the optimized path so array children are\n            // guaranteed to be vnodes\n            const c1 = ch1[i];\n            let c2 = ch2[i];\n            if (c2.shapeFlag & 1 /* ShapeFlags.ELEMENT */ && !c2.dynamicChildren) {\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* PatchFlags.HYDRATE_EVENTS */) {\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\n                    c2.el = c1.el;\n                }\n                if (!shallow)\n                    traverseStaticChildren(c1, c2);\n            }\n            // #6852 also inherit for text nodes\n            if (c2.type === Text) {\n                c2.el = c1.el;\n            }\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\n            // would have received .el during block patch)\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\n                c2.el = c1.el;\n            }\n        }\n    }\n}\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\nfunction getSequence(arr) {\n    const p = arr.slice();\n    const result = [0];\n    let i, j, u, v, c;\n    const len = arr.length;\n    for (i = 0; i < len; i++) {\n        const arrI = arr[i];\n        if (arrI !== 0) {\n            j = result[result.length - 1];\n            if (arr[j] < arrI) {\n                p[i] = j;\n                result.push(i);\n                continue;\n            }\n            u = 0;\n            v = result.length - 1;\n            while (u < v) {\n                c = (u + v) >> 1;\n                if (arr[result[c]] < arrI) {\n                    u = c + 1;\n                }\n                else {\n                    v = c;\n                }\n            }\n            if (arrI < arr[result[u]]) {\n                if (u > 0) {\n                    p[i] = result[u - 1];\n                }\n                result[u] = i;\n            }\n        }\n    }\n    u = result.length;\n    v = result[u - 1];\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n    return result;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\nconst resolveTarget = (props, select) => {\n    const targetSelector = props && props.to;\n    if (isString(targetSelector)) {\n        if (!select) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Current renderer does not support string target for Teleports. ` +\n                    `(missing querySelector renderer option)`);\n            return null;\n        }\n        else {\n            const target = select(targetSelector);\n            if (!target) {\n                (process.env.NODE_ENV !== 'production') &&\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\n                        `Note the target element must exist before the component is mounted - ` +\n                        `i.e. the target cannot be rendered by the component itself, and ` +\n                        `ideally should be outside of the entire Vue component tree.`);\n            }\n            return target;\n        }\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\n            warn(`Invalid Teleport target: ${targetSelector}`);\n        }\n        return targetSelector;\n    }\n};\nconst TeleportImpl = {\n    __isTeleport: true,\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\n        const disabled = isTeleportDisabled(n2.props);\n        let { shapeFlag, children, dynamicChildren } = n2;\n        // #3302\n        // HMR updated, force full diff\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\n            optimized = false;\n            dynamicChildren = null;\n        }\n        if (n1 == null) {\n            // insert anchors in the main view\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\n                ? createComment('teleport start')\n                : createText(''));\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\n                ? createComment('teleport end')\n                : createText(''));\n            insert(placeholder, container, anchor);\n            insert(mainAnchor, container, anchor);\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\n            const targetAnchor = (n2.targetAnchor = createText(''));\n            if (target) {\n                insert(targetAnchor, target);\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\n                isSVG = isSVG || isTargetSVG(target);\n            }\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\n            }\n            const mount = (container, anchor) => {\n                // Teleport *always* has Array children. This is enforced in both the\n                // compiler and vnode children normalization.\n                if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\n                }\n            };\n            if (disabled) {\n                mount(container, mainAnchor);\n            }\n            else if (target) {\n                mount(target, targetAnchor);\n            }\n        }\n        else {\n            // update content\n            n2.el = n1.el;\n            const mainAnchor = (n2.anchor = n1.anchor);\n            const target = (n2.target = n1.target);\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\n            const wasDisabled = isTeleportDisabled(n1.props);\n            const currentContainer = wasDisabled ? container : target;\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n            isSVG = isSVG || isTargetSVG(target);\n            if (dynamicChildren) {\n                // fast path when the teleport happens to be a block root\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\n                // even in block tree mode we need to make sure all root-level nodes\n                // in the teleport inherit previous DOM references so that they can\n                // be moved in future patches.\n                traverseStaticChildren(n1, n2, true);\n            }\n            else if (!optimized) {\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\n            }\n            if (disabled) {\n                if (!wasDisabled) {\n                    // enabled -> disabled\n                    // move into main container\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\n                }\n            }\n            else {\n                // target changed\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\n                    if (nextTarget) {\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TeleportMoveTypes.TARGET_CHANGE */);\n                    }\n                    else if ((process.env.NODE_ENV !== 'production')) {\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\n                    }\n                }\n                else if (wasDisabled) {\n                    // disabled -> enabled\n                    // move into teleport target\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TeleportMoveTypes.TOGGLE */);\n                }\n            }\n        }\n        updateCssVars(n2);\n    },\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n        if (target) {\n            hostRemove(targetAnchor);\n        }\n        // an unmounted teleport should always remove its children if not disabled\n        if (doRemove || !isTeleportDisabled(props)) {\n            hostRemove(anchor);\n            if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n                for (let i = 0; i < children.length; i++) {\n                    const child = children[i];\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\n                }\n            }\n        }\n    },\n    move: moveTeleport,\n    hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* TeleportMoveTypes.REORDER */) {\n    // move target anchor if this is a target change.\n    if (moveType === 0 /* TeleportMoveTypes.TARGET_CHANGE */) {\n        insert(vnode.targetAnchor, container, parentAnchor);\n    }\n    const { el, anchor, shapeFlag, children, props } = vnode;\n    const isReorder = moveType === 2 /* TeleportMoveTypes.REORDER */;\n    // move main view anchor if this is a re-order.\n    if (isReorder) {\n        insert(el, container, parentAnchor);\n    }\n    // if this is a re-order and teleport is enabled (content is in target)\n    // do not move children. So the opposite is: only move children if this\n    // is not a reorder, or the teleport is disabled\n    if (!isReorder || isTeleportDisabled(props)) {\n        // Teleport has either Array children or no children.\n        if (shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n            for (let i = 0; i < children.length; i++) {\n                move(children[i], container, parentAnchor, 2 /* MoveType.REORDER */);\n            }\n        }\n    }\n    // move main view anchor if this is a re-order.\n    if (isReorder) {\n        insert(anchor, container, parentAnchor);\n    }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\n    if (target) {\n        // if multiple teleports rendered to the same target element, we need to\n        // pick up from where the last teleport finished instead of the first node\n        const targetNode = target._lpa || target.firstChild;\n        if (vnode.shapeFlag & 16 /* ShapeFlags.ARRAY_CHILDREN */) {\n            if (isTeleportDisabled(vnode.props)) {\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\n                vnode.targetAnchor = targetNode;\n            }\n            else {\n                vnode.anchor = nextSibling(node);\n                // lookahead until we find the target anchor\n                // we cannot rely on return value of hydrateChildren() because there\n                // could be nested teleports\n                let targetAnchor = targetNode;\n                while (targetAnchor) {\n                    targetAnchor = nextSibling(targetAnchor);\n                    if (targetAnchor &&\n                        targetAnchor.nodeType === 8 &&\n                        targetAnchor.data === 'teleport anchor') {\n                        vnode.targetAnchor = targetAnchor;\n                        target._lpa =\n                            vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n                        break;\n                    }\n                }\n                hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\n            }\n        }\n        updateCssVars(vnode);\n    }\n    return vnode.anchor && nextSibling(vnode.anchor);\n}\n// Force-casted public typing for h and TSX props inference\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n    // presence of .ut method indicates owner component uses css vars.\n    // code path here can assume browser environment.\n    const ctx = vnode.ctx;\n    if (ctx && ctx.ut) {\n        let node = vnode.children[0].el;\n        while (node !== vnode.targetAnchor) {\n            if (node.nodeType === 1)\n                node.setAttribute('data-v-owner', ctx.uid);\n            node = node.nextSibling;\n        }\n        ctx.ut();\n    }\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\n// Since v-if and v-for are the two possible ways node structure can dynamically\n// change, once we consider v-if branches and each v-for fragment a block, we\n// can divide a template into nested blocks, and within each block the node\n// structure would be stable. This allows us to skip most children diffing\n// and only worry about the dynamic nodes (indicated by patch flags).\nconst blockStack = [];\nlet currentBlock = null;\n/**\n * Open a block.\n * This must be called before `createBlock`. It cannot be part of `createBlock`\n * because the children of the block are evaluated before `createBlock` itself\n * is called. The generated code typically looks like this:\n *\n * ```js\n * function render() {\n *   return (openBlock(),createBlock('div', null, [...]))\n * }\n * ```\n * disableTracking is true when creating a v-for fragment block, since a v-for\n * fragment always diffs its children.\n *\n * @private\n */\nfunction openBlock(disableTracking = false) {\n    blockStack.push((currentBlock = disableTracking ? null : []));\n}\nfunction closeBlock() {\n    blockStack.pop();\n    currentBlock = blockStack[blockStack.length - 1] || null;\n}\n// Whether we should be tracking dynamic child nodes inside a block.\n// Only tracks when this value is > 0\n// We are not using a simple boolean because this value may need to be\n// incremented/decremented by nested usage of v-once (see below)\nlet isBlockTreeEnabled = 1;\n/**\n * Block tracking sometimes needs to be disabled, for example during the\n * creation of a tree that needs to be cached by v-once. The compiler generates\n * code like this:\n *\n * ``` js\n * _cache[1] || (\n *   setBlockTracking(-1),\n *   _cache[1] = createVNode(...),\n *   setBlockTracking(1),\n *   _cache[1]\n * )\n * ```\n *\n * @private\n */\nfunction setBlockTracking(value) {\n    isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n    // save current block children on the block vnode\n    vnode.dynamicChildren =\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n    // close block\n    closeBlock();\n    // a block is always going to be patched, so track it as a child of its\n    // parent block\n    if (isBlockTreeEnabled > 0 && currentBlock) {\n        currentBlock.push(vnode);\n    }\n    return vnode;\n}\n/**\n * @private\n */\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true /* isBlock */));\n}\n/**\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\n * A block root keeps track of dynamic nodes within the block in the\n * `dynamicChildren` array.\n *\n * @private\n */\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */));\n}\nfunction isVNode(value) {\n    return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n    if ((process.env.NODE_ENV !== 'production') &&\n        n2.shapeFlag & 6 /* ShapeFlags.COMPONENT */ &&\n        hmrDirtyComponents.has(n2.type)) {\n        // #7042, ensure the vnode being unmounted during HMR\n        // bitwise operations to remove keep alive flags\n        n1.shapeFlag &= ~256 /* ShapeFlags.COMPONENT_SHOULD_KEEP_ALIVE */;\n        n2.shapeFlag &= ~512 /* ShapeFlags.COMPONENT_KEPT_ALIVE */;\n        // HMR only: if the component has been hot-updated, force a reload.\n        return false;\n    }\n    return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\n/**\n * Internal API for registering an arguments transform for createVNode\n * used for creating stubs in the test-utils\n * It is *internal* but needs to be exposed for test-utils to pick up proper\n * typings\n */\nfunction transformVNodeArgs(transformer) {\n    vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n    return _createVNode(...(vnodeArgsTransformer\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\n        : args));\n};\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({ ref, ref_key, ref_for }) => {\n    return (ref != null\n        ? isString(ref) || isRef(ref) || isFunction(ref)\n            ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for }\n            : ref\n        : null);\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1 /* ShapeFlags.ELEMENT */, isBlockNode = false, needFullChildrenNormalization = false) {\n    const vnode = {\n        __v_isVNode: true,\n        __v_skip: true,\n        type,\n        props,\n        key: props && normalizeKey(props),\n        ref: props && normalizeRef(props),\n        scopeId: currentScopeId,\n        slotScopeIds: null,\n        children,\n        component: null,\n        suspense: null,\n        ssContent: null,\n        ssFallback: null,\n        dirs: null,\n        transition: null,\n        el: null,\n        anchor: null,\n        target: null,\n        targetAnchor: null,\n        staticCount: 0,\n        shapeFlag,\n        patchFlag,\n        dynamicProps,\n        dynamicChildren: null,\n        appContext: null,\n        ctx: currentRenderingInstance\n    };\n    if (needFullChildrenNormalization) {\n        normalizeChildren(vnode, children);\n        // normalize suspense children\n        if (shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n            type.normalize(vnode);\n        }\n    }\n    else if (children) {\n        // compiled element vnode - if children is passed, only possible types are\n        // string or Array.\n        vnode.shapeFlag |= isString(children)\n            ? 8 /* ShapeFlags.TEXT_CHILDREN */\n            : 16 /* ShapeFlags.ARRAY_CHILDREN */;\n    }\n    // validate key\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n    }\n    // track vnode for block tree\n    if (isBlockTreeEnabled > 0 &&\n        // avoid a block node from tracking itself\n        !isBlockNode &&\n        // has current parent block\n        currentBlock &&\n        // presence of a patch flag indicates this node needs patching on updates.\n        // component nodes also should always be patched, because even if the\n        // component doesn't need to update, it needs to persist the instance on to\n        // the next vnode so that it can be properly unmounted later.\n        (vnode.patchFlag > 0 || shapeFlag & 6 /* ShapeFlags.COMPONENT */) &&\n        // the EVENTS flag is only for hydration and if it is the only flag, the\n        // vnode should not be considered dynamic due to handler caching.\n        vnode.patchFlag !== 32 /* PatchFlags.HYDRATE_EVENTS */) {\n        currentBlock.push(vnode);\n    }\n    return vnode;\n}\nconst createVNode = ((process.env.NODE_ENV !== 'production') ? createVNodeWithArgsTransform : _createVNode);\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\n        if ((process.env.NODE_ENV !== 'production') && !type) {\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\n        }\n        type = Comment;\n    }\n    if (isVNode(type)) {\n        // createVNode receiving an existing vnode. This happens in cases like\n        // <component :is=\"vnode\"/>\n        // #2078 make sure to merge refs during the clone instead of overwriting it\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\n        if (children) {\n            normalizeChildren(cloned, children);\n        }\n        if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n            if (cloned.shapeFlag & 6 /* ShapeFlags.COMPONENT */) {\n                currentBlock[currentBlock.indexOf(type)] = cloned;\n            }\n            else {\n                currentBlock.push(cloned);\n            }\n        }\n        cloned.patchFlag |= -2 /* PatchFlags.BAIL */;\n        return cloned;\n    }\n    // class component normalization.\n    if (isClassComponent(type)) {\n        type = type.__vccOpts;\n    }\n    // class & style normalization.\n    if (props) {\n        // for reactive or proxy objects, we need to clone it to enable mutation.\n        props = guardReactiveProps(props);\n        let { class: klass, style } = props;\n        if (klass && !isString(klass)) {\n            props.class = normalizeClass(klass);\n        }\n        if (isObject(style)) {\n            // reactive state objects need to be cloned since they are likely to be\n            // mutated\n            if (isProxy(style) && !isArray(style)) {\n                style = extend({}, style);\n            }\n            props.style = normalizeStyle(style);\n        }\n    }\n    // encode the vnode type information into a bitmap\n    const shapeFlag = isString(type)\n        ? 1 /* ShapeFlags.ELEMENT */\n        : isSuspense(type)\n            ? 128 /* ShapeFlags.SUSPENSE */\n            : isTeleport(type)\n                ? 64 /* ShapeFlags.TELEPORT */\n                : isObject(type)\n                    ? 4 /* ShapeFlags.STATEFUL_COMPONENT */\n                    : isFunction(type)\n                        ? 2 /* ShapeFlags.FUNCTIONAL_COMPONENT */\n                        : 0;\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */ && isProxy(type)) {\n        type = toRaw(type);\n        warn(`Vue received a Component which was made a reactive object. This can ` +\n            `lead to unnecessary performance overhead, and should be avoided by ` +\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\n    }\n    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);\n}\nfunction guardReactiveProps(props) {\n    if (!props)\n        return null;\n    return isProxy(props) || InternalObjectKey in props\n        ? extend({}, props)\n        : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n    // This is intentionally NOT using spread or extend to avoid the runtime\n    // key enumeration cost.\n    const { props, ref, patchFlag, children } = vnode;\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n    const cloned = {\n        __v_isVNode: true,\n        __v_skip: true,\n        type: vnode.type,\n        props: mergedProps,\n        key: mergedProps && normalizeKey(mergedProps),\n        ref: extraProps && extraProps.ref\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n                // if the vnode itself already has a ref, cloneVNode will need to merge\n                // the refs so the single vnode can be set on multiple refs\n                mergeRef && ref\n                    ? isArray(ref)\n                        ? ref.concat(normalizeRef(extraProps))\n                        : [ref, normalizeRef(extraProps)]\n                    : normalizeRef(extraProps)\n            : ref,\n        scopeId: vnode.scopeId,\n        slotScopeIds: vnode.slotScopeIds,\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* PatchFlags.HOISTED */ && isArray(children)\n            ? children.map(deepCloneVNode)\n            : children,\n        target: vnode.target,\n        targetAnchor: vnode.targetAnchor,\n        staticCount: vnode.staticCount,\n        shapeFlag: vnode.shapeFlag,\n        // if the vnode is cloned with extra props, we can no longer assume its\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n        // note: preserve flag for fragments since they use the flag for children\n        // fast paths only.\n        patchFlag: extraProps && vnode.type !== Fragment\n            ? patchFlag === -1 // hoisted node\n                ? 16 /* PatchFlags.FULL_PROPS */\n                : patchFlag | 16 /* PatchFlags.FULL_PROPS */\n            : patchFlag,\n        dynamicProps: vnode.dynamicProps,\n        dynamicChildren: vnode.dynamicChildren,\n        appContext: vnode.appContext,\n        dirs: vnode.dirs,\n        transition: vnode.transition,\n        // These should technically only be non-null on mounted VNodes. However,\n        // they *should* be copied for kept-alive vnodes. So we just always copy\n        // them since them being non-null during a mount doesn't affect the logic as\n        // they will simply be overwritten.\n        component: vnode.component,\n        suspense: vnode.suspense,\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n        el: vnode.el,\n        anchor: vnode.anchor,\n        ctx: vnode.ctx\n    };\n    return cloned;\n}\n/**\n * Dev only, for HMR of hoisted vnodes reused in v-for\n * https://github.com/vitejs/vite/issues/2022\n */\nfunction deepCloneVNode(vnode) {\n    const cloned = cloneVNode(vnode);\n    if (isArray(vnode.children)) {\n        cloned.children = vnode.children.map(deepCloneVNode);\n    }\n    return cloned;\n}\n/**\n * @private\n */\nfunction createTextVNode(text = ' ', flag = 0) {\n    return createVNode(Text, null, text, flag);\n}\n/**\n * @private\n */\nfunction createStaticVNode(content, numberOfNodes) {\n    // A static vnode can contain multiple stringified elements, and the number\n    // of elements is necessary for hydration.\n    const vnode = createVNode(Static, null, content);\n    vnode.staticCount = numberOfNodes;\n    return vnode;\n}\n/**\n * @private\n */\nfunction createCommentVNode(text = '', \n// when used as the v-else branch, the comment node must be created as a\n// block to ensure correct updates.\nasBlock = false) {\n    return asBlock\n        ? (openBlock(), createBlock(Comment, null, text))\n        : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n    if (child == null || typeof child === 'boolean') {\n        // empty placeholder\n        return createVNode(Comment);\n    }\n    else if (isArray(child)) {\n        // fragment\n        return createVNode(Fragment, null, \n        // #3666, avoid reference pollution when reusing vnode\n        child.slice());\n    }\n    else if (typeof child === 'object') {\n        // already vnode, this should be the most common since compiled templates\n        // always produce all-vnode children arrays\n        return cloneIfMounted(child);\n    }\n    else {\n        // strings and numbers\n        return createVNode(Text, null, String(child));\n    }\n}\n// optimized normalization for template-compiled render fns\nfunction cloneIfMounted(child) {\n    return (child.el === null && child.patchFlag !== -1 /* PatchFlags.HOISTED */) ||\n        child.memo\n        ? child\n        : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n    let type = 0;\n    const { shapeFlag } = vnode;\n    if (children == null) {\n        children = null;\n    }\n    else if (isArray(children)) {\n        type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\n    }\n    else if (typeof children === 'object') {\n        if (shapeFlag & (1 /* ShapeFlags.ELEMENT */ | 64 /* ShapeFlags.TELEPORT */)) {\n            // Normalize slot to plain children for plain element and Teleport\n            const slot = children.default;\n            if (slot) {\n                // _c marker is added by withCtx() indicating this is a compiled slot\n                slot._c && (slot._d = false);\n                normalizeChildren(vnode, slot());\n                slot._c && (slot._d = true);\n            }\n            return;\n        }\n        else {\n            type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\n            const slotFlag = children._;\n            if (!slotFlag && !(InternalObjectKey in children)) {\n                children._ctx = currentRenderingInstance;\n            }\n            else if (slotFlag === 3 /* SlotFlags.FORWARDED */ && currentRenderingInstance) {\n                // a child component receives forwarded slots from the parent.\n                // its slot type is determined by its parent's slot type.\n                if (currentRenderingInstance.slots._ === 1 /* SlotFlags.STABLE */) {\n                    children._ = 1 /* SlotFlags.STABLE */;\n                }\n                else {\n                    children._ = 2 /* SlotFlags.DYNAMIC */;\n                    vnode.patchFlag |= 1024 /* PatchFlags.DYNAMIC_SLOTS */;\n                }\n            }\n        }\n    }\n    else if (isFunction(children)) {\n        children = { default: children, _ctx: currentRenderingInstance };\n        type = 32 /* ShapeFlags.SLOTS_CHILDREN */;\n    }\n    else {\n        children = String(children);\n        // force teleport children to array so it can be moved around\n        if (shapeFlag & 64 /* ShapeFlags.TELEPORT */) {\n            type = 16 /* ShapeFlags.ARRAY_CHILDREN */;\n            children = [createTextVNode(children)];\n        }\n        else {\n            type = 8 /* ShapeFlags.TEXT_CHILDREN */;\n        }\n    }\n    vnode.children = children;\n    vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n    const ret = {};\n    for (let i = 0; i < args.length; i++) {\n        const toMerge = args[i];\n        for (const key in toMerge) {\n            if (key === 'class') {\n                if (ret.class !== toMerge.class) {\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\n                }\n            }\n            else if (key === 'style') {\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\n            }\n            else if (isOn(key)) {\n                const existing = ret[key];\n                const incoming = toMerge[key];\n                if (incoming &&\n                    existing !== incoming &&\n                    !(isArray(existing) && existing.includes(incoming))) {\n                    ret[key] = existing\n                        ? [].concat(existing, incoming)\n                        : incoming;\n                }\n            }\n            else if (key !== '') {\n                ret[key] = toMerge[key];\n            }\n        }\n    }\n    return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n    callWithAsyncErrorHandling(hook, instance, 7 /* ErrorCodes.VNODE_HOOK */, [\n        vnode,\n        prevVNode\n    ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid$1 = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n    const type = vnode.type;\n    // inherit parent app context - or - if root, adopt from root vnode\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n    const instance = {\n        uid: uid$1++,\n        vnode,\n        type,\n        parent,\n        appContext,\n        root: null,\n        next: null,\n        subTree: null,\n        effect: null,\n        update: null,\n        scope: new EffectScope(true /* detached */),\n        render: null,\n        proxy: null,\n        exposed: null,\n        exposeProxy: null,\n        withProxy: null,\n        provides: parent ? parent.provides : Object.create(appContext.provides),\n        accessCache: null,\n        renderCache: [],\n        // local resolved assets\n        components: null,\n        directives: null,\n        // resolved props and emits options\n        propsOptions: normalizePropsOptions(type, appContext),\n        emitsOptions: normalizeEmitsOptions(type, appContext),\n        // emit\n        emit: null,\n        emitted: null,\n        // props default value\n        propsDefaults: EMPTY_OBJ,\n        // inheritAttrs\n        inheritAttrs: type.inheritAttrs,\n        // state\n        ctx: EMPTY_OBJ,\n        data: EMPTY_OBJ,\n        props: EMPTY_OBJ,\n        attrs: EMPTY_OBJ,\n        slots: EMPTY_OBJ,\n        refs: EMPTY_OBJ,\n        setupState: EMPTY_OBJ,\n        setupContext: null,\n        // suspense related\n        suspense,\n        suspenseId: suspense ? suspense.pendingId : 0,\n        asyncDep: null,\n        asyncResolved: false,\n        // lifecycle hooks\n        // not using enums here because it results in computed properties\n        isMounted: false,\n        isUnmounted: false,\n        isDeactivated: false,\n        bc: null,\n        c: null,\n        bm: null,\n        m: null,\n        bu: null,\n        u: null,\n        um: null,\n        bum: null,\n        da: null,\n        a: null,\n        rtg: null,\n        rtc: null,\n        ec: null,\n        sp: null\n    };\n    if ((process.env.NODE_ENV !== 'production')) {\n        instance.ctx = createDevRenderContext(instance);\n    }\n    else {\n        instance.ctx = { _: instance };\n    }\n    instance.root = parent ? parent.root : instance;\n    instance.emit = emit$1.bind(null, instance);\n    // apply custom element special handling\n    if (vnode.ce) {\n        vnode.ce(instance);\n    }\n    return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nconst setCurrentInstance = (instance) => {\n    currentInstance = instance;\n    instance.scope.on();\n};\nconst unsetCurrentInstance = () => {\n    currentInstance && currentInstance.scope.off();\n    currentInstance = null;\n};\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\nfunction validateComponentName(name, config) {\n    const appIsNativeTag = config.isNativeTag || NO;\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\n    }\n}\nfunction isStatefulComponent(instance) {\n    return instance.vnode.shapeFlag & 4 /* ShapeFlags.STATEFUL_COMPONENT */;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n    isInSSRComponentSetup = isSSR;\n    const { props, children } = instance.vnode;\n    const isStateful = isStatefulComponent(instance);\n    initProps(instance, props, isStateful, isSSR);\n    initSlots(instance, children);\n    const setupResult = isStateful\n        ? setupStatefulComponent(instance, isSSR)\n        : undefined;\n    isInSSRComponentSetup = false;\n    return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n    var _a;\n    const Component = instance.type;\n    if ((process.env.NODE_ENV !== 'production')) {\n        if (Component.name) {\n            validateComponentName(Component.name, instance.appContext.config);\n        }\n        if (Component.components) {\n            const names = Object.keys(Component.components);\n            for (let i = 0; i < names.length; i++) {\n                validateComponentName(names[i], instance.appContext.config);\n            }\n        }\n        if (Component.directives) {\n            const names = Object.keys(Component.directives);\n            for (let i = 0; i < names.length; i++) {\n                validateDirectiveName(names[i]);\n            }\n        }\n        if (Component.compilerOptions && isRuntimeOnly()) {\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\n                `includes the runtime compiler. Since you are using a runtime-only ` +\n                `build, the options should be passed via your build tool config instead.`);\n        }\n    }\n    // 0. create render proxy property access cache\n    instance.accessCache = Object.create(null);\n    // 1. create public instance / render proxy\n    // also mark it raw so it's never observed\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n    if ((process.env.NODE_ENV !== 'production')) {\n        exposePropsOnRenderContext(instance);\n    }\n    // 2. call setup()\n    const { setup } = Component;\n    if (setup) {\n        const setupContext = (instance.setupContext =\n            setup.length > 1 ? createSetupContext(instance) : null);\n        setCurrentInstance(instance);\n        pauseTracking();\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* ErrorCodes.SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\n        resetTracking();\n        unsetCurrentInstance();\n        if (isPromise(setupResult)) {\n            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n            if (isSSR) {\n                // return the promise so server-renderer can wait on it\n                return setupResult\n                    .then((resolvedResult) => {\n                    handleSetupResult(instance, resolvedResult, isSSR);\n                })\n                    .catch(e => {\n                    handleError(e, instance, 0 /* ErrorCodes.SETUP_FUNCTION */);\n                });\n            }\n            else {\n                // async setup returned Promise.\n                // bail here and wait for re-entry.\n                instance.asyncDep = setupResult;\n                if ((process.env.NODE_ENV !== 'production') && !instance.suspense) {\n                    const name = (_a = Component.name) !== null && _a !== void 0 ? _a : 'Anonymous';\n                    warn(`Component <${name}>: setup function returned a promise, but no ` +\n                        `<Suspense> boundary was found in the parent component tree. ` +\n                        `A component with async setup() must be nested in a <Suspense> ` +\n                        `in order to be rendered.`);\n                }\n            }\n        }\n        else {\n            handleSetupResult(instance, setupResult, isSSR);\n        }\n    }\n    else {\n        finishComponentSetup(instance, isSSR);\n    }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n    if (isFunction(setupResult)) {\n        // setup returned an inline render function\n        if (instance.type.__ssrInlineRender) {\n            // when the function's name is `ssrRender` (compiled by SFC inline mode),\n            // set it as ssrRender instead.\n            instance.ssrRender = setupResult;\n        }\n        else {\n            instance.render = setupResult;\n        }\n    }\n    else if (isObject(setupResult)) {\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\n            warn(`setup() should not return VNodes directly - ` +\n                `return a render function instead.`);\n        }\n        // setup returned bindings.\n        // assuming a render function compiled from template is present.\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\n            instance.devtoolsRawSetupState = setupResult;\n        }\n        instance.setupState = proxyRefs(setupResult);\n        if ((process.env.NODE_ENV !== 'production')) {\n            exposeSetupStateOnRenderContext(instance);\n        }\n    }\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\n    }\n    finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\n/**\n * For runtime-dom to register the compiler.\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\n */\nfunction registerRuntimeCompiler(_compile) {\n    compile = _compile;\n    installWithProxy = i => {\n        if (i.render._rc) {\n            i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n        }\n    };\n}\n// dev only\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n    const Component = instance.type;\n    // template / render function normalization\n    // could be already set when returned from setup()\n    if (!instance.render) {\n        // only do on-the-fly compile if not in SSR - SSR on-the-fly compilation\n        // is done by server-renderer\n        if (!isSSR && compile && !Component.render) {\n            const template = Component.template ||\n                resolveMergedOptions(instance).template;\n            if (template) {\n                if ((process.env.NODE_ENV !== 'production')) {\n                    startMeasure(instance, `compile`);\n                }\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n                const finalCompilerOptions = extend(extend({\n                    isCustomElement,\n                    delimiters\n                }, compilerOptions), componentCompilerOptions);\n                Component.render = compile(template, finalCompilerOptions);\n                if ((process.env.NODE_ENV !== 'production')) {\n                    endMeasure(instance, `compile`);\n                }\n            }\n        }\n        instance.render = (Component.render || NOOP);\n        // for runtime-compiled render functions using `with` blocks, the render\n        // proxy used needs a different `has` handler which is more performant and\n        // also only allows a whitelist of globals to fallthrough.\n        if (installWithProxy) {\n            installWithProxy(instance);\n        }\n    }\n    // support for 2.x options\n    if (__VUE_OPTIONS_API__ && !(false )) {\n        setCurrentInstance(instance);\n        pauseTracking();\n        applyOptions(instance);\n        resetTracking();\n        unsetCurrentInstance();\n    }\n    // warn missing template/render\n    // the runtime compilation of template in SSR is done by server-render\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\n        /* istanbul ignore if */\n        if (!compile && Component.template) {\n            warn(`Component provided template option but ` +\n                `runtime compilation is not supported in this build of Vue.` +\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\n                    ) /* should not happen */);\n        }\n        else {\n            warn(`Component is missing template or render function.`);\n        }\n    }\n}\nfunction createAttrsProxy(instance) {\n    return new Proxy(instance.attrs, (process.env.NODE_ENV !== 'production')\n        ? {\n            get(target, key) {\n                markAttrsAccessed();\n                track(instance, \"get\" /* TrackOpTypes.GET */, '$attrs');\n                return target[key];\n            },\n            set() {\n                warn(`setupContext.attrs is readonly.`);\n                return false;\n            },\n            deleteProperty() {\n                warn(`setupContext.attrs is readonly.`);\n                return false;\n            }\n        }\n        : {\n            get(target, key) {\n                track(instance, \"get\" /* TrackOpTypes.GET */, '$attrs');\n                return target[key];\n            }\n        });\n}\nfunction createSetupContext(instance) {\n    const expose = exposed => {\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\n            warn(`expose() should be called only once per setup().`);\n        }\n        instance.exposed = exposed || {};\n    };\n    let attrs;\n    if ((process.env.NODE_ENV !== 'production')) {\n        // We use getters in dev in case libs like test-utils overwrite instance\n        // properties (overwrites should not be done in prod)\n        return Object.freeze({\n            get attrs() {\n                return attrs || (attrs = createAttrsProxy(instance));\n            },\n            get slots() {\n                return shallowReadonly(instance.slots);\n            },\n            get emit() {\n                return (event, ...args) => instance.emit(event, ...args);\n            },\n            expose\n        });\n    }\n    else {\n        return {\n            get attrs() {\n                return attrs || (attrs = createAttrsProxy(instance));\n            },\n            slots: instance.slots,\n            emit: instance.emit,\n            expose\n        };\n    }\n}\nfunction getExposeProxy(instance) {\n    if (instance.exposed) {\n        return (instance.exposeProxy ||\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n                get(target, key) {\n                    if (key in target) {\n                        return target[key];\n                    }\n                    else if (key in publicPropertiesMap) {\n                        return publicPropertiesMap[key](instance);\n                    }\n                },\n                has(target, key) {\n                    return key in target || key in publicPropertiesMap;\n                }\n            })));\n    }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\nfunction getComponentName(Component, includeInferred = true) {\n    return isFunction(Component)\n        ? Component.displayName || Component.name\n        : Component.name || (includeInferred && Component.__name);\n}\n/* istanbul ignore next */\nfunction formatComponentName(instance, Component, isRoot = false) {\n    let name = getComponentName(Component);\n    if (!name && Component.__file) {\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n        if (match) {\n            name = match[1];\n        }\n    }\n    if (!name && instance && instance.parent) {\n        // try to infer the name based on reverse resolution\n        const inferFromRegistry = (registry) => {\n            for (const key in registry) {\n                if (registry[key] === Component) {\n                    return key;\n                }\n            }\n        };\n        name =\n            inferFromRegistry(instance.components ||\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\n    }\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n    return isFunction(value) && '__vccOpts' in value;\n}\n\nconst computed = ((getterOrOptions, debugOptions) => {\n    // @ts-ignore\n    return computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n});\n\n// dev only\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\n    `<script setup> of a single file component. Its arguments should be ` +\n    `compiled away and passing it at runtime has no effect.`);\n// implementation\nfunction defineProps() {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`defineProps`);\n    }\n    return null;\n}\n// implementation\nfunction defineEmits() {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`defineEmits`);\n    }\n    return null;\n}\n/**\n * Vue `<script setup>` compiler macro for declaring a component's exposed\n * instance properties when it is accessed by a parent component via template\n * refs.\n *\n * `<script setup>` components are closed by default - i.e. variables inside\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\n * via `defineExpose`.\n *\n * This is only usable inside `<script setup>`, is compiled away in the\n * output and should **not** be actually called at runtime.\n */\nfunction defineExpose(exposed) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`defineExpose`);\n    }\n}\n/**\n * Vue `<script setup>` compiler macro for providing props default values when\n * using type-based `defineProps` declaration.\n *\n * Example usage:\n * ```ts\n * withDefaults(defineProps<{\n *   size?: number\n *   labels?: string[]\n * }>(), {\n *   size: 3,\n *   labels: () => ['default label']\n * })\n * ```\n *\n * This is only usable inside `<script setup>`, is compiled away in the output\n * and should **not** be actually called at runtime.\n */\nfunction withDefaults(props, defaults) {\n    if ((process.env.NODE_ENV !== 'production')) {\n        warnRuntimeUsage(`withDefaults`);\n    }\n    return null;\n}\nfunction useSlots() {\n    return getContext().slots;\n}\nfunction useAttrs() {\n    return getContext().attrs;\n}\nfunction getContext() {\n    const i = getCurrentInstance();\n    if ((process.env.NODE_ENV !== 'production') && !i) {\n        warn(`useContext() called without active instance.`);\n    }\n    return i.setupContext || (i.setupContext = createSetupContext(i));\n}\n/**\n * Runtime helper for merging default declarations. Imported by compiled code\n * only.\n * @internal\n */\nfunction mergeDefaults(raw, defaults) {\n    const props = isArray(raw)\n        ? raw.reduce((normalized, p) => ((normalized[p] = {}), normalized), {})\n        : raw;\n    for (const key in defaults) {\n        const opt = props[key];\n        if (opt) {\n            if (isArray(opt) || isFunction(opt)) {\n                props[key] = { type: opt, default: defaults[key] };\n            }\n            else {\n                opt.default = defaults[key];\n            }\n        }\n        else if (opt === null) {\n            props[key] = { default: defaults[key] };\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\n        }\n    }\n    return props;\n}\n/**\n * Used to create a proxy for the rest element when destructuring props with\n * defineProps().\n * @internal\n */\nfunction createPropsRestProxy(props, excludedKeys) {\n    const ret = {};\n    for (const key in props) {\n        if (!excludedKeys.includes(key)) {\n            Object.defineProperty(ret, key, {\n                enumerable: true,\n                get: () => props[key]\n            });\n        }\n    }\n    return ret;\n}\n/**\n * `<script setup>` helper for persisting the current instance context over\n * async/await flows.\n *\n * `@vue/compiler-sfc` converts the following:\n *\n * ```ts\n * const x = await foo()\n * ```\n *\n * into:\n *\n * ```ts\n * let __temp, __restore\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\n * ```\n * @internal\n */\nfunction withAsyncContext(getAwaitable) {\n    const ctx = getCurrentInstance();\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\n        warn(`withAsyncContext called without active current instance. ` +\n            `This is likely a bug.`);\n    }\n    let awaitable = getAwaitable();\n    unsetCurrentInstance();\n    if (isPromise(awaitable)) {\n        awaitable = awaitable.catch(e => {\n            setCurrentInstance(ctx);\n            throw e;\n        });\n    }\n    return [awaitable, () => setCurrentInstance(ctx)];\n}\n\n// Actual implementation\nfunction h(type, propsOrChildren, children) {\n    const l = arguments.length;\n    if (l === 2) {\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n            // single vnode without props\n            if (isVNode(propsOrChildren)) {\n                return createVNode(type, null, [propsOrChildren]);\n            }\n            // props without children\n            return createVNode(type, propsOrChildren);\n        }\n        else {\n            // omit props\n            return createVNode(type, null, propsOrChildren);\n        }\n    }\n    else {\n        if (l > 3) {\n            children = Array.prototype.slice.call(arguments, 2);\n        }\n        else if (l === 3 && isVNode(children)) {\n            children = [children];\n        }\n        return createVNode(type, propsOrChildren, children);\n    }\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\nconst useSSRContext = () => {\n    {\n        const ctx = inject(ssrContextKey);\n        if (!ctx) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Server rendering context not provided. Make sure to only call ` +\n                    `useSSRContext() conditionally in the server build.`);\n        }\n        return ctx;\n    }\n};\n\nfunction isShallow(value) {\n    return !!(value && value[\"__v_isShallow\" /* ReactiveFlags.IS_SHALLOW */]);\n}\n\nfunction initCustomFormatter() {\n    /* eslint-disable no-restricted-globals */\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\n        return;\n    }\n    const vueStyle = { style: 'color:#3ba776' };\n    const numberStyle = { style: 'color:#0b1bc9' };\n    const stringStyle = { style: 'color:#b62e24' };\n    const keywordStyle = { style: 'color:#9d288c' };\n    // custom formatter for Chrome\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\n    const formatter = {\n        header(obj) {\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\n            if (!isObject(obj)) {\n                return null;\n            }\n            if (obj.__isVue) {\n                return ['div', vueStyle, `VueInstance`];\n            }\n            else if (isRef(obj)) {\n                return [\n                    'div',\n                    {},\n                    ['span', vueStyle, genRefFlag(obj)],\n                    '<',\n                    formatValue(obj.value),\n                    `>`\n                ];\n            }\n            else if (isReactive(obj)) {\n                return [\n                    'div',\n                    {},\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReactive' : 'Reactive'],\n                    '<',\n                    formatValue(obj),\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\n                ];\n            }\n            else if (isReadonly(obj)) {\n                return [\n                    'div',\n                    {},\n                    ['span', vueStyle, isShallow(obj) ? 'ShallowReadonly' : 'Readonly'],\n                    '<',\n                    formatValue(obj),\n                    '>'\n                ];\n            }\n            return null;\n        },\n        hasBody(obj) {\n            return obj && obj.__isVue;\n        },\n        body(obj) {\n            if (obj && obj.__isVue) {\n                return [\n                    'div',\n                    {},\n                    ...formatInstance(obj.$)\n                ];\n            }\n        }\n    };\n    function formatInstance(instance) {\n        const blocks = [];\n        if (instance.type.props && instance.props) {\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\n        }\n        if (instance.setupState !== EMPTY_OBJ) {\n            blocks.push(createInstanceBlock('setup', instance.setupState));\n        }\n        if (instance.data !== EMPTY_OBJ) {\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\n        }\n        const computed = extractKeys(instance, 'computed');\n        if (computed) {\n            blocks.push(createInstanceBlock('computed', computed));\n        }\n        const injected = extractKeys(instance, 'inject');\n        if (injected) {\n            blocks.push(createInstanceBlock('injected', injected));\n        }\n        blocks.push([\n            'div',\n            {},\n            [\n                'span',\n                {\n                    style: keywordStyle.style + ';opacity:0.66'\n                },\n                '$ (internal): '\n            ],\n            ['object', { object: instance }]\n        ]);\n        return blocks;\n    }\n    function createInstanceBlock(type, target) {\n        target = extend({}, target);\n        if (!Object.keys(target).length) {\n            return ['span', {}];\n        }\n        return [\n            'div',\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\n            [\n                'div',\n                {\n                    style: 'color:#476582'\n                },\n                type\n            ],\n            [\n                'div',\n                {\n                    style: 'padding-left:1.25em'\n                },\n                ...Object.keys(target).map(key => {\n                    return [\n                        'div',\n                        {},\n                        ['span', keywordStyle, key + ': '],\n                        formatValue(target[key], false)\n                    ];\n                })\n            ]\n        ];\n    }\n    function formatValue(v, asRaw = true) {\n        if (typeof v === 'number') {\n            return ['span', numberStyle, v];\n        }\n        else if (typeof v === 'string') {\n            return ['span', stringStyle, JSON.stringify(v)];\n        }\n        else if (typeof v === 'boolean') {\n            return ['span', keywordStyle, v];\n        }\n        else if (isObject(v)) {\n            return ['object', { object: asRaw ? toRaw(v) : v }];\n        }\n        else {\n            return ['span', stringStyle, String(v)];\n        }\n    }\n    function extractKeys(instance, type) {\n        const Comp = instance.type;\n        if (isFunction(Comp)) {\n            return;\n        }\n        const extracted = {};\n        for (const key in instance.ctx) {\n            if (isKeyOfType(Comp, key, type)) {\n                extracted[key] = instance.ctx[key];\n            }\n        }\n        return extracted;\n    }\n    function isKeyOfType(Comp, key, type) {\n        const opts = Comp[type];\n        if ((isArray(opts) && opts.includes(key)) ||\n            (isObject(opts) && key in opts)) {\n            return true;\n        }\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n            return true;\n        }\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\n            return true;\n        }\n    }\n    function genRefFlag(v) {\n        if (isShallow(v)) {\n            return `ShallowRef`;\n        }\n        if (v.effect) {\n            return `ComputedRef`;\n        }\n        return `Ref`;\n    }\n    if (window.devtoolsFormatters) {\n        window.devtoolsFormatters.push(formatter);\n    }\n    else {\n        window.devtoolsFormatters = [formatter];\n    }\n}\n\nfunction withMemo(memo, render, cache, index) {\n    const cached = cache[index];\n    if (cached && isMemoSame(cached, memo)) {\n        return cached;\n    }\n    const ret = render();\n    // shallow clone\n    ret.memo = memo.slice();\n    return (cache[index] = ret);\n}\nfunction isMemoSame(cached, memo) {\n    const prev = cached.memo;\n    if (prev.length != memo.length) {\n        return false;\n    }\n    for (let i = 0; i < prev.length; i++) {\n        if (hasChanged(prev[i], memo[i])) {\n            return false;\n        }\n    }\n    // make sure to let parent block track it when returning cached\n    if (isBlockTreeEnabled > 0 && currentBlock) {\n        currentBlock.push(cached);\n    }\n    return true;\n}\n\n// Core API ------------------------------------------------------------------\nconst version = \"3.2.45\";\nconst _ssrUtils = {\n    createComponentInstance,\n    setupComponent,\n    renderComponentRoot,\n    setCurrentRenderingInstance,\n    isVNode,\n    normalizeVNode\n};\n/**\n * SSR utils for \\@vue/server-renderer. Only exposed in ssr-possible builds.\n * @internal\n */\nconst ssrUtils = (_ssrUtils );\n/**\n * @internal only exposed in compat builds\n */\nconst resolveFilter = null;\n/**\n * @internal only exposed in compat builds.\n */\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { warn, camelize, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, camelize as camelize$1, toNumber, extend, EMPTY_OBJ, isObject, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\nconst doc = (typeof document !== 'undefined' ? document : null);\nconst templateContainer = doc && /*#__PURE__*/ doc.createElement('template');\nconst nodeOps = {\n    insert: (child, parent, anchor) => {\n        parent.insertBefore(child, anchor || null);\n    },\n    remove: child => {\n        const parent = child.parentNode;\n        if (parent) {\n            parent.removeChild(child);\n        }\n    },\n    createElement: (tag, isSVG, is, props) => {\n        const el = isSVG\n            ? doc.createElementNS(svgNS, tag)\n            : doc.createElement(tag, is ? { is } : undefined);\n        if (tag === 'select' && props && props.multiple != null) {\n            el.setAttribute('multiple', props.multiple);\n        }\n        return el;\n    },\n    createText: text => doc.createTextNode(text),\n    createComment: text => doc.createComment(text),\n    setText: (node, text) => {\n        node.nodeValue = text;\n    },\n    setElementText: (el, text) => {\n        el.textContent = text;\n    },\n    parentNode: node => node.parentNode,\n    nextSibling: node => node.nextSibling,\n    querySelector: selector => doc.querySelector(selector),\n    setScopeId(el, id) {\n        el.setAttribute(id, '');\n    },\n    // __UNSAFE__\n    // Reason: innerHTML.\n    // Static content here can only come from compiled templates.\n    // As long as the user only uses trusted templates, this is safe.\n    insertStaticContent(content, parent, anchor, isSVG, start, end) {\n        // <parent> before | first ... last | anchor </parent>\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\n        // #5308 can only take cached path if:\n        // - has a single root node\n        // - nextSibling info is still available\n        if (start && (start === end || start.nextSibling)) {\n            // cached\n            while (true) {\n                parent.insertBefore(start.cloneNode(true), anchor);\n                if (start === end || !(start = start.nextSibling))\n                    break;\n            }\n        }\n        else {\n            // fresh insert\n            templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n            const template = templateContainer.content;\n            if (isSVG) {\n                // remove outer svg wrapper\n                const wrapper = template.firstChild;\n                while (wrapper.firstChild) {\n                    template.appendChild(wrapper.firstChild);\n                }\n                template.removeChild(wrapper);\n            }\n            parent.insertBefore(template, anchor);\n        }\n        return [\n            // first\n            before ? before.nextSibling : parent.firstChild,\n            // last\n            anchor ? anchor.previousSibling : parent.lastChild\n        ];\n    }\n};\n\n// compiler should normalize class + :class bindings on the same element\n// into a single binding ['staticClass', dynamic]\nfunction patchClass(el, value, isSVG) {\n    // directly setting className should be faster than setAttribute in theory\n    // if this is an element during a transition, take the temporary transition\n    // classes into account.\n    const transitionClasses = el._vtc;\n    if (transitionClasses) {\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\n    }\n    if (value == null) {\n        el.removeAttribute('class');\n    }\n    else if (isSVG) {\n        el.setAttribute('class', value);\n    }\n    else {\n        el.className = value;\n    }\n}\n\nfunction patchStyle(el, prev, next) {\n    const style = el.style;\n    const isCssString = isString(next);\n    if (next && !isCssString) {\n        for (const key in next) {\n            setStyle(style, key, next[key]);\n        }\n        if (prev && !isString(prev)) {\n            for (const key in prev) {\n                if (next[key] == null) {\n                    setStyle(style, key, '');\n                }\n            }\n        }\n    }\n    else {\n        const currentDisplay = style.display;\n        if (isCssString) {\n            if (prev !== next) {\n                style.cssText = next;\n            }\n        }\n        else if (prev) {\n            el.removeAttribute('style');\n        }\n        // indicates that the `display` of the element is controlled by `v-show`,\n        // so we always keep the current `display` value regardless of the `style`\n        // value, thus handing over control to `v-show`.\n        if ('_vod' in el) {\n            style.display = currentDisplay;\n        }\n    }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n    if (isArray(val)) {\n        val.forEach(v => setStyle(style, name, v));\n    }\n    else {\n        if (val == null)\n            val = '';\n        if ((process.env.NODE_ENV !== 'production')) {\n            if (semicolonRE.test(val)) {\n                warn(`Unexpected semicolon at the end of '${name}' style value: '${val}'`);\n            }\n        }\n        if (name.startsWith('--')) {\n            // custom property definition\n            style.setProperty(name, val);\n        }\n        else {\n            const prefixed = autoPrefix(style, name);\n            if (importantRE.test(val)) {\n                // !important\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\n            }\n            else {\n                style[prefixed] = val;\n            }\n        }\n    }\n}\nconst prefixes = ['Webkit', 'Moz', 'ms'];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n    const cached = prefixCache[rawName];\n    if (cached) {\n        return cached;\n    }\n    let name = camelize(rawName);\n    if (name !== 'filter' && name in style) {\n        return (prefixCache[rawName] = name);\n    }\n    name = capitalize(name);\n    for (let i = 0; i < prefixes.length; i++) {\n        const prefixed = prefixes[i] + name;\n        if (prefixed in style) {\n            return (prefixCache[rawName] = prefixed);\n        }\n    }\n    return rawName;\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\nfunction patchAttr(el, key, value, isSVG, instance) {\n    if (isSVG && key.startsWith('xlink:')) {\n        if (value == null) {\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n        }\n        else {\n            el.setAttributeNS(xlinkNS, key, value);\n        }\n    }\n    else {\n        // note we are only checking boolean attributes that don't have a\n        // corresponding dom prop of the same name here.\n        const isBoolean = isSpecialBooleanAttr(key);\n        if (value == null || (isBoolean && !includeBooleanAttr(value))) {\n            el.removeAttribute(key);\n        }\n        else {\n            el.setAttribute(key, isBoolean ? '' : value);\n        }\n    }\n}\n\n// __UNSAFE__\n// functions. The user is responsible for using them with only trusted content.\nfunction patchDOMProp(el, key, value, \n// the following args are passed only due to potential innerHTML/textContent\n// overriding existing VNodes, in which case the old tree must be properly\n// unmounted.\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\n    if (key === 'innerHTML' || key === 'textContent') {\n        if (prevChildren) {\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\n        }\n        el[key] = value == null ? '' : value;\n        return;\n    }\n    if (key === 'value' &&\n        el.tagName !== 'PROGRESS' &&\n        // custom elements may use _value internally\n        !el.tagName.includes('-')) {\n        // store value as _value as well since\n        // non-string values will be stringified.\n        el._value = value;\n        const newValue = value == null ? '' : value;\n        if (el.value !== newValue ||\n            // #4956: always set for OPTION elements because its value falls back to\n            // textContent if no value attribute is present. And setting .value for\n            // OPTION has no side effect\n            el.tagName === 'OPTION') {\n            el.value = newValue;\n        }\n        if (value == null) {\n            el.removeAttribute(key);\n        }\n        return;\n    }\n    let needRemove = false;\n    if (value === '' || value == null) {\n        const type = typeof el[key];\n        if (type === 'boolean') {\n            // e.g. <select multiple> compiles to { multiple: '' }\n            value = includeBooleanAttr(value);\n        }\n        else if (value == null && type === 'string') {\n            // e.g. <div :id=\"null\">\n            value = '';\n            needRemove = true;\n        }\n        else if (type === 'number') {\n            // e.g. <img :width=\"null\">\n            value = 0;\n            needRemove = true;\n        }\n    }\n    // some properties perform value validation and throw,\n    // some properties has getter, no setter, will error in 'use strict'\n    // eg. <select :type=\"null\"></select> <select :willValidate=\"null\"></select>\n    try {\n        el[key] = value;\n    }\n    catch (e) {\n        // do not warn if value is auto-coerced from nullish values\n        if ((process.env.NODE_ENV !== 'production') && !needRemove) {\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\n                `value ${value} is invalid.`, e);\n        }\n    }\n    needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n    el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n    el.removeEventListener(event, handler, options);\n}\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n    // vei = vue event invokers\n    const invokers = el._vei || (el._vei = {});\n    const existingInvoker = invokers[rawName];\n    if (nextValue && existingInvoker) {\n        // patch\n        existingInvoker.value = nextValue;\n    }\n    else {\n        const [name, options] = parseName(rawName);\n        if (nextValue) {\n            // add\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\n            addEventListener(el, name, invoker, options);\n        }\n        else if (existingInvoker) {\n            // remove\n            removeEventListener(el, name, existingInvoker, options);\n            invokers[rawName] = undefined;\n        }\n    }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n    let options;\n    if (optionsModifierRE.test(name)) {\n        options = {};\n        let m;\n        while ((m = name.match(optionsModifierRE))) {\n            name = name.slice(0, name.length - m[0].length);\n            options[m[0].toLowerCase()] = true;\n        }\n    }\n    const event = name[2] === ':' ? name.slice(3) : hyphenate(name.slice(2));\n    return [event, options];\n}\n// To avoid the overhead of repeatedly calling Date.now(), we cache\n// and use the same timestamp for all event listeners attached in the same tick.\nlet cachedNow = 0;\nconst p = /*#__PURE__*/ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = Date.now()));\nfunction createInvoker(initialValue, instance) {\n    const invoker = (e) => {\n        // async edge case vuejs/vue#6566\n        // inner click event triggers patch, event handler\n        // attached to outer element during patch, and triggered again. This\n        // happens because browsers fire microtask ticks between event propagation.\n        // this no longer happens for templates in Vue 3, but could still be\n        // theoretically possible for hand-written render functions.\n        // the solution: we save the timestamp when a handler is attached,\n        // and also attach the timestamp to any event that was handled by vue\n        // for the first time (to avoid inconsistent event timestamp implementations\n        // or events fired from iframes, e.g. #2513)\n        // The handler would only fire if the event passed to it was fired\n        // AFTER it was attached.\n        if (!e._vts) {\n            e._vts = Date.now();\n        }\n        else if (e._vts <= invoker.attached) {\n            return;\n        }\n        callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* ErrorCodes.NATIVE_EVENT_HANDLER */, [e]);\n    };\n    invoker.value = initialValue;\n    invoker.attached = getNow();\n    return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n    if (isArray(value)) {\n        const originalStop = e.stopImmediatePropagation;\n        e.stopImmediatePropagation = () => {\n            originalStop.call(e);\n            e._stopped = true;\n        };\n        return value.map(fn => (e) => !e._stopped && fn && fn(e));\n    }\n    else {\n        return value;\n    }\n}\n\nconst nativeOnRE = /^on[a-z]/;\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n    if (key === 'class') {\n        patchClass(el, nextValue, isSVG);\n    }\n    else if (key === 'style') {\n        patchStyle(el, prevValue, nextValue);\n    }\n    else if (isOn(key)) {\n        // ignore v-model listeners\n        if (!isModelListener(key)) {\n            patchEvent(el, key, prevValue, nextValue, parentComponent);\n        }\n    }\n    else if (key[0] === '.'\n        ? ((key = key.slice(1)), true)\n        : key[0] === '^'\n            ? ((key = key.slice(1)), false)\n            : shouldSetAsProp(el, key, nextValue, isSVG)) {\n        patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\n    }\n    else {\n        // special case for <input v-model type=\"checkbox\"> with\n        // :true-value & :false-value\n        // store value as dom properties since non-string values will be\n        // stringified.\n        if (key === 'true-value') {\n            el._trueValue = nextValue;\n        }\n        else if (key === 'false-value') {\n            el._falseValue = nextValue;\n        }\n        patchAttr(el, key, nextValue, isSVG);\n    }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n    if (isSVG) {\n        // most keys must be set as attribute on svg elements to work\n        // ...except innerHTML & textContent\n        if (key === 'innerHTML' || key === 'textContent') {\n            return true;\n        }\n        // or native onclick with function values\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n            return true;\n        }\n        return false;\n    }\n    // these are enumerated attrs, however their corresponding DOM properties\n    // are actually booleans - this leads to setting it with a string \"false\"\n    // value leading it to be coerced to `true`, so we need to always treat\n    // them as attributes.\n    // Note that `contentEditable` doesn't have this problem: its DOM\n    // property is also enumerated string values.\n    if (key === 'spellcheck' || key === 'draggable' || key === 'translate') {\n        return false;\n    }\n    // #1787, #2840 form property on form elements is readonly and must be set as\n    // attribute.\n    if (key === 'form') {\n        return false;\n    }\n    // #1526 <input list> must be set as attribute\n    if (key === 'list' && el.tagName === 'INPUT') {\n        return false;\n    }\n    // #2766 <textarea type> must be set as attribute\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\n        return false;\n    }\n    // native onclick with string value, must be set as attribute\n    if (nativeOnRE.test(key) && isString(value)) {\n        return false;\n    }\n    return key in el;\n}\n\nfunction defineCustomElement(options, hydrate) {\n    const Comp = defineComponent(options);\n    class VueCustomElement extends VueElement {\n        constructor(initialProps) {\n            super(Comp, initialProps, hydrate);\n        }\n    }\n    VueCustomElement.def = Comp;\n    return VueCustomElement;\n}\nconst defineSSRCustomElement = ((options) => {\n    // @ts-ignore\n    return defineCustomElement(options, hydrate);\n});\nconst BaseClass = (typeof HTMLElement !== 'undefined' ? HTMLElement : class {\n});\nclass VueElement extends BaseClass {\n    constructor(_def, _props = {}, hydrate) {\n        super();\n        this._def = _def;\n        this._props = _props;\n        /**\n         * @internal\n         */\n        this._instance = null;\n        this._connected = false;\n        this._resolved = false;\n        this._numberProps = null;\n        if (this.shadowRoot && hydrate) {\n            hydrate(this._createVNode(), this.shadowRoot);\n        }\n        else {\n            if ((process.env.NODE_ENV !== 'production') && this.shadowRoot) {\n                warn(`Custom element has pre-rendered declarative shadow root but is not ` +\n                    `defined as hydratable. Use \\`defineSSRCustomElement\\`.`);\n            }\n            this.attachShadow({ mode: 'open' });\n            if (!this._def.__asyncLoader) {\n                // for sync component defs we can immediately resolve props\n                this._resolveProps(this._def);\n            }\n        }\n    }\n    connectedCallback() {\n        this._connected = true;\n        if (!this._instance) {\n            if (this._resolved) {\n                this._update();\n            }\n            else {\n                this._resolveDef();\n            }\n        }\n    }\n    disconnectedCallback() {\n        this._connected = false;\n        nextTick(() => {\n            if (!this._connected) {\n                render(null, this.shadowRoot);\n                this._instance = null;\n            }\n        });\n    }\n    /**\n     * resolve inner component definition (handle possible async component)\n     */\n    _resolveDef() {\n        this._resolved = true;\n        // set initial attrs\n        for (let i = 0; i < this.attributes.length; i++) {\n            this._setAttr(this.attributes[i].name);\n        }\n        // watch future attr changes\n        new MutationObserver(mutations => {\n            for (const m of mutations) {\n                this._setAttr(m.attributeName);\n            }\n        }).observe(this, { attributes: true });\n        const resolve = (def, isAsync = false) => {\n            const { props, styles } = def;\n            // cast Number-type props set before resolve\n            let numberProps;\n            if (props && !isArray(props)) {\n                for (const key in props) {\n                    const opt = props[key];\n                    if (opt === Number || (opt && opt.type === Number)) {\n                        if (key in this._props) {\n                            this._props[key] = toNumber(this._props[key]);\n                        }\n                        (numberProps || (numberProps = Object.create(null)))[camelize$1(key)] = true;\n                    }\n                }\n            }\n            this._numberProps = numberProps;\n            if (isAsync) {\n                // defining getter/setters on prototype\n                // for sync defs, this already happened in the constructor\n                this._resolveProps(def);\n            }\n            // apply CSS\n            this._applyStyles(styles);\n            // initial render\n            this._update();\n        };\n        const asyncDef = this._def.__asyncLoader;\n        if (asyncDef) {\n            asyncDef().then(def => resolve(def, true));\n        }\n        else {\n            resolve(this._def);\n        }\n    }\n    _resolveProps(def) {\n        const { props } = def;\n        const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});\n        // check if there are props set pre-upgrade or connect\n        for (const key of Object.keys(this)) {\n            if (key[0] !== '_' && declaredPropKeys.includes(key)) {\n                this._setProp(key, this[key], true, false);\n            }\n        }\n        // defining getter/setters on prototype\n        for (const key of declaredPropKeys.map(camelize$1)) {\n            Object.defineProperty(this, key, {\n                get() {\n                    return this._getProp(key);\n                },\n                set(val) {\n                    this._setProp(key, val);\n                }\n            });\n        }\n    }\n    _setAttr(key) {\n        let value = this.getAttribute(key);\n        const camelKey = camelize$1(key);\n        if (this._numberProps && this._numberProps[camelKey]) {\n            value = toNumber(value);\n        }\n        this._setProp(camelKey, value, false);\n    }\n    /**\n     * @internal\n     */\n    _getProp(key) {\n        return this._props[key];\n    }\n    /**\n     * @internal\n     */\n    _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n        if (val !== this._props[key]) {\n            this._props[key] = val;\n            if (shouldUpdate && this._instance) {\n                this._update();\n            }\n            // reflect\n            if (shouldReflect) {\n                if (val === true) {\n                    this.setAttribute(hyphenate(key), '');\n                }\n                else if (typeof val === 'string' || typeof val === 'number') {\n                    this.setAttribute(hyphenate(key), val + '');\n                }\n                else if (!val) {\n                    this.removeAttribute(hyphenate(key));\n                }\n            }\n        }\n    }\n    _update() {\n        render(this._createVNode(), this.shadowRoot);\n    }\n    _createVNode() {\n        const vnode = createVNode(this._def, extend({}, this._props));\n        if (!this._instance) {\n            vnode.ce = instance => {\n                this._instance = instance;\n                instance.isCE = true;\n                // HMR\n                if ((process.env.NODE_ENV !== 'production')) {\n                    instance.ceReload = newStyles => {\n                        // always reset styles\n                        if (this._styles) {\n                            this._styles.forEach(s => this.shadowRoot.removeChild(s));\n                            this._styles.length = 0;\n                        }\n                        this._applyStyles(newStyles);\n                        this._instance = null;\n                        this._update();\n                    };\n                }\n                const dispatch = (event, args) => {\n                    this.dispatchEvent(new CustomEvent(event, {\n                        detail: args\n                    }));\n                };\n                // intercept emit\n                instance.emit = (event, ...args) => {\n                    // dispatch both the raw and hyphenated versions of an event\n                    // to match Vue behavior\n                    dispatch(event, args);\n                    if (hyphenate(event) !== event) {\n                        dispatch(hyphenate(event), args);\n                    }\n                };\n                // locate nearest Vue custom element parent for provide/inject\n                let parent = this;\n                while ((parent =\n                    parent && (parent.parentNode || parent.host))) {\n                    if (parent instanceof VueElement) {\n                        instance.parent = parent._instance;\n                        instance.provides = parent._instance.provides;\n                        break;\n                    }\n                }\n            };\n        }\n        return vnode;\n    }\n    _applyStyles(styles) {\n        if (styles) {\n            styles.forEach(css => {\n                const s = document.createElement('style');\n                s.textContent = css;\n                this.shadowRoot.appendChild(s);\n                // record for HMR\n                if ((process.env.NODE_ENV !== 'production')) {\n                    (this._styles || (this._styles = [])).push(s);\n                }\n            });\n        }\n    }\n}\n\nfunction useCssModule(name = '$style') {\n    /* istanbul ignore else */\n    {\n        const instance = getCurrentInstance();\n        if (!instance) {\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\n            return EMPTY_OBJ;\n        }\n        const modules = instance.type.__cssModules;\n        if (!modules) {\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\n            return EMPTY_OBJ;\n        }\n        const mod = modules[name];\n        if (!mod) {\n            (process.env.NODE_ENV !== 'production') &&\n                warn(`Current instance does not have CSS module named \"${name}\".`);\n            return EMPTY_OBJ;\n        }\n        return mod;\n    }\n}\n\n/**\n * Runtime helper for SFC's CSS variable injection feature.\n * @private\n */\nfunction useCssVars(getter) {\n    const instance = getCurrentInstance();\n    /* istanbul ignore next */\n    if (!instance) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn(`useCssVars is called without current active component instance.`);\n        return;\n    }\n    const updateTeleports = (instance.ut = (vars = getter(instance.proxy)) => {\n        Array.from(document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)).forEach(node => setVarsOnNode(node, vars));\n    });\n    const setVars = () => {\n        const vars = getter(instance.proxy);\n        setVarsOnVNode(instance.subTree, vars);\n        updateTeleports(vars);\n    };\n    watchPostEffect(setVars);\n    onMounted(() => {\n        const ob = new MutationObserver(setVars);\n        ob.observe(instance.subTree.el.parentNode, { childList: true });\n        onUnmounted(() => ob.disconnect());\n    });\n}\nfunction setVarsOnVNode(vnode, vars) {\n    if (vnode.shapeFlag & 128 /* ShapeFlags.SUSPENSE */) {\n        const suspense = vnode.suspense;\n        vnode = suspense.activeBranch;\n        if (suspense.pendingBranch && !suspense.isHydrating) {\n            suspense.effects.push(() => {\n                setVarsOnVNode(suspense.activeBranch, vars);\n            });\n        }\n    }\n    // drill down HOCs until it's a non-component vnode\n    while (vnode.component) {\n        vnode = vnode.component.subTree;\n    }\n    if (vnode.shapeFlag & 1 /* ShapeFlags.ELEMENT */ && vnode.el) {\n        setVarsOnNode(vnode.el, vars);\n    }\n    else if (vnode.type === Fragment) {\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\n    }\n    else if (vnode.type === Static) {\n        let { el, anchor } = vnode;\n        while (el) {\n            setVarsOnNode(el, vars);\n            if (el === anchor)\n                break;\n            el = el.nextSibling;\n        }\n    }\n}\nfunction setVarsOnNode(el, vars) {\n    if (el.nodeType === 1) {\n        const style = el.style;\n        for (const key in vars) {\n            style.setProperty(`--${key}`, vars[key]);\n        }\n    }\n}\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n// DOM Transition is a higher-order-component based on the platform-agnostic\n// base Transition component, with DOM-specific logic.\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = 'Transition';\nconst DOMTransitionPropsValidators = {\n    name: String,\n    type: String,\n    css: {\n        type: Boolean,\n        default: true\n    },\n    duration: [String, Number, Object],\n    enterFromClass: String,\n    enterActiveClass: String,\n    enterToClass: String,\n    appearFromClass: String,\n    appearActiveClass: String,\n    appearToClass: String,\n    leaveFromClass: String,\n    leaveActiveClass: String,\n    leaveToClass: String\n};\nconst TransitionPropsValidators = (Transition.props =\n    /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\n/**\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\n * with custom HOCs.\n */\nconst callHook = (hook, args = []) => {\n    if (isArray(hook)) {\n        hook.forEach(h => h(...args));\n    }\n    else if (hook) {\n        hook(...args);\n    }\n};\n/**\n * Check if a hook expects a callback (2nd arg), which means the user\n * intends to explicitly control the end of the transition.\n */\nconst hasExplicitCallback = (hook) => {\n    return hook\n        ? isArray(hook)\n            ? hook.some(h => h.length > 1)\n            : hook.length > 1\n        : false;\n};\nfunction resolveTransitionProps(rawProps) {\n    const baseProps = {};\n    for (const key in rawProps) {\n        if (!(key in DOMTransitionPropsValidators)) {\n            baseProps[key] = rawProps[key];\n        }\n    }\n    if (rawProps.css === false) {\n        return baseProps;\n    }\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\n    const durations = normalizeDuration(duration);\n    const enterDuration = durations && durations[0];\n    const leaveDuration = durations && durations[1];\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\n    const finishEnter = (el, isAppear, done) => {\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n        done && done();\n    };\n    const finishLeave = (el, done) => {\n        el._isLeaving = false;\n        removeTransitionClass(el, leaveFromClass);\n        removeTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveActiveClass);\n        done && done();\n    };\n    const makeEnterHook = (isAppear) => {\n        return (el, done) => {\n            const hook = isAppear ? onAppear : onEnter;\n            const resolve = () => finishEnter(el, isAppear, done);\n            callHook(hook, [el, resolve]);\n            nextFrame(() => {\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n                if (!hasExplicitCallback(hook)) {\n                    whenTransitionEnds(el, type, enterDuration, resolve);\n                }\n            });\n        };\n    };\n    return extend(baseProps, {\n        onBeforeEnter(el) {\n            callHook(onBeforeEnter, [el]);\n            addTransitionClass(el, enterFromClass);\n            addTransitionClass(el, enterActiveClass);\n        },\n        onBeforeAppear(el) {\n            callHook(onBeforeAppear, [el]);\n            addTransitionClass(el, appearFromClass);\n            addTransitionClass(el, appearActiveClass);\n        },\n        onEnter: makeEnterHook(false),\n        onAppear: makeEnterHook(true),\n        onLeave(el, done) {\n            el._isLeaving = true;\n            const resolve = () => finishLeave(el, done);\n            addTransitionClass(el, leaveFromClass);\n            // force reflow so *-leave-from classes immediately take effect (#2593)\n            forceReflow();\n            addTransitionClass(el, leaveActiveClass);\n            nextFrame(() => {\n                if (!el._isLeaving) {\n                    // cancelled\n                    return;\n                }\n                removeTransitionClass(el, leaveFromClass);\n                addTransitionClass(el, leaveToClass);\n                if (!hasExplicitCallback(onLeave)) {\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\n                }\n            });\n            callHook(onLeave, [el, resolve]);\n        },\n        onEnterCancelled(el) {\n            finishEnter(el, false);\n            callHook(onEnterCancelled, [el]);\n        },\n        onAppearCancelled(el) {\n            finishEnter(el, true);\n            callHook(onAppearCancelled, [el]);\n        },\n        onLeaveCancelled(el) {\n            finishLeave(el);\n            callHook(onLeaveCancelled, [el]);\n        }\n    });\n}\nfunction normalizeDuration(duration) {\n    if (duration == null) {\n        return null;\n    }\n    else if (isObject(duration)) {\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\n    }\n    else {\n        const n = NumberOf(duration);\n        return [n, n];\n    }\n}\nfunction NumberOf(val) {\n    const res = toNumber(val);\n    if ((process.env.NODE_ENV !== 'production'))\n        validateDuration(res);\n    return res;\n}\nfunction validateDuration(val) {\n    if (typeof val !== 'number') {\n        warn(`<transition> explicit duration is not a valid number - ` +\n            `got ${JSON.stringify(val)}.`);\n    }\n    else if (isNaN(val)) {\n        warn(`<transition> explicit duration is NaN - ` +\n            'the duration expression might be incorrect.');\n    }\n}\nfunction addTransitionClass(el, cls) {\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\n    (el._vtc ||\n        (el._vtc = new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\n    const { _vtc } = el;\n    if (_vtc) {\n        _vtc.delete(cls);\n        if (!_vtc.size) {\n            el._vtc = undefined;\n        }\n    }\n}\nfunction nextFrame(cb) {\n    requestAnimationFrame(() => {\n        requestAnimationFrame(cb);\n    });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n    const id = (el._endId = ++endId);\n    const resolveIfNotStale = () => {\n        if (id === el._endId) {\n            resolve();\n        }\n    };\n    if (explicitTimeout) {\n        return setTimeout(resolveIfNotStale, explicitTimeout);\n    }\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n    if (!type) {\n        return resolve();\n    }\n    const endEvent = type + 'end';\n    let ended = 0;\n    const end = () => {\n        el.removeEventListener(endEvent, onEnd);\n        resolveIfNotStale();\n    };\n    const onEnd = (e) => {\n        if (e.target === el && ++ended >= propCount) {\n            end();\n        }\n    };\n    setTimeout(() => {\n        if (ended < propCount) {\n            end();\n        }\n    }, timeout + 1);\n    el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n    const styles = window.getComputedStyle(el);\n    // JSDOM may return undefined for transition properties\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\n    const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n    const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n    const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n    const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\n    let type = null;\n    let timeout = 0;\n    let propCount = 0;\n    /* istanbul ignore if */\n    if (expectedType === TRANSITION) {\n        if (transitionTimeout > 0) {\n            type = TRANSITION;\n            timeout = transitionTimeout;\n            propCount = transitionDurations.length;\n        }\n    }\n    else if (expectedType === ANIMATION) {\n        if (animationTimeout > 0) {\n            type = ANIMATION;\n            timeout = animationTimeout;\n            propCount = animationDurations.length;\n        }\n    }\n    else {\n        timeout = Math.max(transitionTimeout, animationTimeout);\n        type =\n            timeout > 0\n                ? transitionTimeout > animationTimeout\n                    ? TRANSITION\n                    : ANIMATION\n                : null;\n        propCount = type\n            ? type === TRANSITION\n                ? transitionDurations.length\n                : animationDurations.length\n            : 0;\n    }\n    const hasTransform = type === TRANSITION &&\n        /\\b(transform|all)(,|$)/.test(getStyleProperties(`${TRANSITION}Property`).toString());\n    return {\n        type,\n        timeout,\n        propCount,\n        hasTransform\n    };\n}\nfunction getTimeout(delays, durations) {\n    while (delays.length < durations.length) {\n        delays = delays.concat(delays);\n    }\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\n// numbers in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down\n// (i.e. acting as a floor function) causing unexpected behaviors\nfunction toMs(s) {\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\n}\n// synchronously force layout to put elements into a certain state\nfunction forceReflow() {\n    return document.body.offsetHeight;\n}\n\nconst positionMap = new WeakMap();\nconst newPositionMap = new WeakMap();\nconst TransitionGroupImpl = {\n    name: 'TransitionGroup',\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\n        tag: String,\n        moveClass: String\n    }),\n    setup(props, { slots }) {\n        const instance = getCurrentInstance();\n        const state = useTransitionState();\n        let prevChildren;\n        let children;\n        onUpdated(() => {\n            // children is guaranteed to exist after initial render\n            if (!prevChildren.length) {\n                return;\n            }\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\n                return;\n            }\n            // we divide the work into three loops to avoid mixing DOM reads and writes\n            // in each iteration - which helps prevent layout thrashing.\n            prevChildren.forEach(callPendingCbs);\n            prevChildren.forEach(recordPosition);\n            const movedChildren = prevChildren.filter(applyTranslation);\n            // force reflow to put everything in position\n            forceReflow();\n            movedChildren.forEach(c => {\n                const el = c.el;\n                const style = el.style;\n                addTransitionClass(el, moveClass);\n                style.transform = style.webkitTransform = style.transitionDuration = '';\n                const cb = (el._moveCb = (e) => {\n                    if (e && e.target !== el) {\n                        return;\n                    }\n                    if (!e || /transform$/.test(e.propertyName)) {\n                        el.removeEventListener('transitionend', cb);\n                        el._moveCb = null;\n                        removeTransitionClass(el, moveClass);\n                    }\n                });\n                el.addEventListener('transitionend', cb);\n            });\n        });\n        return () => {\n            const rawProps = toRaw(props);\n            const cssTransitionProps = resolveTransitionProps(rawProps);\n            let tag = rawProps.tag || Fragment;\n            prevChildren = children;\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (child.key != null) {\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                }\n                else if ((process.env.NODE_ENV !== 'production')) {\n                    warn(`<TransitionGroup> children must be keyed.`);\n                }\n            }\n            if (prevChildren) {\n                for (let i = 0; i < prevChildren.length; i++) {\n                    const child = prevChildren[i];\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\n                    positionMap.set(child, child.el.getBoundingClientRect());\n                }\n            }\n            return createVNode(tag, null, children);\n        };\n    }\n};\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n    const el = c.el;\n    if (el._moveCb) {\n        el._moveCb();\n    }\n    if (el._enterCb) {\n        el._enterCb();\n    }\n}\nfunction recordPosition(c) {\n    newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n    const oldPos = positionMap.get(c);\n    const newPos = newPositionMap.get(c);\n    const dx = oldPos.left - newPos.left;\n    const dy = oldPos.top - newPos.top;\n    if (dx || dy) {\n        const s = c.el.style;\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n        s.transitionDuration = '0s';\n        return c;\n    }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n    // Detect whether an element with the move class applied has\n    // CSS transitions. Since the element may be inside an entering\n    // transition at this very moment, we make a clone of it and remove\n    // all other transition classes applied to ensure only the move class\n    // is applied.\n    const clone = el.cloneNode();\n    if (el._vtc) {\n        el._vtc.forEach(cls => {\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\n        });\n    }\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\n    clone.style.display = 'none';\n    const container = (root.nodeType === 1 ? root : root.parentNode);\n    container.appendChild(clone);\n    const { hasTransform } = getTransitionInfo(clone);\n    container.removeChild(clone);\n    return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n    const fn = vnode.props['onUpdate:modelValue'] ||\n        (false );\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n    e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n    const target = e.target;\n    if (target.composing) {\n        target.composing = false;\n        target.dispatchEvent(new Event('input'));\n    }\n}\n// We are exporting the v-model runtime directly as vnode hooks so that it can\n// be tree-shaken in case v-model is never used.\nconst vModelText = {\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\n        el._assign = getModelAssigner(vnode);\n        const castToNumber = number || (vnode.props && vnode.props.type === 'number');\n        addEventListener(el, lazy ? 'change' : 'input', e => {\n            if (e.target.composing)\n                return;\n            let domValue = el.value;\n            if (trim) {\n                domValue = domValue.trim();\n            }\n            if (castToNumber) {\n                domValue = toNumber(domValue);\n            }\n            el._assign(domValue);\n        });\n        if (trim) {\n            addEventListener(el, 'change', () => {\n                el.value = el.value.trim();\n            });\n        }\n        if (!lazy) {\n            addEventListener(el, 'compositionstart', onCompositionStart);\n            addEventListener(el, 'compositionend', onCompositionEnd);\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\n            // switching focus before confirming composition choice\n            // this also fixes the issue where some browsers e.g. iOS Chrome\n            // fires \"change\" instead of \"input\" on autocomplete.\n            addEventListener(el, 'change', onCompositionEnd);\n        }\n    },\n    // set value on mounted so it's after min/max for type=\"range\"\n    mounted(el, { value }) {\n        el.value = value == null ? '' : value;\n    },\n    beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n        el._assign = getModelAssigner(vnode);\n        // avoid clearing unresolved text. #2302\n        if (el.composing)\n            return;\n        if (document.activeElement === el && el.type !== 'range') {\n            if (lazy) {\n                return;\n            }\n            if (trim && el.value.trim() === value) {\n                return;\n            }\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\n                return;\n            }\n        }\n        const newValue = value == null ? '' : value;\n        if (el.value !== newValue) {\n            el.value = newValue;\n        }\n    }\n};\nconst vModelCheckbox = {\n    // #4096 array checkboxes need to be deep traversed\n    deep: true,\n    created(el, _, vnode) {\n        el._assign = getModelAssigner(vnode);\n        addEventListener(el, 'change', () => {\n            const modelValue = el._modelValue;\n            const elementValue = getValue(el);\n            const checked = el.checked;\n            const assign = el._assign;\n            if (isArray(modelValue)) {\n                const index = looseIndexOf(modelValue, elementValue);\n                const found = index !== -1;\n                if (checked && !found) {\n                    assign(modelValue.concat(elementValue));\n                }\n                else if (!checked && found) {\n                    const filtered = [...modelValue];\n                    filtered.splice(index, 1);\n                    assign(filtered);\n                }\n            }\n            else if (isSet(modelValue)) {\n                const cloned = new Set(modelValue);\n                if (checked) {\n                    cloned.add(elementValue);\n                }\n                else {\n                    cloned.delete(elementValue);\n                }\n                assign(cloned);\n            }\n            else {\n                assign(getCheckboxValue(el, checked));\n            }\n        });\n    },\n    // set initial checked on mount to wait for true-value/false-value\n    mounted: setChecked,\n    beforeUpdate(el, binding, vnode) {\n        el._assign = getModelAssigner(vnode);\n        setChecked(el, binding, vnode);\n    }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n    el._modelValue = value;\n    if (isArray(value)) {\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\n    }\n    else if (isSet(value)) {\n        el.checked = value.has(vnode.props.value);\n    }\n    else if (value !== oldValue) {\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\n    }\n}\nconst vModelRadio = {\n    created(el, { value }, vnode) {\n        el.checked = looseEqual(value, vnode.props.value);\n        el._assign = getModelAssigner(vnode);\n        addEventListener(el, 'change', () => {\n            el._assign(getValue(el));\n        });\n    },\n    beforeUpdate(el, { value, oldValue }, vnode) {\n        el._assign = getModelAssigner(vnode);\n        if (value !== oldValue) {\n            el.checked = looseEqual(value, vnode.props.value);\n        }\n    }\n};\nconst vModelSelect = {\n    // <select multiple> value need to be deep traversed\n    deep: true,\n    created(el, { value, modifiers: { number } }, vnode) {\n        const isSetModel = isSet(value);\n        addEventListener(el, 'change', () => {\n            const selectedVal = Array.prototype.filter\n                .call(el.options, (o) => o.selected)\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\n            el._assign(el.multiple\n                ? isSetModel\n                    ? new Set(selectedVal)\n                    : selectedVal\n                : selectedVal[0]);\n        });\n        el._assign = getModelAssigner(vnode);\n    },\n    // set value in mounted & updated because <select> relies on its children\n    // <option>s.\n    mounted(el, { value }) {\n        setSelected(el, value);\n    },\n    beforeUpdate(el, _binding, vnode) {\n        el._assign = getModelAssigner(vnode);\n    },\n    updated(el, { value }) {\n        setSelected(el, value);\n    }\n};\nfunction setSelected(el, value) {\n    const isMultiple = el.multiple;\n    if (isMultiple && !isArray(value) && !isSet(value)) {\n        (process.env.NODE_ENV !== 'production') &&\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\n        return;\n    }\n    for (let i = 0, l = el.options.length; i < l; i++) {\n        const option = el.options[i];\n        const optionValue = getValue(option);\n        if (isMultiple) {\n            if (isArray(value)) {\n                option.selected = looseIndexOf(value, optionValue) > -1;\n            }\n            else {\n                option.selected = value.has(optionValue);\n            }\n        }\n        else {\n            if (looseEqual(getValue(option), value)) {\n                if (el.selectedIndex !== i)\n                    el.selectedIndex = i;\n                return;\n            }\n        }\n    }\n    if (!isMultiple && el.selectedIndex !== -1) {\n        el.selectedIndex = -1;\n    }\n}\n// retrieve raw value set via :value bindings\nfunction getValue(el) {\n    return '_value' in el ? el._value : el.value;\n}\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\nfunction getCheckboxValue(el, checked) {\n    const key = checked ? '_trueValue' : '_falseValue';\n    return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n    created(el, binding, vnode) {\n        callModelHook(el, binding, vnode, null, 'created');\n    },\n    mounted(el, binding, vnode) {\n        callModelHook(el, binding, vnode, null, 'mounted');\n    },\n    beforeUpdate(el, binding, vnode, prevVNode) {\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\n    },\n    updated(el, binding, vnode, prevVNode) {\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\n    }\n};\nfunction resolveDynamicModel(tagName, type) {\n    switch (tagName) {\n        case 'SELECT':\n            return vModelSelect;\n        case 'TEXTAREA':\n            return vModelText;\n        default:\n            switch (type) {\n                case 'checkbox':\n                    return vModelCheckbox;\n                case 'radio':\n                    return vModelRadio;\n                default:\n                    return vModelText;\n            }\n    }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n    const modelToUse = resolveDynamicModel(el.tagName, vnode.props && vnode.props.type);\n    const fn = modelToUse[hook];\n    fn && fn(el, binding, vnode, prevVNode);\n}\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nfunction initVModelForSSR() {\n    vModelText.getSSRProps = ({ value }) => ({ value });\n    vModelRadio.getSSRProps = ({ value }, vnode) => {\n        if (vnode.props && looseEqual(vnode.props.value, value)) {\n            return { checked: true };\n        }\n    };\n    vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n        if (isArray(value)) {\n            if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n                return { checked: true };\n            }\n        }\n        else if (isSet(value)) {\n            if (vnode.props && value.has(vnode.props.value)) {\n                return { checked: true };\n            }\n        }\n        else if (value) {\n            return { checked: true };\n        }\n    };\n    vModelDynamic.getSSRProps = (binding, vnode) => {\n        if (typeof vnode.type !== 'string') {\n            return;\n        }\n        const modelToUse = resolveDynamicModel(\n        // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n        vnode.type.toUpperCase(), vnode.props && vnode.props.type);\n        if (modelToUse.getSSRProps) {\n            return modelToUse.getSSRProps(binding, vnode);\n        }\n    };\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\nconst modifierGuards = {\n    stop: e => e.stopPropagation(),\n    prevent: e => e.preventDefault(),\n    self: e => e.target !== e.currentTarget,\n    ctrl: e => !e.ctrlKey,\n    shift: e => !e.shiftKey,\n    alt: e => !e.altKey,\n    meta: e => !e.metaKey,\n    left: e => 'button' in e && e.button !== 0,\n    middle: e => 'button' in e && e.button !== 1,\n    right: e => 'button' in e && e.button !== 2,\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\n};\n/**\n * @private\n */\nconst withModifiers = (fn, modifiers) => {\n    return (event, ...args) => {\n        for (let i = 0; i < modifiers.length; i++) {\n            const guard = modifierGuards[modifiers[i]];\n            if (guard && guard(event, modifiers))\n                return;\n        }\n        return fn(event, ...args);\n    };\n};\n// Kept for 2.x compat.\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\nconst keyNames = {\n    esc: 'escape',\n    space: ' ',\n    up: 'arrow-up',\n    left: 'arrow-left',\n    right: 'arrow-right',\n    down: 'arrow-down',\n    delete: 'backspace'\n};\n/**\n * @private\n */\nconst withKeys = (fn, modifiers) => {\n    return (event) => {\n        if (!('key' in event)) {\n            return;\n        }\n        const eventKey = hyphenate(event.key);\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\n            return fn(event);\n        }\n    };\n};\n\nconst vShow = {\n    beforeMount(el, { value }, { transition }) {\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\n        if (transition && value) {\n            transition.beforeEnter(el);\n        }\n        else {\n            setDisplay(el, value);\n        }\n    },\n    mounted(el, { value }, { transition }) {\n        if (transition && value) {\n            transition.enter(el);\n        }\n    },\n    updated(el, { value, oldValue }, { transition }) {\n        if (!value === !oldValue)\n            return;\n        if (transition) {\n            if (value) {\n                transition.beforeEnter(el);\n                setDisplay(el, true);\n                transition.enter(el);\n            }\n            else {\n                transition.leave(el, () => {\n                    setDisplay(el, false);\n                });\n            }\n        }\n        else {\n            setDisplay(el, value);\n        }\n    },\n    beforeUnmount(el, { value }) {\n        setDisplay(el, value);\n    }\n};\nfunction setDisplay(el, value) {\n    el.style.display = value ? el._vod : 'none';\n}\n// SSR vnode transforms, only used when user includes client-oriented render\n// function in SSR\nfunction initVShowForSSR() {\n    vShow.getSSRProps = ({ value }) => {\n        if (!value) {\n            return { style: { display: 'none' } };\n        }\n    };\n}\n\nconst rendererOptions = /*#__PURE__*/ extend({ patchProp }, nodeOps);\n// lazy create the renderer - this makes core renderer logic tree-shakable\n// in case the user only imports reactivity utilities from Vue.\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n    return (renderer ||\n        (renderer = createRenderer(rendererOptions)));\n}\nfunction ensureHydrationRenderer() {\n    renderer = enabledHydration\n        ? renderer\n        : createHydrationRenderer(rendererOptions);\n    enabledHydration = true;\n    return renderer;\n}\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\nconst render = ((...args) => {\n    ensureRenderer().render(...args);\n});\nconst hydrate = ((...args) => {\n    ensureHydrationRenderer().hydrate(...args);\n});\nconst createApp = ((...args) => {\n    const app = ensureRenderer().createApp(...args);\n    if ((process.env.NODE_ENV !== 'production')) {\n        injectNativeTagCheck(app);\n        injectCompilerOptionsCheck(app);\n    }\n    const { mount } = app;\n    app.mount = (containerOrSelector) => {\n        const container = normalizeContainer(containerOrSelector);\n        if (!container)\n            return;\n        const component = app._component;\n        if (!isFunction(component) && !component.render && !component.template) {\n            // __UNSAFE__\n            // Reason: potential execution of JS expressions in in-DOM template.\n            // The user must make sure the in-DOM template is trusted. If it's\n            // rendered by the server, the template should not contain any user data.\n            component.template = container.innerHTML;\n        }\n        // clear content before mounting\n        container.innerHTML = '';\n        const proxy = mount(container, false, container instanceof SVGElement);\n        if (container instanceof Element) {\n            container.removeAttribute('v-cloak');\n            container.setAttribute('data-v-app', '');\n        }\n        return proxy;\n    };\n    return app;\n});\nconst createSSRApp = ((...args) => {\n    const app = ensureHydrationRenderer().createApp(...args);\n    if ((process.env.NODE_ENV !== 'production')) {\n        injectNativeTagCheck(app);\n        injectCompilerOptionsCheck(app);\n    }\n    const { mount } = app;\n    app.mount = (containerOrSelector) => {\n        const container = normalizeContainer(containerOrSelector);\n        if (container) {\n            return mount(container, true, container instanceof SVGElement);\n        }\n    };\n    return app;\n});\nfunction injectNativeTagCheck(app) {\n    // Inject `isNativeTag`\n    // this is used for component name validation (dev only)\n    Object.defineProperty(app.config, 'isNativeTag', {\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\n        writable: false\n    });\n}\n// dev only\nfunction injectCompilerOptionsCheck(app) {\n    if (isRuntimeOnly()) {\n        const isCustomElement = app.config.isCustomElement;\n        Object.defineProperty(app.config, 'isCustomElement', {\n            get() {\n                return isCustomElement;\n            },\n            set() {\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\n            }\n        });\n        const compilerOptions = app.config.compilerOptions;\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\n        Object.defineProperty(app.config, 'compilerOptions', {\n            get() {\n                warn(msg);\n                return compilerOptions;\n            },\n            set() {\n                warn(msg);\n            }\n        });\n    }\n}\nfunction normalizeContainer(container) {\n    if (isString(container)) {\n        const res = document.querySelector(container);\n        if ((process.env.NODE_ENV !== 'production') && !res) {\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\n        }\n        return res;\n    }\n    if ((process.env.NODE_ENV !== 'production') &&\n        window.ShadowRoot &&\n        container instanceof window.ShadowRoot &&\n        container.mode === 'closed') {\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\n    }\n    return container;\n}\nlet ssrDirectiveInitialized = false;\n/**\n * @internal\n */\nconst initDirectivesForSSR = () => {\n        if (!ssrDirectiveInitialized) {\n            ssrDirectiveInitialized = true;\n            initVModelForSSR();\n            initVShowForSSR();\n        }\n    }\n    ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\n * Make a map and return a function for checking if a key\n * is in that map.\n * IMPORTANT: all calls of this function must be prefixed with\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\n * So that rollup can tree-shake them if necessary.\n */\nfunction makeMap(str, expectsLowerCase) {\n    const map = Object.create(null);\n    const list = str.split(',');\n    for (let i = 0; i < list.length; i++) {\n        map[list[i]] = true;\n    }\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\n}\n\n/**\n * dev only flag -> name mapping\n */\nconst PatchFlagNames = {\n    [1 /* PatchFlags.TEXT */]: `TEXT`,\n    [2 /* PatchFlags.CLASS */]: `CLASS`,\n    [4 /* PatchFlags.STYLE */]: `STYLE`,\n    [8 /* PatchFlags.PROPS */]: `PROPS`,\n    [16 /* PatchFlags.FULL_PROPS */]: `FULL_PROPS`,\n    [32 /* PatchFlags.HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\n    [64 /* PatchFlags.STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\n    [128 /* PatchFlags.KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\n    [256 /* PatchFlags.UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\n    [512 /* PatchFlags.NEED_PATCH */]: `NEED_PATCH`,\n    [1024 /* PatchFlags.DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\n    [2048 /* PatchFlags.DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\n    [-1 /* PatchFlags.HOISTED */]: `HOISTED`,\n    [-2 /* PatchFlags.BAIL */]: `BAIL`\n};\n\n/**\n * Dev only\n */\nconst slotFlagsText = {\n    [1 /* SlotFlags.STABLE */]: 'STABLE',\n    [2 /* SlotFlags.DYNAMIC */]: 'DYNAMIC',\n    [3 /* SlotFlags.FORWARDED */]: 'FORWARDED'\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n    // Split the content into individual lines but capture the newline sequence\n    // that separated each line. This is important because the actual sequence is\n    // needed to properly take into account the full line length for offset\n    // comparison\n    let lines = source.split(/(\\r?\\n)/);\n    // Separate the lines and newline sequences into separate arrays for easier referencing\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n    lines = lines.filter((_, idx) => idx % 2 === 0);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count +=\n            lines[i].length +\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\n        if (count >= start) {\n            for (let j = i - range; j <= i + range || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\n                if (j === i) {\n                    // push underline\n                    const pad = start - (count - (lineLength + newLineSeqLength));\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + newLineSeqLength;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\n\nfunction normalizeStyle(value) {\n    if (isArray(value)) {\n        const res = {};\n        for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const normalized = isString(item)\n                ? parseStringStyle(item)\n                : normalizeStyle(item);\n            if (normalized) {\n                for (const key in normalized) {\n                    res[key] = normalized[key];\n                }\n            }\n        }\n        return res;\n    }\n    else if (isString(value)) {\n        return value;\n    }\n    else if (isObject(value)) {\n        return value;\n    }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*.*?\\*\\//gs;\nfunction parseStringStyle(cssText) {\n    const ret = {};\n    cssText\n        .replace(styleCommentRE, '')\n        .split(listDelimiterRE)\n        .forEach(item => {\n        if (item) {\n            const tmp = item.split(propertyDelimiterRE);\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n        }\n    });\n    return ret;\n}\nfunction stringifyStyle(styles) {\n    let ret = '';\n    if (!styles || isString(styles)) {\n        return ret;\n    }\n    for (const key in styles) {\n        const value = styles[key];\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n        if (isString(value) || typeof value === 'number') {\n            // only render valid values\n            ret += `${normalizedKey}:${value};`;\n        }\n    }\n    return ret;\n}\nfunction normalizeClass(value) {\n    let res = '';\n    if (isString(value)) {\n        res = value;\n    }\n    else if (isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            const normalized = normalizeClass(value[i]);\n            if (normalized) {\n                res += normalized + ' ';\n            }\n        }\n    }\n    else if (isObject(value)) {\n        for (const name in value) {\n            if (value[name]) {\n                res += name + ' ';\n            }\n        }\n    }\n    return res.trim();\n}\nfunction normalizeProps(props) {\n    if (!props)\n        return null;\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n        props.class = normalizeClass(klass);\n    }\n    if (style) {\n        props.style = normalizeStyle(style);\n    }\n    return props;\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\n    'header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,' +\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\n    'data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,' +\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\n    'option,output,progress,select,textarea,details,dialog,menu,' +\n    'summary,template,blockquote,iframe,tfoot';\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\n    'text,textPath,title,tspan,unknown,use,view';\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\n */\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\n */\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\n/**\n * Compiler only.\n * Do NOT use in runtime code paths unless behind `(process.env.NODE_ENV !== 'production')` flag.\n */\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\n/**\n * On the client we only need to offer special cases for boolean attributes that\n * have different names from their corresponding dom properties:\n * - itemscope -> N/A\n * - allowfullscreen -> allowFullscreen\n * - formnovalidate -> formNoValidate\n * - ismap -> isMap\n * - nomodule -> noModule\n * - novalidate -> noValidate\n * - readonly -> readOnly\n */\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\n/**\n * The full list is needed during SSR to produce the correct initial markup.\n */\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\n    `loop,open,required,reversed,scoped,seamless,` +\n    `checked,muted,multiple,selected`);\n/**\n * Boolean attributes should be included if the value is truthy or ''.\n * e.g. `<select multiple>` compiles to `{ multiple: '' }`\n */\nfunction includeBooleanAttr(value) {\n    return !!value || value === '';\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n    if (attrValidationCache.hasOwnProperty(name)) {\n        return attrValidationCache[name];\n    }\n    const isUnsafe = unsafeAttrCharRE.test(name);\n    if (isUnsafe) {\n        console.error(`unsafe attribute name: ${name}`);\n    }\n    return (attrValidationCache[name] = !isUnsafe);\n}\nconst propsToAttrMap = {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n};\n/**\n * Known attributes, this is used for stringification of runtime static nodes\n * so that we don't stringify bindings that cannot be set from HTML.\n * Don't also forget to allow `data-*` and `aria-*`!\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n */\nconst isKnownHtmlAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\n    `value,width,wrap`);\n/**\n * Generated from https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n */\nconst isKnownSvgAttr = /*#__PURE__*/ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,` +\n    `arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,` +\n    `baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,` +\n    `clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,` +\n    `color-interpolation-filters,color-profile,color-rendering,` +\n    `contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,` +\n    `descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,` +\n    `dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,` +\n    `fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,` +\n    `font-family,font-size,font-size-adjust,font-stretch,font-style,` +\n    `font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,` +\n    `glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,` +\n    `gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,` +\n    `horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,` +\n    `k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,` +\n    `lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,` +\n    `marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,` +\n    `mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,` +\n    `name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,` +\n    `overflow,overline-position,overline-thickness,panose-1,paint-order,path,` +\n    `pathLength,patternContentUnits,patternTransform,patternUnits,ping,` +\n    `pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,` +\n    `preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,` +\n    `rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,` +\n    `restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,` +\n    `specularConstant,specularExponent,speed,spreadMethod,startOffset,` +\n    `stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,` +\n    `strikethrough-position,strikethrough-thickness,string,stroke,` +\n    `stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,` +\n    `stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,` +\n    `systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,` +\n    `text-decoration,text-rendering,textLength,to,transform,transform-origin,` +\n    `type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,` +\n    `unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,` +\n    `v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,` +\n    `vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,` +\n    `writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,` +\n    `xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,` +\n    `xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n    const str = '' + string;\n    const match = escapeRE.exec(str);\n    if (!match) {\n        return str;\n    }\n    let html = '';\n    let escaped;\n    let index;\n    let lastIndex = 0;\n    for (index = match.index; index < str.length; index++) {\n        switch (str.charCodeAt(index)) {\n            case 34: // \"\n                escaped = '&quot;';\n                break;\n            case 38: // &\n                escaped = '&amp;';\n                break;\n            case 39: // '\n                escaped = '&#39;';\n                break;\n            case 60: // <\n                escaped = '&lt;';\n                break;\n            case 62: // >\n                escaped = '&gt;';\n                break;\n            default:\n                continue;\n        }\n        if (lastIndex !== index) {\n            html += str.slice(lastIndex, index);\n        }\n        lastIndex = index + 1;\n        html += escaped;\n    }\n    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\n// https://www.w3.org/TR/html52/syntax.html#comments\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n    return src.replace(commentStripRE, '');\n}\n\nfunction looseCompareArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let equal = true;\n    for (let i = 0; equal && i < a.length; i++) {\n        equal = looseEqual(a[i], b[i]);\n    }\n    return equal;\n}\nfunction looseEqual(a, b) {\n    if (a === b)\n        return true;\n    let aValidType = isDate(a);\n    let bValidType = isDate(b);\n    if (aValidType || bValidType) {\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n    }\n    aValidType = isSymbol(a);\n    bValidType = isSymbol(b);\n    if (aValidType || bValidType) {\n        return a === b;\n    }\n    aValidType = isArray(a);\n    bValidType = isArray(b);\n    if (aValidType || bValidType) {\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n    }\n    aValidType = isObject(a);\n    bValidType = isObject(b);\n    if (aValidType || bValidType) {\n        /* istanbul ignore if: this if will probably never be called */\n        if (!aValidType || !bValidType) {\n            return false;\n        }\n        const aKeysCount = Object.keys(a).length;\n        const bKeysCount = Object.keys(b).length;\n        if (aKeysCount !== bKeysCount) {\n            return false;\n        }\n        for (const key in a) {\n            const aHasKey = a.hasOwnProperty(key);\n            const bHasKey = b.hasOwnProperty(key);\n            if ((aHasKey && !bHasKey) ||\n                (!aHasKey && bHasKey) ||\n                !looseEqual(a[key], b[key])) {\n                return false;\n            }\n        }\n    }\n    return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n    return arr.findIndex(item => looseEqual(item, val));\n}\n\n/**\n * For converting {{ interpolation }} values to displayed strings.\n * @private\n */\nconst toDisplayString = (val) => {\n    return isString(val)\n        ? val\n        : val == null\n            ? ''\n            : isArray(val) ||\n                (isObject(val) &&\n                    (val.toString === objectToString || !isFunction(val.toString)))\n                ? JSON.stringify(val, replacer, 2)\n                : String(val);\n};\nconst replacer = (_key, val) => {\n    // can't use isRef here since @vue/shared has no deps\n    if (val && val.__v_isRef) {\n        return replacer(_key, val.value);\n    }\n    else if (isMap(val)) {\n        return {\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\n                entries[`${key} =>`] = val;\n                return entries;\n            }, {})\n        };\n    }\n    else if (isSet(val)) {\n        return {\n            [`Set(${val.size})`]: [...val.values()]\n        };\n    }\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n        return String(val);\n    }\n    return val;\n};\n\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\n    ? Object.freeze({})\n    : {};\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\nconst NOOP = () => { };\n/**\n * Always return false.\n */\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith('onUpdate:');\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n    const i = arr.indexOf(el);\n    if (i > -1) {\n        arr.splice(i, 1);\n    }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === '[object Map]';\nconst isSet = (val) => toTypeString(val) === '[object Set]';\nconst isDate = (val) => toTypeString(val) === '[object Date]';\nconst isFunction = (val) => typeof val === 'function';\nconst isString = (val) => typeof val === 'string';\nconst isSymbol = (val) => typeof val === 'symbol';\nconst isObject = (val) => val !== null && typeof val === 'object';\nconst isPromise = (val) => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n    // extract \"RawType\" from strings like \"[object RawType]\"\n    return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\nconst isIntegerKey = (key) => isString(key) &&\n    key !== 'NaN' &&\n    key[0] !== '-' &&\n    '' + parseInt(key, 10) === key;\nconst isReservedProp = /*#__PURE__*/ makeMap(\n// the leading comma is intentional so empty string \"\" is also included\n',key,ref,ref_for,ref_key,' +\n    'onVnodeBeforeMount,onVnodeMounted,' +\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo');\nconst cacheStringFunction = (fn) => {\n    const cache = Object.create(null);\n    return ((str) => {\n        const hit = cache[str];\n        return hit || (cache[str] = fn(str));\n    });\n};\nconst camelizeRE = /-(\\w)/g;\n/**\n * @private\n */\nconst camelize = cacheStringFunction((str) => {\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\n});\nconst hyphenateRE = /\\B([A-Z])/g;\n/**\n * @private\n */\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\n/**\n * @private\n */\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\n/**\n * @private\n */\nconst toHandlerKey = cacheStringFunction((str) => str ? `on${capitalize(str)}` : ``);\n// compare whether a value has changed, accounting for NaN.\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n    for (let i = 0; i < fns.length; i++) {\n        fns[i](arg);\n    }\n};\nconst def = (obj, key, value) => {\n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable: false,\n        value\n    });\n};\nconst toNumber = (val) => {\n    const n = parseFloat(val);\n    return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n    return (_globalThis ||\n        (_globalThis =\n            typeof globalThis !== 'undefined'\n                ? globalThis\n                : typeof self !== 'undefined'\n                    ? self\n                    : typeof window !== 'undefined'\n                        ? window\n                        : typeof global !== 'undefined'\n                            ? global\n                            : {}));\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n    return identRE.test(name)\n        ? `__props.${name}`\n        : `__props[${JSON.stringify(name)}]`;\n}\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subject } from './Subject';\nimport { IScheduler } from './Scheduler';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: ReplayEvent<T>[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: IScheduler) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n  }\n\n  next(value: T): void {\n    const now = this._getNow();\n    this._events.push(new ReplayEvent(now, value));\n    this._trimBufferThenGetEvents();\n    super.next(value);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const _events = this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    const len = _events.length;\n    for (let i = 0; i < len && !subscriber.closed; i++) {\n      subscriber.next(_events[i].value);\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n\n    let eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nexport {Subject, AnonymousSubject} from './Subject';\n/* tslint:enable:no-unused-variable */\nexport {Observable} from './Observable';\n\n// statics\n/* tslint:disable:no-use-before-declare */\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/if';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/onErrorResumeNext';\nimport './add/observable/pairs';\nimport './add/observable/range';\nimport './add/observable/using';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\n\n//dom\nimport './add/observable/dom/ajax';\nimport './add/observable/dom/webSocket';\n\n//operators\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinct';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/distinctUntilKeyChanged';\nimport './add/operator/do';\nimport './add/operator/exhaust';\nimport './add/operator/exhaustMap';\nimport './add/operator/expand';\nimport './add/operator/elementAt';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/find';\nimport './add/operator/findIndex';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/isEmpty';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/max';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/mergeScan';\nimport './add/operator/min';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/onErrorResumeNext';\nimport './add/operator/pairwise';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/repeatWhen';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/sequenceEqual';\nimport './add/operator/share';\nimport './add/operator/shareReplay';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipLast';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeInterval';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/timestamp';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n\n/* tslint:disable:no-unused-variable */\nexport {Operator} from './Operator';\nexport {Observer} from './Observer';\nexport {Subscription} from './Subscription';\nexport {Subscriber} from './Subscriber';\nexport {AsyncSubject} from './AsyncSubject';\nexport {ReplaySubject} from './ReplaySubject';\nexport {BehaviorSubject} from './BehaviorSubject';\nexport {ConnectableObservable} from './observable/ConnectableObservable';\nexport {Notification} from './Notification';\nexport {EmptyError} from './util/EmptyError';\nexport {ArgumentOutOfRangeError} from './util/ArgumentOutOfRangeError';\nexport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\nexport {TimeoutError} from './util/TimeoutError';\nexport {UnsubscriptionError} from './util/UnsubscriptionError';\nexport {TimeInterval} from './operator/timeInterval';\nexport {Timestamp} from './operators/timestamp';\nexport {TestScheduler} from './testing/TestScheduler';\nexport {VirtualTimeScheduler} from './scheduler/VirtualTimeScheduler';\nexport {AjaxRequest, AjaxResponse, AjaxError, AjaxTimeoutError} from './observable/dom/AjaxObservable';\nexport { pipe } from './util/pipe';\n\nimport { asap } from './scheduler/asap';\nimport { async } from './scheduler/async';\nimport { queue } from './scheduler/queue';\nimport { animationFrame } from './scheduler/animationFrame';\nimport { AsapScheduler } from './scheduler/AsapScheduler';\nimport { AsyncScheduler } from './scheduler/AsyncScheduler';\nimport { QueueScheduler } from './scheduler/QueueScheduler';\nimport { AnimationFrameScheduler } from './scheduler/AnimationFrameScheduler';\nimport { rxSubscriber } from './symbol/rxSubscriber';\nimport { iterator } from './symbol/iterator';\nimport { observable } from './symbol/observable';\n\nimport * as _operators from './operators';\n\nexport const operators = _operators;\n\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nlet Scheduler = {\n  asap,\n  queue,\n  animationFrame,\n  async\n};\n\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nlet Symbol = {\n  rxSubscriber,\n  observable,\n  iterator\n};\n\nexport {\n    Scheduler,\n    Symbol\n};\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\n\nexport interface IScheduler {\n  now(): number;\n  schedule<T>(work: (this: Action<T>, state?: T) => void, delay?: number, state?: T): Subscription;\n}\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nexport class Scheduler implements IScheduler {\n\n  public static now: () => number = Date.now ? Date.now : () => +new Date();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: Action<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","import { Observable } from '../../Observable';\nimport { bindCallback as staticBindCallback } from '../../observable/bindCallback';\n\nObservable.bindCallback = staticBindCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindCallback: typeof staticBindCallback;\n  }\n}\n","import { Observable } from '../../Observable';\nimport { bindNodeCallback as staticBindNodeCallback } from '../../observable/bindNodeCallback';\n\nObservable.bindNodeCallback = staticBindNodeCallback;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let bindNodeCallback: typeof staticBindNodeCallback;\n  }\n}","import { Observable } from '../../Observable';\nimport { combineLatest as combineLatestStatic } from '../../observable/combineLatest';\n\nObservable.combineLatest = combineLatestStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let combineLatest: typeof combineLatestStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { concat as concatStatic } from '../../observable/concat';\n\nObservable.concat = concatStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let concat: typeof concatStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { defer as staticDefer } from '../../observable/defer';\n\nObservable.defer = staticDefer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let defer: typeof staticDefer;\n  }\n}","import { Observable } from '../../../Observable';\nimport { ajax as staticAjax } from '../../../observable/dom/ajax';\nimport { AjaxCreationMethod } from '../../../observable/dom/AjaxObservable';\n\nObservable.ajax = staticAjax;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let ajax: AjaxCreationMethod;\n  }\n}","import { Observable } from '../../../Observable';\nimport { webSocket as staticWebSocket } from '../../../observable/dom/webSocket';\n\nObservable.webSocket = staticWebSocket;\n\ndeclare module '../../../Observable' {\n  namespace Observable {\n    export let webSocket: typeof staticWebSocket;\n  }\n}","import { Observable } from '../../Observable';\nimport { empty as staticEmpty } from '../../observable/empty';\n\nObservable.empty = staticEmpty;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let empty: typeof staticEmpty;\n  }\n}","import { Observable } from '../../Observable';\nimport { forkJoin as staticForkJoin } from '../../observable/forkJoin';\n\nObservable.forkJoin = staticForkJoin;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let forkJoin: typeof staticForkJoin;\n  }\n}","import { Observable } from '../../Observable';\nimport { from as staticFrom } from '../../observable/from';\n\nObservable.from = staticFrom;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let from: typeof staticFrom;\n  }\n}","import { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\n\nObservable.fromEvent = staticFromEvent;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEvent: typeof staticFromEvent;\n  }\n}","import { Observable } from '../../Observable';\nimport { fromEventPattern as staticFromEventPattern } from '../../observable/fromEventPattern';\n\nObservable.fromEventPattern = staticFromEventPattern;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromEventPattern: typeof staticFromEventPattern;\n  }\n}","import { Observable } from '../../Observable';\nimport { fromPromise as staticFromPromise } from '../../observable/fromPromise';\n\nObservable.fromPromise = staticFromPromise;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let fromPromise: typeof staticFromPromise;\n  }\n}","import { Observable } from '../../Observable';\nimport { generate as staticGenerate } from '../../observable/generate';\n\nObservable.generate = staticGenerate;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let generate: typeof staticGenerate;\n  }\n}","import { Observable } from '../../Observable';\nimport { _if } from '../../observable/if';\n\nObservable.if = _if;","import { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\n\nObservable.interval = staticInterval;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let interval: typeof staticInterval;\n  }\n}","import { Observable } from '../../Observable';\nimport { merge as mergeStatic } from '../../observable/merge';\n\nObservable.merge = mergeStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let merge: typeof mergeStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { never as staticNever } from '../../observable/never';\n\nObservable.never = staticNever;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let never: typeof staticNever;\n  }\n}","import { Observable } from '../../Observable';\nimport { of as staticOf } from '../../observable/of';\n\nObservable.of = staticOf;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let of: typeof staticOf; //formOf an iceberg!\n  }\n}","import { Observable } from '../../Observable';\r\nimport { onErrorResumeNext as staticOnErrorResumeNext } from '../../observable/onErrorResumeNext';\r\n\r\nObservable.onErrorResumeNext = staticOnErrorResumeNext;\r\n\r\ndeclare module '../../Observable' {\r\n  namespace Observable {\r\n    export let onErrorResumeNext: typeof staticOnErrorResumeNext;\r\n  }\r\n}","import { Observable } from '../../Observable';\r\nimport { pairs as staticPairs } from '../../observable/pairs';\r\n\r\nObservable.pairs = staticPairs;\r\n\r\ndeclare module '../../Observable' {\r\n  namespace Observable {\r\n    export let pairs: typeof staticPairs;\r\n  }\r\n}","import { Observable } from '../../Observable';\nimport { race as staticRace } from '../../observable/race';\n\nObservable.race = staticRace;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let race: typeof staticRace;\n  }\n}","import { Observable } from '../../Observable';\nimport { range as staticRange } from '../../observable/range';\n\nObservable.range = staticRange;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let range: typeof staticRange;\n  }\n}","import { Observable } from '../../Observable';\nimport { _throw } from '../../observable/throw';\n\nObservable.throw = _throw;","import { Observable } from '../../Observable';\nimport { timer as staticTimer } from '../../observable/timer';\n\nObservable.timer = staticTimer;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let timer: typeof staticTimer;\n  }\n}","import { Observable } from '../../Observable';\nimport { using as staticUsing } from '../../observable/using';\n\nObservable.using = staticUsing;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let using: typeof staticUsing;\n  }\n}","import { Observable } from '../../Observable';\nimport { zip as zipStatic } from '../../observable/zip';\n\nObservable.zip = zipStatic;\n\ndeclare module '../../Observable' {\n  namespace Observable {\n    export let zip: typeof zipStatic;\n  }\n}","import { Observable } from '../../Observable';\nimport { audit } from '../../operator/audit';\n\nObservable.prototype.audit = audit;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    audit: typeof audit;\n  }\n}","import { Observable } from '../../Observable';\nimport { auditTime } from '../../operator/auditTime';\n\nObservable.prototype.auditTime = auditTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    auditTime: typeof auditTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { buffer } from '../../operator/buffer';\n\nObservable.prototype.buffer = buffer;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    buffer: typeof buffer;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferCount } from '../../operator/bufferCount';\n\nObservable.prototype.bufferCount = bufferCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferCount: typeof bufferCount;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferTime } from '../../operator/bufferTime';\n\nObservable.prototype.bufferTime = bufferTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferTime: typeof bufferTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferToggle } from '../../operator/bufferToggle';\n\nObservable.prototype.bufferToggle = bufferToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferToggle: typeof bufferToggle;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { bufferWhen } from '../../operator/bufferWhen';\n\nObservable.prototype.bufferWhen = bufferWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    bufferWhen: typeof bufferWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _catch } from '../../operator/catch';\n\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    catch: typeof _catch;\n    _catch: typeof _catch;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { combineAll } from '../../operator/combineAll';\n\nObservable.prototype.combineAll = combineAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineAll: typeof combineAll;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { combineLatest } from '../../operator/combineLatest';\n\nObservable.prototype.combineLatest = combineLatest;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    combineLatest: typeof combineLatest;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concat } from '../../operator/concat';\n\nObservable.prototype.concat = concat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concat: typeof concat;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concatAll } from '../../operator/concatAll';\n\nObservable.prototype.concatAll = concatAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatAll: typeof concatAll;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concatMap } from '../../operator/concatMap';\n\nObservable.prototype.concatMap = concatMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMap: typeof concatMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { concatMapTo } from '../../operator/concatMapTo';\n\nObservable.prototype.concatMapTo = concatMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    concatMapTo: typeof concatMapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { count } from '../../operator/count';\n\nObservable.prototype.count = count;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    count: typeof count;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { debounce } from '../../operator/debounce';\n\nObservable.prototype.debounce = debounce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounce: typeof debounce;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { debounceTime } from '../../operator/debounceTime';\n\nObservable.prototype.debounceTime = debounceTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    debounceTime: typeof debounceTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { defaultIfEmpty } from '../../operator/defaultIfEmpty';\n\nObservable.prototype.defaultIfEmpty = defaultIfEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    defaultIfEmpty: typeof defaultIfEmpty;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { delay } from '../../operator/delay';\n\nObservable.prototype.delay = delay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delay: typeof delay;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { delayWhen } from '../../operator/delayWhen';\n\nObservable.prototype.delayWhen = delayWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    delayWhen: typeof delayWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { dematerialize } from '../../operator/dematerialize';\n\nObservable.prototype.dematerialize = dematerialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    dematerialize: typeof dematerialize;\n  }\n}","import { Observable } from '../../Observable';\nimport { distinct } from '../../operator/distinct';\n\nObservable.prototype.distinct = distinct;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinct: typeof distinct;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { distinctUntilChanged } from '../../operator/distinctUntilChanged';\n\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilChanged: typeof distinctUntilChanged;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { distinctUntilKeyChanged } from '../../operator/distinctUntilKeyChanged';\n\nObservable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    distinctUntilKeyChanged: typeof distinctUntilKeyChanged;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _do } from '../../operator/do';\n\nObservable.prototype.do = _do;\nObservable.prototype._do = _do;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    do: typeof _do;\n    _do: typeof _do;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { elementAt } from '../../operator/elementAt';\n\nObservable.prototype.elementAt = elementAt;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    elementAt: typeof elementAt;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { every } from '../../operator/every';\n\nObservable.prototype.every = every;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    every: typeof every;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { exhaust } from '../../operator/exhaust';\n\nObservable.prototype.exhaust = exhaust;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    exhaust: typeof exhaust;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { exhaustMap } from '../../operator/exhaustMap';\n\nObservable.prototype.exhaustMap = exhaustMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    exhaustMap: typeof exhaustMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { expand } from '../../operator/expand';\n\nObservable.prototype.expand = expand;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    expand: typeof expand;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { filter } from '../../operator/filter';\n\nObservable.prototype.filter = filter;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    filter: typeof filter;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _finally } from '../../operator/finally';\n\nObservable.prototype.finally = _finally;\nObservable.prototype._finally = _finally;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    finally: typeof _finally;\n    _finally: typeof _finally;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { find } from '../../operator/find';\n\nObservable.prototype.find = find;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    find: typeof find;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { findIndex } from '../../operator/findIndex';\n\nObservable.prototype.findIndex = findIndex;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    findIndex: typeof findIndex;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { first } from '../../operator/first';\n\nObservable.prototype.first = <any>first;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    first: typeof first;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { groupBy } from '../../operator/groupBy';\n\nObservable.prototype.groupBy = <any>groupBy;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    groupBy: typeof groupBy;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { ignoreElements } from '../../operator/ignoreElements';\n\nObservable.prototype.ignoreElements = ignoreElements;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    ignoreElements: typeof ignoreElements;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { isEmpty } from '../../operator/isEmpty';\n\nObservable.prototype.isEmpty = isEmpty;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    isEmpty: typeof isEmpty;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { last } from '../../operator/last';\n\nObservable.prototype.last = <any>last;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    last: typeof last;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { letProto } from '../../operator/let';\n\nObservable.prototype.let = letProto;\nObservable.prototype.letBind = letProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    let: typeof letProto;\n    letBind: typeof letProto;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { map } from '../../operator/map';\n\nObservable.prototype.map = map;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    map: typeof map;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mapTo } from '../../operator/mapTo';\n\nObservable.prototype.mapTo = mapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mapTo: typeof mapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { materialize } from '../../operator/materialize';\n\nObservable.prototype.materialize = materialize;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    materialize: typeof materialize;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { max } from '../../operator/max';\n\nObservable.prototype.max = max;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    max: typeof max;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { merge } from '../../operator/merge';\n\nObservable.prototype.merge = merge;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    merge: typeof merge;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeAll } from '../../operator/mergeAll';\n\nObservable.prototype.mergeAll = mergeAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeAll: typeof mergeAll;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeMap } from '../../operator/mergeMap';\n\nObservable.prototype.mergeMap = <any>mergeMap;\nObservable.prototype.flatMap = <any>mergeMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMap: typeof mergeMap;\n    mergeMap: typeof mergeMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeMapTo } from '../../operator/mergeMapTo';\n\nObservable.prototype.flatMapTo = <any>mergeMapTo;\nObservable.prototype.mergeMapTo = <any>mergeMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    flatMapTo: typeof mergeMapTo;\n    mergeMapTo: typeof mergeMapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { mergeScan } from '../../operator/mergeScan';\n\nObservable.prototype.mergeScan = mergeScan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    mergeScan: typeof mergeScan;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { min } from '../../operator/min';\n\nObservable.prototype.min = min;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    min: typeof min;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { multicast } from '../../operator/multicast';\n\nObservable.prototype.multicast = <any>multicast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    multicast: typeof multicast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { observeOn } from '../../operator/observeOn';\n\nObservable.prototype.observeOn = observeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    observeOn: typeof observeOn;\n  }\n}","import { Observable } from '../../Observable';\r\nimport { onErrorResumeNext } from '../../operator/onErrorResumeNext';\r\n\r\nObservable.prototype.onErrorResumeNext = onErrorResumeNext;\r\n\r\ndeclare module '../../Observable' {\r\n  interface Observable<T> {\r\n    onErrorResumeNext: typeof onErrorResumeNext;\r\n  }\r\n}","\nimport { Observable } from '../../Observable';\nimport { pairwise } from '../../operator/pairwise';\n\nObservable.prototype.pairwise = pairwise;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pairwise: typeof pairwise;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { partition } from '../../operator/partition';\n\nObservable.prototype.partition = partition;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    partition: typeof partition;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { pluck } from '../../operator/pluck';\n\nObservable.prototype.pluck = pluck;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    pluck: typeof pluck;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publish } from '../../operator/publish';\n\nObservable.prototype.publish = <any>publish;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publish: typeof publish;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publishBehavior } from '../../operator/publishBehavior';\n\nObservable.prototype.publishBehavior = publishBehavior;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishBehavior: typeof publishBehavior;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publishLast } from '../../operator/publishLast';\n\nObservable.prototype.publishLast = publishLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishLast: typeof publishLast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { publishReplay } from '../../operator/publishReplay';\n\nObservable.prototype.publishReplay = publishReplay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    publishReplay: typeof publishReplay;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { race } from '../../operator/race';\n\nObservable.prototype.race = race;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    race: typeof race;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { reduce } from '../../operator/reduce';\n\nObservable.prototype.reduce = reduce;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    reduce: typeof reduce;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { repeat } from '../../operator/repeat';\n\nObservable.prototype.repeat = repeat;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeat: typeof repeat;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { repeatWhen } from '../../operator/repeatWhen';\n\nObservable.prototype.repeatWhen = repeatWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    repeatWhen: typeof repeatWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { retry } from '../../operator/retry';\n\nObservable.prototype.retry = retry;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retry: typeof retry;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { retryWhen } from '../../operator/retryWhen';\n\nObservable.prototype.retryWhen = retryWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    retryWhen: typeof retryWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sample } from '../../operator/sample';\n\nObservable.prototype.sample = sample;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sample: typeof sample;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sampleTime } from '../../operator/sampleTime';\n\nObservable.prototype.sampleTime = sampleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sampleTime: typeof sampleTime;\n  }\n}","\nimport { Observable } from '../../Observable';\n\nimport { scan } from '../../operator/scan';\n\nObservable.prototype.scan = scan;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    scan: typeof scan;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { sequenceEqual } from '../../operator/sequenceEqual';\n\nObservable.prototype.sequenceEqual = sequenceEqual;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    sequenceEqual: typeof sequenceEqual;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { share } from '../../operator/share';\n\nObservable.prototype.share = share;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    share: typeof share;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { shareReplay } from '../../operator/shareReplay';\n\nObservable.prototype.shareReplay = shareReplay;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    shareReplay: typeof shareReplay;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { single } from '../../operator/single';\n\nObservable.prototype.single = single;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    single: typeof single;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { skip } from '../../operator/skip';\n\nObservable.prototype.skip = skip;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skip: typeof skip;\n  }\n}","import { Observable } from '../../Observable';\nimport { skipLast } from '../../operator/skipLast';\n\nObservable.prototype.skipLast = skipLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipLast: typeof skipLast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { skipUntil } from '../../operator/skipUntil';\n\nObservable.prototype.skipUntil = skipUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipUntil: typeof skipUntil;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { skipWhile } from '../../operator/skipWhile';\n\nObservable.prototype.skipWhile = skipWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    skipWhile: typeof skipWhile;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { startWith } from '../../operator/startWith';\n\nObservable.prototype.startWith = startWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    startWith: typeof startWith;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { subscribeOn } from '../../operator/subscribeOn';\n\nObservable.prototype.subscribeOn = subscribeOn;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    subscribeOn: typeof subscribeOn;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { _switch } from '../../operator/switch';\n\nObservable.prototype.switch = _switch;\nObservable.prototype._switch = _switch;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switch: typeof _switch;\n    _switch: typeof _switch;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { switchMap } from '../../operator/switchMap';\n\nObservable.prototype.switchMap = switchMap;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMap: typeof switchMap;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { switchMapTo } from '../../operator/switchMapTo';\n\nObservable.prototype.switchMapTo = switchMapTo;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    switchMapTo: typeof switchMapTo;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { take } from '../../operator/take';\n\nObservable.prototype.take = take;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    take: typeof take;\n  }\n}","import { Observable } from '../../Observable';\nimport { takeLast } from '../../operator/takeLast';\n\nObservable.prototype.takeLast = takeLast;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeLast: typeof takeLast;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { takeUntil } from '../../operator/takeUntil';\n\nObservable.prototype.takeUntil = takeUntil;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeUntil: typeof takeUntil;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { takeWhile } from '../../operator/takeWhile';\n\nObservable.prototype.takeWhile = takeWhile;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    takeWhile: typeof takeWhile;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { throttle } from '../../operator/throttle';\n\nObservable.prototype.throttle = throttle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttle: typeof throttle;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { throttleTime } from '../../operator/throttleTime';\n\nObservable.prototype.throttleTime = throttleTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    throttleTime: typeof throttleTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { timeInterval } from '../../operator/timeInterval';\n\nObservable.prototype.timeInterval = timeInterval;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeInterval: typeof timeInterval;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { timeout } from '../../operator/timeout';\n\nObservable.prototype.timeout = timeout;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeout: typeof timeout;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { timeoutWith } from '../../operator/timeoutWith';\n\nObservable.prototype.timeoutWith = timeoutWith;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    timeoutWith: typeof timeoutWith;\n  }\n}","import { Observable } from '../../Observable';\r\nimport { timestamp } from '../../operator/timestamp';\r\n\r\nObservable.prototype.timestamp = timestamp;\r\n\r\ndeclare module '../../Observable' {\r\n  interface Observable<T> {\r\n    timestamp: typeof timestamp;\r\n  }\r\n}","\nimport { Observable } from '../../Observable';\nimport { toArray } from '../../operator/toArray';\n\nObservable.prototype.toArray = toArray;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    toArray: typeof toArray;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { window } from '../../operator/window';\n\nObservable.prototype.window = window;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    window: typeof window;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowCount } from '../../operator/windowCount';\n\nObservable.prototype.windowCount = windowCount;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowCount: typeof windowCount;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowTime } from '../../operator/windowTime';\n\nObservable.prototype.windowTime = windowTime;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowTime: typeof windowTime;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowToggle } from '../../operator/windowToggle';\n\nObservable.prototype.windowToggle = windowToggle;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowToggle: typeof windowToggle;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { windowWhen } from '../../operator/windowWhen';\n\nObservable.prototype.windowWhen = windowWhen;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    windowWhen: typeof windowWhen;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { withLatestFrom } from '../../operator/withLatestFrom';\n\nObservable.prototype.withLatestFrom = withLatestFrom;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    withLatestFrom: typeof withLatestFrom;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { zipProto } from '../../operator/zip';\n\nObservable.prototype.zip = zipProto;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zip: typeof zipProto;\n  }\n}","\nimport { Observable } from '../../Observable';\nimport { zipAll } from '../../operator/zipAll';\n\nObservable.prototype.zipAll = zipAll;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    zipAll: typeof zipAll;\n  }\n}","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { IScheduler } from '../Scheduler';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create(callbackFunc: (callback: () => any) => any, selector?: void, scheduler?: IScheduler): () => Observable<void>;\n  static create<R>(callbackFunc: (callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<R>(callbackFunc: (callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (...args: any[]) => any) => any, selector: (...args: any[]) => R, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a callback API to a function that returns an Observable.\n   *\n   * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n   * it will return a function `g` that when called as `g(x)` will output an\n   * Observable.</span>\n   *\n   * `bindCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, the\n   * last parameter must be a callback function that `func` calls when it is\n   * done.\n   *\n   * The output of `bindCallback` is a function that takes the same parameters\n   * as `func`, except the last one (the callback). When the output function\n   * is called with arguments it will return an Observable. If function `func`\n   * calls its callback with one argument the Observable will emit that value.\n   * If on the other hand the callback is called with multiple values the resulting\n   * Observable will emit an array with said values as arguments.\n   *\n   * It is very important to remember that input function `func` is not called\n   * when the output function is, but rather when the Observable returned by the output\n   * function is subscribed. This means if `func` makes an AJAX request, that request\n   * will be made every time someone subscribes to the resulting Observable, but not before.\n   *\n   * Optionally, a selector function can be passed to `bindObservable`. The selector function\n   * takes the same arguments as the callback and returns the value that will be emitted by the Observable.\n   * Even though by default multiple arguments passed to callback appear in the stream as an array\n   * the selector function will be called with arguments directly, just as the callback would.\n   * This means you can imagine the default selector (when one is not provided explicitly)\n   * as a function that aggregates all its arguments into an array, or simply returns first argument\n   * if there is only one.\n   *\n   * The last optional parameter - {@link Scheduler} - can be used to control when the call\n   * to `func` happens after someone subscribes to Observable, as well as when results\n   * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n   * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n   * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n   * and call `subscribe` on the output Observable all function calls that are currently executing\n   * will end before `func` is invoked.\n   *\n   * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n   * In particular, if the callback is called synchronously the subscription of the resulting Observable\n   * will call the `next` function synchronously as well.  If you want to defer that call,\n   * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n   * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n   *\n   * Note that the Observable created by the output function will always emit a single value\n   * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n   * calls will not appear in the stream. If you need to listen for multiple calls,\n   *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n   *\n   * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n   * will be the context that the output function has at call time. In particular, if `func`\n   * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n   * it is recommended that the context of the output function is set to that object as well.\n   *\n   * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n   * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n   * provides convenient error handling and probably is a better choice.\n   * `bindCallback` will treat such functions the same as any other and error parameters\n   * (whether passed or not) will always be interpreted as regular callback argument.\n   *\n   *\n   * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n   * // Suppose we have jQuery.getJSON('/my/url', callback)\n   * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n   * var result = getJSONAsObservable('/my/url');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   *\n   * @example <caption>Receive an array of arguments passed to a callback</caption>\n   * someFunction((a, b, c) => {\n   *   console.log(a); // 5\n   *   console.log(b); // 'some string'\n   *   console.log(c); // {someProperty: 'someValue'}\n   * });\n   *\n   * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n   * boundSomeFunction().subscribe(values => {\n   *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n   * });\n   *\n   *\n   * @example <caption>Use bindCallback with a selector function</caption>\n   * someFunction((a, b, c) => {\n   *   console.log(a); // 'a'\n   *   console.log(b); // 'b'\n   *   console.log(c); // 'c'\n   * });\n   *\n   * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n   * boundSomeFunction().subscribe(value => {\n   *   console.log(value) // 'abc'\n   * });\n   *\n   *\n   * @example <caption>Compare behaviour with and without async Scheduler</caption>\n   * function iCallMyCallbackSynchronously(cb) {\n   *   cb();\n   * }\n   *\n   * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n   * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n   *\n   * boundSyncFn().subscribe(() => console.log('I was sync!'));\n   * boundAsyncFn().subscribe(() => console.log('I was async!'));\n   * console.log('This happened...');\n   *\n   * // Logs:\n   * // I was sync!\n   * // This happened...\n   * // I was async!\n   *\n   *\n   * @example <caption>Use bindCallback on an object method</caption>\n   * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n   * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n   * .subscribe(subscriber);\n   *\n   *\n   * @see {@link bindNodeCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func A function with a callback as the last parameter.\n   * @param {function} [selector] A function which takes the arguments from the\n   * callback and maps them to a value that is emitted on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the callback would deliver.\n   * @static true\n   * @name bindCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: IScheduler): (...args: any[]) => Observable<T> {\n    return function(this: any, ...args: any[]): Observable<T> {\n      return new BoundCallbackObservable<T>(func, <any>selector, args, this, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              private context: any,\n              private scheduler: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n          } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber, context: this.context });\n    }\n  }\n\n  static dispatch<T>(state: { source: BoundCallbackObservable<T>, subscriber: Subscriber<T>, context: any }) {\n    const self = (<Subscription><any>this);\n    const { source, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = source;\n    let subject = source.subject;\n\n    if (!subject) {\n      subject = source.subject = new AsyncSubject<T>();\n\n      const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n        const source = (<any>handlerFn).source;\n        const { selector, subject } = source;\n        if (selector) {\n          const result = tryCatch(selector).apply(this, innerArgs);\n          if (result === errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n          } else {\n            self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n          }\n        } else {\n          const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n          self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        }\n      };\n      // use named function to pass values in without closure\n      (<any>handler).source = source;\n\n      const result = tryCatch(callbackFunc).apply(context, args.concat(handler));\n      if (result === errorObject) {\n        subject.error(errorObject.e);\n      }\n    }\n\n    self.add(subject.subscribe(subscriber));\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { AsyncSubject } from '../AsyncSubject';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class BoundNodeCallbackObservable<T> extends Observable<T> {\n  subject: AsyncSubject<T>;\n\n  /* tslint:disable:max-line-length */\n  static create<R>(callbackFunc: (callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): () => Observable<R>;\n  static create<T, R>(callbackFunc: (v1: T, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T) => Observable<R>;\n  static create<T, T2, R>(callbackFunc: (v1: T, v2: T2, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2) => Observable<R>;\n  static create<T, T2, T3, R>(callbackFunc: (v1: T, v2: T2, v3: T3, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3) => Observable<R>;\n  static create<T, T2, T3, T4, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4) => Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(callbackFunc: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, callback: (err: any, result: R) => any) => any, selector?: void, scheduler?: IScheduler): (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => Observable<R>;\n  static create<T>(callbackFunc: Function, selector?: void, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  static create<T>(callbackFunc: Function, selector?: (...args: any[]) => T, scheduler?: IScheduler): (...args: any[]) => Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Converts a Node.js-style callback API to a function that returns an\n   * Observable.\n   *\n   * <span class=\"informal\">It's just like {@link bindCallback}, but the\n   * callback is expected to be of type `callback(error, result)`.</span>\n   *\n   * `bindNodeCallback` is not an operator because its input and output are not\n   * Observables. The input is a function `func` with some parameters, but the\n   * last parameter must be a callback function that `func` calls when it is\n   * done. The callback function is expected to follow Node.js conventions,\n   * where the first argument to the callback is an error object, signaling\n   * whether call was successful. If that object is passed to callback, it means\n   * something went wrong.\n   *\n   * The output of `bindNodeCallback` is a function that takes the same\n   * parameters as `func`, except the last one (the callback). When the output\n   * function is called with arguments, it will return an Observable.\n   * If `func` calls its callback with error parameter present, Observable will\n   * error with that value as well. If error parameter is not passed, Observable will emit\n   * second parameter. If there are more parameters (third and so on),\n   * Observable will emit an array with all arguments, except first error argument.\n   *\n   * Optionally `bindNodeCallback` accepts selector function, which allows you to\n   * make resulting Observable emit value computed by selector, instead of regular\n   * callback arguments. It works similarly to {@link bindCallback} selector, but\n   * Node.js-style error argument will never be passed to that function.\n   *\n   * Note that `func` will not be called at the same time output function is,\n   * but rather whenever resulting Observable is subscribed. By default call to\n   * `func` will happen synchronously after subscription, but that can be changed\n   * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n   * can also control when values from callback will be emitted by Observable.\n   * To find out more, check out documentation for {@link bindCallback}, where\n   * Scheduler works exactly the same.\n   *\n   * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n   * of returned function, when it is called.\n   *\n   * After Observable emits value, it will complete immediately. This means\n   * even if `func` calls callback again, values from second and consecutive\n   * calls will never appear on the stream. If you need to handle functions\n   * that call callbacks multiple times, check out {@link fromEvent} or\n   * {@link fromEventPattern} instead.\n   *\n   * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n   * \"Node.js-style\" callbacks are just a convention, so if you write for\n   * browsers or any other environment and API you use implements that callback style,\n   * `bindNodeCallback` can be safely used on that API functions as well.\n   *\n   * Remember that Error object passed to callback does not have to be an instance\n   * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n   * Error parameter of callback function is interpreted as \"present\", when value\n   * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n   * string or boolean `true`. In all of these cases resulting Observable would error\n   * with that value. This means usually regular style callbacks will fail very often when\n   * `bindNodeCallback` is used. If your Observable errors much more often then you\n   * would expect, check if callback really is called in Node.js-style and, if not,\n   * switch to {@link bindCallback} instead.\n   *\n   * Note that even if error parameter is technically present in callback, but its value\n   * is falsy, it still won't appear in array emitted by Observable or in selector function.\n   *\n   *\n   * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n   * import * as fs from 'fs';\n   * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n   * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   *\n   * @example <caption>Use on function calling callback with multiple arguments</caption>\n   * someFunction((err, a, b) => {\n   *   console.log(err); // null\n   *   console.log(a); // 5\n   *   console.log(b); // \"some string\"\n   * });\n   * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n   * boundSomeFunction()\n   * .subscribe(value => {\n   *   console.log(value); // [5, \"some string\"]\n   * });\n   *\n   *\n   * @example <caption>Use with selector function</caption>\n   * someFunction((err, a, b) => {\n   *   console.log(err); // undefined\n   *   console.log(a); // \"abc\"\n   *   console.log(b); // \"DEF\"\n   * });\n   * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n   * boundSomeFunction()\n   * .subscribe(value => {\n   *   console.log(value); // \"abcDEF\"\n   * });\n   *\n   *\n   * @example <caption>Use on function calling callback in regular style</caption>\n   * someFunction(a => {\n   *   console.log(a); // 5\n   * });\n   * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n   * boundSomeFunction()\n   * .subscribe(\n   *   value => {}             // never gets called\n   *   err => console.log(err) // 5\n   *);\n   *\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   * @see {@link fromPromise}\n   *\n   * @param {function} func Function with a Node.js-style callback as the last parameter.\n   * @param {function} [selector] A function which takes the arguments from the\n   * callback and maps those to a value to emit on the output Observable.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * callbacks.\n   * @return {function(...params: *): Observable} A function which returns the\n   * Observable that delivers the same values the Node.js callback would\n   * deliver.\n   * @static true\n   * @name bindNodeCallback\n   * @owner Observable\n   */\n  static create<T>(func: Function,\n                   selector: Function | void = undefined,\n                   scheduler?: IScheduler): (...args: any[]) => Observable<T> {\n    return function(this: any, ...args: any[]): Observable<T> {\n      return new BoundNodeCallbackObservable<T>(func, <any>selector, args, this, scheduler);\n    };\n  }\n\n  constructor(private callbackFunc: Function,\n              private selector: Function,\n              private args: any[],\n              private context: any,\n              public scheduler: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T | T[]>): Subscription {\n    const callbackFunc = this.callbackFunc;\n    const args = this.args;\n    const scheduler = this.scheduler;\n    let subject = this.subject;\n\n    if (!scheduler) {\n      if (!subject) {\n        subject = this.subject = new AsyncSubject<T>();\n        const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n          const source = (<any>handlerFn).source;\n          const { selector, subject } = source;\n          const err = innerArgs.shift();\n\n          if (err) {\n            subject.error(err);\n          } else if (selector) {\n            const result = tryCatch(selector).apply(this, innerArgs);\n            if (result === errorObject) {\n              subject.error(errorObject.e);\n            } else {\n              subject.next(result);\n              subject.complete();\n            }\n          } else {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          }\n        };\n        // use named function instance to avoid closure.\n        (<any>handler).source = this;\n\n        const result = tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n        if (result === errorObject) {\n          subject.error(errorObject.e);\n        }\n      }\n      return subject.subscribe(subscriber);\n    } else {\n      return scheduler.schedule(dispatch, 0, { source: this, subscriber, context: this.context });\n    }\n  }\n}\n\ninterface DispatchState<T> {\n  source: BoundNodeCallbackObservable<T>;\n  subscriber: Subscriber<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: Action<DispatchState<T>>, state: DispatchState<T>) {\n  const self = (<Subscription> this);\n  const { source, subscriber, context } = state;\n  // XXX: cast to `any` to access to the private field in `source`.\n  const { callbackFunc, args, scheduler } = source as any;\n  let subject = source.subject;\n\n  if (!subject) {\n    subject = source.subject = new AsyncSubject<T>();\n\n    const handler = function handlerFn(this: any, ...innerArgs: any[]) {\n      const source = (<any>handlerFn).source;\n      const { selector, subject } = source;\n      const err = innerArgs.shift();\n\n      if (err) {\n        self.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n      } else if (selector) {\n        const result = tryCatch(selector).apply(this, innerArgs);\n        if (result === errorObject) {\n          self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n        } else {\n          self.add(scheduler.schedule(dispatchNext, 0, { value: result, subject }));\n        }\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        self.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n      }\n    };\n    // use named function to pass values in without closure\n    (<any>handler).source = source;\n\n    const result = tryCatch(callbackFunc).apply(context, args.concat(handler));\n    if (result === errorObject) {\n      self.add(scheduler.schedule(dispatchError, 0, { err: errorObject.e, subject }));\n    }\n  }\n\n  self.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class DeferObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that, on subscribe, calls an Observable factory to\n   * make an Observable for each new Observer.\n   *\n   * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n   * is subscribed.\n   * </span>\n   *\n   * <img src=\"./img/defer.png\" width=\"100%\">\n   *\n   * `defer` allows you to create the Observable only when the Observer\n   * subscribes, and create a fresh Observable for each Observer. It waits until\n   * an Observer subscribes to it, and then it generates an Observable,\n   * typically with an Observable factory function. It does this afresh for each\n   * subscriber, so although each subscriber may think it is subscribing to the\n   * same Observable, in fact each subscriber gets its own individual\n   * Observable.\n   *\n   * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n   * var clicksOrInterval = Rx.Observable.defer(function () {\n   *   if (Math.random() > 0.5) {\n   *     return Rx.Observable.fromEvent(document, 'click');\n   *   } else {\n   *     return Rx.Observable.interval(1000);\n   *   }\n   * });\n   * clicksOrInterval.subscribe(x => console.log(x));\n   *\n   * // Results in the following behavior:\n   * // If the result of Math.random() is greater than 0.5 it will listen\n   * // for clicks anywhere on the \"document\"; when document is clicked it\n   * // will log a MouseEvent object to the console. If the result is less\n   * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n   *\n   * @see {@link create}\n   *\n   * @param {function(): SubscribableOrPromise} observableFactory The Observable\n   * factory function to invoke for each Observer that subscribes to the output\n   * Observable. May also return a Promise, which will be converted on the fly\n   * to an Observable.\n   * @return {Observable} An Observable whose Observers' subscriptions trigger\n   * an invocation of the given Observable factory function.\n   * @static true\n   * @name defer\n   * @owner Observable\n   */\n  static create<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n    return new DeferObservable(observableFactory);\n  }\n\n  constructor(private observableFactory: () => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    return new DeferSubscriber(subscriber, this.observableFactory);\n  }\n}\n\nclass DeferSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private factory: () => SubscribableOrPromise<T> | void) {\n    super(destination);\n    this.tryDefer();\n  }\n\n  private tryDefer(): void {\n    try {\n      this._callFactory();\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private _callFactory(): void {\n    const result = this.factory();\n    if (result) {\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport interface DispatchArg {\n  error: any;\n  subscriber: any;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ErrorObservable extends Observable<any> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits an error notification.\n   *\n   * <span class=\"informal\">Just emits 'error', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/throw.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the error notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then emit an error.</caption>\n   * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x === 13 ?\n   *     Rx.Observable.throw('Thirteens are bad') :\n   *     Rx.Observable.of('a', 'b', 'c')\n   * );\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link of}\n   *\n   * @param {any} error The particular Error to pass to the error notification.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the error notification.\n   * @return {Observable} An error Observable: emits only the error notification\n   * using the given error argument.\n   * @static true\n   * @name throw\n   * @owner Observable\n   */\n  static create(error: any, scheduler?: IScheduler): ErrorObservable {\n    return new ErrorObservable(error, scheduler);\n  }\n\n  static dispatch(arg: DispatchArg) {\n    const { error, subscriber } = arg;\n    subscriber.error(error);\n  }\n\n  constructor(public error: any, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const error = this.error;\n    const scheduler = this.scheduler;\n\n    subscriber.syncErrorThrowable = true;\n\n    if (scheduler) {\n      return scheduler.schedule(ErrorObservable.dispatch, 0, {\n        error, subscriber\n      });\n    } else {\n      subscriber.error(error);\n    }\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isArray } from '../util/isArray';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ForkJoinObservable<T> extends Observable<T> {\n  constructor(private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super();\n  }\n\n  /* tslint:disable:max-line-length */\n  static create<T, T2>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>): Observable<[T, T2]>;\n  static create<T, T2, T3>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>): Observable<[T, T2, T3]>;\n  static create<T, T2, T3, T4>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>): Observable<[T, T2, T3, T4]>;\n  static create<T, T2, T3, T4, T5>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>): Observable<[T, T2, T3, T4, T5]>;\n  static create<T, T2, T3, T4, T5, T6>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n  static create<T, R>(v1: SubscribableOrPromise<T>, project: (v1: T) => R): Observable<R>;\n  static create<T, T2, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  static create<T, T2, T3, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  static create<T, T2, T3, T4, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n  static create<T>(sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(sources: SubscribableOrPromise<any>[]): Observable<R>;\n  static create<T, R>(sources: SubscribableOrPromise<T>[], project: (...values: Array<T>) => R): Observable<R>;\n  static create<R>(sources: SubscribableOrPromise<any>[], project: (...values: Array<any>) => R): Observable<R>;\n  static create<T>(...sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(...sources: SubscribableOrPromise<any>[]): Observable<R>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Joins last values emitted by passed Observables.\n   *\n   * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n   *\n   * <img src=\"./img/forkJoin.png\" width=\"100%\">\n   *\n   * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n   * or directly as arguments. If no input Observables are provided, resulting stream will complete\n   * immediately.\n   *\n   * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n   * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n   * array will have `n` values, where first value is the last thing emitted by the first Observable,\n   * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n   * not emit more than once and it will complete after that. If you need to emit combined values not only\n   * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n   * or {@link zip} instead.\n   *\n   * In order for resulting array to have the same length as the number of input Observables, whenever any of\n   * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n   * and it will not emit anything either, even if it already has some last values from other Observables.\n   * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n   * unless at any point some other Observable completes without emitting value, which brings us back to\n   * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n   * have to emit something at least once and complete.\n   *\n   * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n   * will be immediately unsubscribed.\n   *\n   * Optionally `forkJoin` accepts project function, that will be called with values which normally\n   * would land in emitted array. Whatever is returned by project function, will appear in output\n   * Observable instead. This means that default project can be thought of as a function that takes\n   * all its arguments and puts them into an array. Note that project function will be called only\n   * when output Observable is supposed to emit a result.\n   *\n   * @example <caption>Use forkJoin with operator emitting immediately</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.of(1, 2, 3, 4),\n   *   Rx.Observable.of(5, 6, 7, 8)\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // [4, 8]\n   * // \"This is how it ends!\"\n   *\n   *\n   * @example <caption>Use forkJoin with operator emitting after some time</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n   *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // [2, 3] after 3 seconds\n   * // \"This is how it ends!\" immediately after\n   *\n   *\n   * @example <caption>Use forkJoin with project function</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n   *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n   *   (n, m) => n + m\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // 5 after 3 seconds\n   * // \"This is how it ends!\" immediately after\n   *\n   * @see {@link combineLatest}\n   * @see {@link zip}\n   *\n   * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n   * passed directly to the operator.\n   * @param {function} [project] Function that takes values emitted by input Observables and returns value\n   * that will appear in resulting Observable instead of default array.\n   * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n   * or value from project function.\n   * @static true\n   * @name forkJoin\n   * @owner Observable\n   */\n  static create<T>(...sources: Array<SubscribableOrPromise<any> |\n                                  Array<SubscribableOrPromise<any>> |\n                                  ((...values: Array<any>) => any)>): Observable<T> {\n    if (sources === null || arguments.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    let resultSelector: (...values: Array<any>) => any = null;\n    if (typeof sources[sources.length - 1] === 'function') {\n      resultSelector = <(...values: Array<any>) => any>sources.pop();\n    }\n\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n    if (sources.length === 1 && isArray(sources[0])) {\n      sources = <Array<SubscribableOrPromise<any>>>sources[0];\n    }\n\n    if (sources.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    return new ForkJoinObservable(<Array<SubscribableOrPromise<any>>>sources, resultSelector);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private total: number;\n  private values: any[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<T>,\n              private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super(destination);\n\n    const len = sources.length;\n    this.total = len;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        (<any> innerSubscription).outerIndex = i;\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(<any>innerSub)._hasValue) {\n      (<any>innerSub)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const destination = this.destination;\n    const { haveValues, resultSelector, values } = this;\n    const len = values.length;\n\n    if (!(<any>innerSub)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      const value = resultSelector ? resultSelector.apply(this, values) : values;\n      destination.next(value);\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nconst toString: Function = Object.prototype.toString;\n\nexport type NodeStyleEventEmitter = {\n  addListener: (eventName: string, handler: Function) => void;\n  removeListener: (eventName: string, handler: Function) => void;\n};\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nexport type JQueryStyleEventEmitter = {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n};\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isNodeList(sourceObj: any): sourceObj is NodeList {\n  return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\n\nfunction isHTMLCollection(sourceObj: any): sourceObj is HTMLCollection {\n  return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is EventTarget {\n  return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n\nexport type EventTargetLike = EventTarget | NodeStyleEventEmitter | JQueryStyleEventEmitter | NodeList | HTMLCollection;\n\nexport type EventListenerOptions = {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n} | boolean;\n\nexport type SelectorMethodSignature<T> = (...args: Array<any>) => T;\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventObservable<T> extends Observable<T> {\n\n  /* tslint:disable:max-line-length */\n  static create<T>(target: EventTargetLike, eventName: string): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, selector: SelectorMethodSignature<T>): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, options: EventListenerOptions): Observable<T>;\n  static create<T>(target: EventTargetLike, eventName: string, options: EventListenerOptions, selector: SelectorMethodSignature<T>): Observable<T>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Creates an Observable that emits events of a specific type coming from the\n   * given event target.\n   *\n   * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n   * EventEmitter events or others.</span>\n   *\n   * <img src=\"./img/fromEvent.png\" width=\"100%\">\n   *\n   * `fromEvent` accepts as a first argument event target, which is an object with methods\n   * for registering event handler functions. As a second argument it takes string that indicates\n   * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n   * which are described in detail below. If your event target does not match any of the ones listed,\n   * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n   * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n   * handler functions have different names, but they all accept a string describing event type\n   * and function itself, which will be called whenever said event happens.\n   *\n   * Every time resulting Observable is subscribed, event handler function will be registered\n   * to event target on given event type. When that event fires, value\n   * passed as a first argument to registered function will be emitted by output Observable.\n   * When Observable is unsubscribed, function will be unregistered from event target.\n   *\n   * Note that if event target calls registered function with more than one argument, second\n   * and following arguments will not appear in resulting stream. In order to get access to them,\n   * you can pass to `fromEvent` optional project function, which will be called with all arguments\n   * passed to event handler. Output Observable will then emit value returned by project function,\n   * instead of the usual value.\n   *\n   * Remember that event targets listed below are checked via duck typing. It means that\n   * no matter what kind of object you have and no matter what environment you work in,\n   * you can safely use `fromEvent` on that object if it exposes described methods (provided\n   * of course they behave as was described above). So for example if Node.js library exposes\n   * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n   * a good choice.\n   *\n   * If the API you use is more callback then event handler oriented (subscribed\n   * callback function fires only once and thus there is no need to manually\n   * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n   * instead.\n   *\n   * `fromEvent` supports following types of event targets:\n   *\n   * **DOM EventTarget**\n   *\n   * This is an object with `addEventListener` and `removeEventListener` methods.\n   *\n   * In the browser, `addEventListener` accepts - apart from event type string and event\n   * handler function arguments - optional third parameter, which is either an object or boolean,\n   * both used for additional configuration how and when passed function will be called. When\n   * `fromEvent` is used with event target of that type, you can provide this values\n   * as third parameter as well.\n   *\n   * **Node.js EventEmitter**\n   *\n   * An object with `addListener` and `removeListener` methods.\n   *\n   * **JQuery-style event target**\n   *\n   * An object with `on` and `off` methods\n   *\n   * **DOM NodeList**\n   *\n   * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n   *\n   * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n   * it contains and install event handler function in every of them. When returned Observable\n   * is unsubscribed, function will be removed from all Nodes.\n   *\n   * **DOM HtmlCollection**\n   *\n   * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n   * installed and removed in each of elements.\n   *\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * var clicks = Rx.Observable.fromEvent(document, 'click');\n   * clicks.subscribe(x => console.log(x));\n   *\n   * // Results in:\n   * // MouseEvent object logged to console every time a click\n   * // occurs on the document.\n   *\n   *\n   * @example <caption>Use addEventListener with capture option</caption>\n   * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n   *                                                                          // which will be passed to addEventListener\n   * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n   *\n   * clicksInDocument.subscribe(() => console.log('document'));\n   * clicksInDiv.subscribe(() => console.log('div'));\n   *\n   * // By default events bubble UP in DOM tree, so normally\n   * // when we would click on div in document\n   * // \"div\" would be logged first and then \"document\".\n   * // Since we specified optional `capture` option, document\n   * // will catch event when it goes DOWN DOM tree, so console\n   * // will log \"document\" and then \"div\".\n   *\n   * @see {@link bindCallback}\n   * @see {@link bindNodeCallback}\n   * @see {@link fromEventPattern}\n   *\n   * @param {EventTargetLike} target The DOM EventTarget, Node.js\n   * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n   * @param {string} eventName The event name of interest, being emitted by the\n   * `target`.\n   * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n   * @param {SelectorMethodSignature<T>} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEvent\n   * @owner Observable\n   */\n  static create<T>(target: EventTargetLike,\n                   eventName: string,\n                   options?: EventListenerOptions | SelectorMethodSignature<T>,\n                   selector?: SelectorMethodSignature<T>): Observable<T> {\n    if (isFunction(options)) {\n      selector = <any>options;\n      options = undefined;\n    }\n    return new FromEventObservable(target, eventName, selector, options as EventListenerOptions | undefined);\n  }\n\n  constructor(private sourceObj: EventTargetLike,\n              private eventName: string,\n              private selector?: SelectorMethodSignature<T>,\n              private options?: EventListenerOptions) {\n    super();\n  }\n\n  private static setupSubscription<T>(sourceObj: EventTargetLike,\n                                      eventName: string,\n                                      handler: Function,\n                                      subscriber: Subscriber<T>,\n                                      options?: EventListenerOptions) {\n    let unsubscribe: () => void;\n    if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n      for (let i = 0, len = sourceObj.length; i < len; i++) {\n        FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n      }\n    } else if (isEventTarget(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.addEventListener(eventName, <EventListener>handler, <boolean>options);\n      unsubscribe = () => source.removeEventListener(eventName, <EventListener>handler, <boolean>options);\n    } else if (isJQueryStyleEventEmitter(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.on(eventName, handler);\n      unsubscribe = () => source.off(eventName, handler);\n    } else if (isNodeStyleEventEmitter(sourceObj)) {\n      const source = sourceObj;\n      sourceObj.addListener(eventName, handler);\n      unsubscribe = () => source.removeListener(eventName, handler);\n    } else {\n      throw new TypeError('Invalid event target');\n    }\n\n    subscriber.add(new Subscription(unsubscribe));\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const sourceObj = this.sourceObj;\n    const eventName = this.eventName;\n    const options = this.options;\n    const selector = this.selector;\n    let handler = selector ? (...args: any[]) => {\n      let result = tryCatch(selector)(...args);\n      if (result === errorObject) {\n        subscriber.error(errorObject.e);\n      } else {\n        subscriber.next(result);\n      }\n    } : (e: any) => subscriber.next(e);\n\n    FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n  }\n}\n","import { isFunction } from '../util/isFunction';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromEventPatternObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable from an API based on addHandler/removeHandler\n   * functions.\n   *\n   * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n   * Observable.</span>\n   *\n   * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n   *\n   * Creates an Observable by using the `addHandler` and `removeHandler`\n   * functions to add and remove the handlers, with an optional selector\n   * function to project the event arguments to a result. The `addHandler` is\n   * called when the output Observable is subscribed, and `removeHandler` is\n   * called when the Subscription is unsubscribed.\n   *\n   * @example <caption>Emits clicks happening on the DOM document</caption>\n   * function addClickHandler(handler) {\n   *   document.addEventListener('click', handler);\n   * }\n   *\n   * function removeClickHandler(handler) {\n   *   document.removeEventListener('click', handler);\n   * }\n   *\n   * var clicks = Rx.Observable.fromEventPattern(\n   *   addClickHandler,\n   *   removeClickHandler\n   * );\n   * clicks.subscribe(x => console.log(x));\n   *\n   * @see {@link from}\n   * @see {@link fromEvent}\n   *\n   * @param {function(handler: Function): any} addHandler A function that takes\n   * a `handler` function as argument and attaches it somehow to the actual\n   * source of events.\n   * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n   * takes a `handler` function as argument and removes it in case it was\n   * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n   * removeHandler function will forward it.\n   * @param {function(...args: any): T} [selector] An optional function to\n   * post-process results. It takes the arguments from the event handler and\n   * should return a single value.\n   * @return {Observable<T>}\n   * @static true\n   * @name fromEventPattern\n   * @owner Observable\n   */\n  static create<T>(addHandler: (handler: Function) => any,\n                   removeHandler?: (handler: Function, signal?: any) => void,\n                   selector?: (...args: Array<any>) => T) {\n    return new FromEventPatternObservable(addHandler, removeHandler, selector);\n  }\n\n  constructor(private addHandler: (handler: Function) => any,\n              private removeHandler?: (handler: Function, signal?: any) => void,\n              private selector?: (...args: Array<any>) => T) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const removeHandler = this.removeHandler;\n\n    const handler = !!this.selector ? (...args: Array<any>) => {\n      this._callSelector(subscriber, args);\n    } : function(e: any) { subscriber.next(e); };\n\n    const retValue = this._callAddHandler(handler, subscriber);\n\n    if (!isFunction(removeHandler)) {\n      return;\n    }\n\n    subscriber.add(new Subscription(() => {\n      //TODO: determine whether or not to forward to error handler\n      removeHandler(handler, retValue) ;\n    }));\n  }\n\n  private _callSelector(subscriber: Subscriber<T>, args: Array<any>): void {\n    try {\n      const result: T = this.selector(...args);\n      subscriber.next(result);\n    }\n    catch (e) {\n      subscriber.error(e);\n    }\n  }\n\n  private _callAddHandler(handler: (e: any) => void, errorSubscriber: Subscriber<T>): any | null {\n    try {\n      return this.addHandler(handler) || null;\n    }\n    catch (e) {\n      errorSubscriber.error(e);\n    }\n  }\n}\n","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Observable } from '../Observable' ;\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\n\nconst selfSelector = <T>(value: T) => value;\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n  */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n  */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * IScheduler to use for generation process.\n   * By default, a generator starts immediately.\n  */\n  scheduler?: IScheduler;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class GenerateObservable<T, S> extends Observable<T> {\n  constructor(private initialState: S,\n              private condition: ConditionFunc<S>,\n              private iterate: IterateFunc<S>,\n              private resultSelector: ResultFunc<S, T>,\n              private scheduler?: IScheduler) {\n      super();\n  }\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1, x => x);\n   *\n   * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, x => x + 1, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(initialState: S,\n                      condition: ConditionFunc<S>,\n                      iterate: IterateFunc<S>,\n                      resultSelector: ResultFunc<S, T>,\n                      scheduler?: IScheduler): Observable<T>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload uses state as an emitted value.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1);\n   *\n   * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n   * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, Rx.Scheduler.asap);\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {S} initialState Initial state.\n   * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n   * @param {function (state: S): S} iterate Iteration step function.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} on which to run the generator loop. If not provided, defaults to emit immediately.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(initialState: S,\n                   condition: ConditionFunc<S>,\n                   iterate: IterateFunc<S>,\n                   scheduler?: IScheduler): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain initial state, iterate,\n   * condition and scheduler.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n   * @returns {Observable<S>} The generated sequence.\n   */\n  static create<S>(options: GenerateBaseOptions<S>): Observable<S>\n\n  /**\n   * Generates an observable sequence by running a state-driven loop\n   * producing the sequence's elements, using the specified scheduler\n   * to send out observer messages.\n   * The overload accepts options object that might contain initial state, iterate,\n   * condition, result selector and scheduler.\n   *\n   * <img src=\"./img/generate.png\" width=\"100%\">\n   *\n   * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n   * var res = Rx.Observable.generate({\n   *   initialState: 0,\n   *   condition: x => x < 10,\n   *   iterate: x => x + 1,\n   *   resultSelector: x => x\n   * });\n   *\n   * @see {@link from}\n   * @see {@link create}\n   *\n   * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n   * @returns {Observable<T>} The generated sequence.\n   */\n  static create<T, S>(options: GenerateOptions<T, S>): Observable<T>\n\n  static create<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                      condition?: ConditionFunc<S>,\n                      iterate?: IterateFunc<S>,\n                      resultSelectorOrObservable?: (ResultFunc<S, T>) | IScheduler,\n                      scheduler?: IScheduler): Observable<T> {\n    if (arguments.length == 1) {\n      return new GenerateObservable<T, S>(\n        (<GenerateOptions<T, S>>initialStateOrOptions).initialState,\n        (<GenerateOptions<T, S>>initialStateOrOptions).condition,\n        (<GenerateOptions<T, S>>initialStateOrOptions).iterate,\n        (<GenerateOptions<T, S>>initialStateOrOptions).resultSelector || selfSelector as ResultFunc<S, T>,\n        (<GenerateOptions<T, S>>initialStateOrOptions).scheduler);\n    }\n\n    if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n      return new GenerateObservable<T, S>(\n        <S>initialStateOrOptions,\n        condition,\n        iterate,\n        selfSelector as ResultFunc<S, T>,\n        <IScheduler>resultSelectorOrObservable);\n    }\n\n    return new GenerateObservable<T, S>(\n      <S>initialStateOrOptions,\n      condition,\n      iterate,\n      <ResultFunc<S, T>>resultSelectorOrObservable,\n      <IScheduler>scheduler);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription | Function | void {\n    let state = this.initialState;\n    if (this.scheduler) {\n      return this.scheduler.schedule<SchedulerState<T, S>>(GenerateObservable.dispatch, 0, {\n        subscriber,\n        iterate: this.iterate,\n        condition: this.condition,\n        resultSelector: this.resultSelector,\n        state });\n    }\n    const { condition, resultSelector, iterate } = this;\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } while (true);\n  }\n\n  private static dispatch<T, S>(state: SchedulerState<T, S>): Subscription | void {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n      return;\n    }\n    if (state.needIterate) {\n      try {\n        state.state = state.iterate(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n    } else {\n      state.needIterate = true;\n    }\n    if (condition) {\n      let conditionResult: boolean;\n      try {\n        conditionResult = condition(state.state);\n      } catch (err) {\n        subscriber.error(err);\n        return;\n      }\n      if (!conditionResult) {\n        subscriber.complete();\n        return;\n      }\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    let value: T;\n    try {\n      value = state.resultSelector(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return;\n    }\n    if (subscriber.closed) {\n      return;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n    return (<Action<SchedulerState<T, S>>><any>this).schedule(state);\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IfObservable<T, R> extends Observable<T> {\n\n  static create<T, R>(condition: () => boolean | void,\n                      thenSource?: SubscribableOrPromise<T> | void,\n                      elseSource?: SubscribableOrPromise<R> | void): Observable<T|R> {\n    return new IfObservable(condition, thenSource, elseSource);\n  }\n\n  constructor(private condition: () => boolean | void,\n              private thenSource?: SubscribableOrPromise<T> | void,\n              private elseSource?: SubscribableOrPromise<R> | void) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T|R>): TeardownLogic {\n    const { condition, thenSource, elseSource } = this;\n\n    return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n  }\n}\n\nclass IfSubscriber<T, R> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private condition: () => boolean | void,\n              private thenSource?: SubscribableOrPromise<T> | void,\n              private elseSource?: SubscribableOrPromise<R> | void) {\n    super(destination);\n    this.tryIf();\n  }\n\n  private tryIf(): void {\n    const { condition, thenSource, elseSource } = this;\n\n    let result: boolean;\n    try {\n      result = <boolean>condition();\n      const source = result ? thenSource : elseSource;\n\n      if (source) {\n        this.add(subscribeToResult(this, source));\n      } else {\n        this._complete();\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IntervalObservable extends Observable<number> {\n  /**\n   * Creates an Observable that emits sequential numbers every specified\n   * interval of time, on a specified IScheduler.\n   *\n   * <span class=\"informal\">Emits incremental numbers periodically in time.\n   * </span>\n   *\n   * <img src=\"./img/interval.png\" width=\"100%\">\n   *\n   * `interval` returns an Observable that emits an infinite sequence of\n   * ascending integers, with a constant interval of time of your choosing\n   * between those emissions. The first emission is not sent immediately, but\n   * only after the first period has passed. By default, this operator uses the\n   * `async` IScheduler to provide a notion of time, but you may pass any\n   * IScheduler to it.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n   * var numbers = Rx.Observable.interval(1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link delay}\n   *\n   * @param {number} [period=0] The interval size in milliseconds (by default)\n   * or the time unit determined by the scheduler's clock.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a sequential number each time\n   * interval.\n   * @static true\n   * @name interval\n   * @owner Observable\n   */\n  static create(period: number = 0,\n                scheduler: IScheduler = async): Observable<number> {\n    return new IntervalObservable(period, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { index, subscriber, period } = state;\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index += 1;\n\n    (<any> this).schedule(state, period);\n  }\n\n  constructor(private period: number = 0,\n              private scheduler: IScheduler = async) {\n    super();\n    if (!isNumeric(period) || period < 0) {\n      this.period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = async;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>) {\n    const index = 0;\n    const period = this.period;\n    const scheduler = this.scheduler;\n\n    subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n      index, subscriber, period\n    }));\n  }\n}\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class NeverObservable<T> extends Observable<T> {\n  /**\n   * Creates an Observable that emits no items to the Observer.\n   *\n   * <span class=\"informal\">An Observable that never emits anything.</span>\n   *\n   * <img src=\"./img/never.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that emits\n   * neither values nor errors nor the completion notification. It can be used\n   * for testing purposes or for composing with other Observables. Please note\n   * that by never emitting a complete notification, this Observable keeps the\n   * subscription from being disposed automatically. Subscriptions need to be\n   * manually disposed.\n   *\n   * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n   * function info() {\n   *   console.log('Will not be called');\n   * }\n   * var result = Rx.Observable.never().startWith(7);\n   * result.subscribe(x => console.log(x), info, info);\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @return {Observable} A \"never\" Observable: never emits anything.\n   * @static true\n   * @name never\n   * @owner Observable\n   */\n  static create<T>() {\n    return new NeverObservable<T>();\n  }\n\n  constructor() {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): void {\n    noop();\n  }\n}\n","import { IScheduler } from '../Scheduler';\r\nimport { Action } from '../scheduler/Action';\r\nimport { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { TeardownLogic } from '../Subscription';\r\n\r\ninterface PairsContext<T> {\r\n  obj: Object;\r\n  keys: Array<string>;\r\n  length: number;\r\n  index: number;\r\n  subscriber: Subscriber<Array<string | T>>;\r\n}\r\n\r\nfunction dispatch<T>(this: Action<PairsContext<T>>, state: PairsContext<T>) {\r\n  const {obj, keys, length, index, subscriber} = state;\r\n\r\n  if (index === length) {\r\n    subscriber.complete();\r\n    return;\r\n  }\r\n\r\n  const key = keys[index];\r\n  subscriber.next([key, obj[key]]);\r\n\r\n  state.index = index + 1;\r\n\r\n  this.schedule(state);\r\n}\r\n\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nexport class PairsObservable<T> extends Observable<Array<string | T>> {\r\n  private keys: Array<string>;\r\n\r\n  /**\r\n   * Convert an object into an observable sequence of [key, value] pairs\r\n   * using an optional IScheduler to enumerate the object.\r\n   *\r\n   * @example <caption>Converts a javascript object to an Observable</caption>\r\n   * var obj = {\r\n   *   foo: 42,\r\n   *   bar: 56,\r\n   *   baz: 78\r\n   * };\r\n   *\r\n   * var source = Rx.Observable.pairs(obj);\r\n   *\r\n   * var subscription = source.subscribe(\r\n   *   function (x) {\r\n   *     console.log('Next: %s', x);\r\n   *   },\r\n   *   function (err) {\r\n   *     console.log('Error: %s', err);\r\n   *   },\r\n   *   function () {\r\n   *     console.log('Completed');\r\n   *   });\r\n   *\r\n   * @param {Object} obj The object to inspect and turn into an\r\n   * Observable sequence.\r\n   * @param {Scheduler} [scheduler] An optional IScheduler to run the\r\n   * enumeration of the input sequence on.\r\n   * @returns {(Observable<Array<string | T>>)} An observable sequence of\r\n   * [key, value] pairs from the object.\r\n   */\r\n  static create<T>(obj: Object, scheduler?: IScheduler): Observable<Array<string | T>> {\r\n    return new PairsObservable<T>(obj, scheduler);\r\n  }\r\n\r\n  constructor(private obj: Object, private scheduler?: IScheduler) {\r\n    super();\r\n    this.keys = Object.keys(obj);\r\n  }\r\n\r\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<Array<string | T>>): TeardownLogic {\r\n    const {keys, scheduler} = this;\r\n    const length = keys.length;\r\n\r\n    if (scheduler) {\r\n      return scheduler.schedule(dispatch, 0, {\r\n        obj: this.obj, keys, length, index: 0, subscriber\r\n      });\r\n    } else {\r\n      for (let idx = 0; idx < length; idx++) {\r\n        const key = keys[idx];\r\n        subscriber.next([key, this.obj[key]]);\r\n      }\r\n      subscriber.complete();\r\n    }\r\n  }\r\n}\r\n","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class RangeObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that emits a sequence of numbers within a specified\n   * range.\n   *\n   * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n   *\n   * <img src=\"./img/range.png\" width=\"100%\">\n   *\n   * `range` operator emits a range of sequential integers, in order, where you\n   * select the `start` of the range and its `length`. By default, uses no\n   * IScheduler and just delivers the notifications synchronously, but may use\n   * an optional IScheduler to regulate those deliveries.\n   *\n   * @example <caption>Emits the numbers 1 to 10</caption>\n   * var numbers = Rx.Observable.range(1, 10);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link timer}\n   * @see {@link interval}\n   *\n   * @param {number} [start=0] The value of the first integer in the sequence.\n   * @param {number} [count=0] The number of sequential integers to generate.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the notifications.\n   * @return {Observable} An Observable of numbers that emits a finite range of\n   * sequential integers.\n   * @static true\n   * @name range\n   * @owner Observable\n   */\n  static create(start: number = 0,\n                count: number = 0,\n                scheduler?: IScheduler): Observable<number> {\n    return new RangeObservable(start, count, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { start, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(start);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n    state.start = start + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  private start: number;\n  private _count: number;\n  private scheduler: IScheduler;\n\n  constructor(start: number,\n              count: number,\n              scheduler?: IScheduler) {\n    super();\n    this.start = start;\n    this._count = count;\n    this.scheduler = scheduler;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    let index = 0;\n    let start = this.start;\n    const count = this._count;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(RangeObservable.dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(start++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: IScheduler = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch<T>(this: Action<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: IScheduler = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import { isNumeric } from '../util/isNumeric';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isDate } from '../util/isDate';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class TimerObservable extends Observable<number> {\n\n  /**\n   * Creates an Observable that starts emitting after an `initialDelay` and\n   * emits ever increasing numbers after each `period` of time thereafter.\n   *\n   * <span class=\"informal\">Its like {@link interval}, but you can specify when\n   * should the emissions start.</span>\n   *\n   * <img src=\"./img/timer.png\" width=\"100%\">\n   *\n   * `timer` returns an Observable that emits an infinite sequence of ascending\n   * integers, with a constant interval of time, `period` of your choosing\n   * between those emissions. The first emission happens after the specified\n   * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n   * operator uses the `async` IScheduler to provide a notion of time, but you\n   * may pass any IScheduler to it. If `period` is not specified, the output\n   * Observable emits only one value, `0`. Otherwise, it emits an infinite\n   * sequence.\n   *\n   * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n   * var numbers = Rx.Observable.timer(3000, 1000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @example <caption>Emits one number after five seconds</caption>\n   * var numbers = Rx.Observable.timer(5000);\n   * numbers.subscribe(x => console.log(x));\n   *\n   * @see {@link interval}\n   * @see {@link delay}\n   *\n   * @param {number|Date} initialDelay The initial delay time to wait before\n   * emitting the first value of `0`.\n   * @param {number} [period] The period of time between emissions of the\n   * subsequent numbers.\n   * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n   * the emission of values, and providing a notion of \"time\".\n   * @return {Observable} An Observable that emits a `0` after the\n   * `initialDelay` and ever increasing numbers after each `period` of time\n   * thereafter.\n   * @static true\n   * @name timer\n   * @owner Observable\n   */\n  static create(initialDelay: number | Date = 0,\n                period?: number | IScheduler,\n                scheduler?: IScheduler): Observable<number> {\n    return new TimerObservable(initialDelay, period, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, period, subscriber } = state;\n    const action = (<any> this);\n\n    subscriber.next(index);\n\n    if (subscriber.closed) {\n      return;\n    } else if (period === -1) {\n      return subscriber.complete();\n    }\n\n    state.index = index + 1;\n    action.schedule(state, period);\n  }\n\n  private period: number = -1;\n  private dueTime: number = 0;\n  private scheduler: IScheduler;\n\n  constructor(dueTime: number | Date = 0,\n              period?: number | IScheduler,\n              scheduler?: IScheduler) {\n    super();\n\n    if (isNumeric(period)) {\n      this.period = Number(period) < 1 && 1 || Number(period);\n    } else if (isScheduler(period)) {\n      scheduler = <IScheduler> period;\n    }\n\n    if (!isScheduler(scheduler)) {\n      scheduler = async;\n    }\n\n    this.scheduler = scheduler;\n    this.dueTime = isDate(dueTime) ?\n      (+dueTime - this.scheduler.now()) :\n      (<number> dueTime);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<number>): TeardownLogic {\n    const index = 0;\n    const { period, dueTime, scheduler } = this;\n\n    return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n      index, period, subscriber\n    });\n  }\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { AnonymousSubscription, TeardownLogic } from '../Subscription';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class UsingObservable<T> extends Observable<T> {\n\n  static create<T>(resourceFactory: () => AnonymousSubscription | void,\n                   observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void): Observable<T> {\n    return new UsingObservable<T>(resourceFactory, observableFactory);\n  }\n\n  constructor(private resourceFactory: () => AnonymousSubscription | void,\n              private observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const { resourceFactory, observableFactory } = this;\n\n    let resource: AnonymousSubscription;\n\n    try {\n      resource = <AnonymousSubscription>resourceFactory();\n      return new UsingSubscriber(subscriber, resource, observableFactory);\n    } catch (err) {\n      subscriber.error(err);\n    }\n  }\n}\n\nclass UsingSubscriber<T> extends OuterSubscriber<T, T> {\n  constructor(destination: Subscriber<T>,\n              private resource: AnonymousSubscription,\n              private observableFactory: (resource: AnonymousSubscription) => SubscribableOrPromise<T> | void) {\n    super(destination);\n    destination.add(resource);\n    this.tryUse();\n  }\n\n  private tryUse(): void {\n    try {\n      const source = this.observableFactory.call(this, this.resource);\n      if (source) {\n        this.add(subscribeToResult(this, source));\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n}\n","import {  BoundCallbackObservable  } from './BoundCallbackObservable';\n\nexport const bindCallback = BoundCallbackObservable.create;","import {  BoundNodeCallbackObservable  } from './BoundNodeCallbackObservable';\n\nexport const bindNodeCallback = BoundNodeCallbackObservable.create;","import {  Observable, ObservableInput  } from '../Observable';\nimport {  IScheduler  } from '../Scheduler';\nimport {  isScheduler  } from '../util/isScheduler';\nimport {  isArray  } from '../util/isArray';\nimport {  ArrayObservable  } from './ArrayObservable';\nimport {  CombineLatestOperator  } from '../operators/combineLatest';\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(v1: ObservableInput<T>, project: (v1: T) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: IScheduler): Observable<R>;\n\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: IScheduler): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R, scheduler?: IScheduler): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | IScheduler>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | IScheduler>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | IScheduler>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    IScheduler>): Observable<R> {\n  let project: (...values: Array<any>) => R =  null;\n  let scheduler: IScheduler = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <IScheduler>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator<T, R>(project));\n}","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | IScheduler)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | IScheduler)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll()(of(...observables)) as Observable<R>;\n}\n","import {  DeferObservable  } from './DeferObservable';\n\nexport const defer = DeferObservable.create;","import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { map } from '../../operators/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(this: AjaxRequest): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  patch(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T>(url: string, headers?: Object): Observable<T>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxPatch(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PATCH', url, body, headers });\n};\n\nconst mapResponse = map((x: AjaxResponse, index: number) => x.response);\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return mapResponse(\n    new AjaxObservable<AjaxResponse>({\n      method: 'GET',\n      url,\n      responseType: 'json',\n      headers\n    })\n  );\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function(this: AjaxRequest) {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType as any;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // finally send the request\n      result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURI(key)}=${encodeURI(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(this: XMLHttpRequest, e: ProgressEvent) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    xhr.ontimeout = xhrTimeout;\n    (<any>xhrTimeout).request = request;\n    (<any>xhrTimeout).subscriber = this;\n    (<any>xhrTimeout).progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress: (e: ProgressEvent) => void;\n        xhrProgress = function(e: ProgressEvent) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n        (<any>xhrProgress).progressSubscriber = progressSubscriber;\n      }\n      let xhrError: (e: ErrorEvent) => void;\n      xhrError = function(this: XMLHttpRequest, e: ErrorEvent) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError;\n      (<any>xhrError).request = request;\n      (<any>xhrError).subscriber = this;\n      (<any>xhrError).progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(this: XMLHttpRequest, e: ProgressEvent) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    xhr.onreadystatechange = xhrReadyStateChange;\n    (<any>xhrReadyStateChange).subscriber = this;\n    (<any>xhrReadyStateChange).progressSubscriber = progressSubscriber;\n    (<any>xhrReadyStateChange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\nfunction parseXhrResponse(responseType: string, xhr: XMLHttpRequest) {\n  switch (responseType) {\n    case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return JSON.parse((xhr as any).responseText || 'null');\n        }\n      case 'xml':\n        return xhr.responseXML;\n      case 'text':\n      default:\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return  ('response' in xhr) ? xhr.response : (xhr as any).responseText;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { Operator } from '../../Operator';\nimport { root } from '../../util/root';\nimport { ReplaySubject } from '../../ReplaySubject';\nimport { Observer, NextObserver } from '../../Observer';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { assign } from '../../util/assign';\n\nexport interface WebSocketSubjectConfig {\n  url: string;\n  protocol?: string | Array<string>;\n  resultSelector?: <T>(e: MessageEvent) => T;\n  openObserver?: NextObserver<Event>;\n  closeObserver?: NextObserver<CloseEvent>;\n  closingObserver?: NextObserver<void>;\n  WebSocketCtor?: { new(url: string, protocol?: string|Array<string>): WebSocket };\n  binaryType?: 'blob' | 'arraybuffer';\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class WebSocketSubject<T> extends AnonymousSubject<T> {\n\n  url: string;\n  protocol: string|Array<string>;\n  socket: WebSocket;\n  openObserver: NextObserver<Event>;\n  closeObserver: NextObserver<CloseEvent>;\n  closingObserver: NextObserver<void>;\n  WebSocketCtor: { new(url: string, protocol?: string|Array<string>): WebSocket };\n  binaryType?: 'blob' | 'arraybuffer';\n\n  private _output: Subject<T>;\n\n  resultSelector(e: MessageEvent) {\n    return JSON.parse(e.data);\n  }\n\n  /**\n   * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n   *\n   * @example <caption>Wraps browser WebSocket</caption>\n   *\n   * let socket$ = Observable.webSocket('ws://localhost:8081');\n   *\n   * socket$.subscribe(\n   *    (msg) => console.log('message received: ' + msg),\n   *    (err) => console.log(err),\n   *    () => console.log('complete')\n   *  );\n   *\n   * socket$.next(JSON.stringify({ op: 'hello' }));\n   *\n   * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n   *\n   * import { w3cwebsocket } from 'websocket';\n   *\n   * let socket$ = Observable.webSocket({\n   *   url: 'ws://localhost:8081',\n   *   WebSocketCtor: w3cwebsocket\n   * });\n   *\n   * socket$.subscribe(\n   *    (msg) => console.log('message received: ' + msg),\n   *    (err) => console.log(err),\n   *    () => console.log('complete')\n   *  );\n   *\n   * socket$.next(JSON.stringify({ op: 'hello' }));\n   *\n   * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n   * @return {WebSocketSubject}\n   * @static true\n   * @name webSocket\n   * @owner Observable\n   */\n  static create<T>(urlConfigOrSource: string | WebSocketSubjectConfig): WebSocketSubject<T> {\n    return new WebSocketSubject<T>(urlConfigOrSource);\n  }\n\n  constructor(urlConfigOrSource: string | WebSocketSubjectConfig | Observable<T>, destination?: Observer<T>) {\n    if (urlConfigOrSource instanceof Observable) {\n      super(destination, <Observable<T>> urlConfigOrSource);\n    } else {\n      super();\n      this.WebSocketCtor = root.WebSocket;\n      this._output = new Subject<T>();\n      if (typeof urlConfigOrSource === 'string') {\n        this.url = urlConfigOrSource;\n      } else {\n        // WARNING: config object could override important members here.\n        assign(this, urlConfigOrSource);\n      }\n      if (!this.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n\n  lift<R>(operator: Operator<T, R>): WebSocketSubject<R> {\n    const sock = new WebSocketSubject<R>(this, <any> this.destination);\n    sock.operator = operator;\n    return sock;\n  }\n\n  private _resetState() {\n    this.socket = null;\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n    this._output = new Subject<T>();\n  }\n\n  // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n  multiplex(subMsg: () => any, unsubMsg: () => any, messageFilter: (value: T) => boolean) {\n    const self = this;\n    return new Observable((observer: Observer<any>) => {\n      const result = tryCatch(subMsg)();\n      if (result === errorObject) {\n        observer.error(errorObject.e);\n      } else {\n        self.next(result);\n      }\n\n      let subscription = self.subscribe(x => {\n        const result = tryCatch(messageFilter)(x);\n        if (result === errorObject) {\n          observer.error(errorObject.e);\n        } else if (result) {\n          observer.next(x);\n        }\n      },\n        err => observer.error(err),\n        () => observer.complete());\n\n      return () => {\n        const result = tryCatch(unsubMsg)();\n        if (result === errorObject) {\n          observer.error(errorObject.e);\n        } else {\n          self.next(result);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n\n  private _connectSocket() {\n    const { WebSocketCtor } = this;\n    const observer = this._output;\n\n    let socket: WebSocket = null;\n    try {\n      socket = this.protocol ?\n        new WebSocketCtor(this.url, this.protocol) :\n        new WebSocketCtor(this.url);\n      this.socket = socket;\n      if (this.binaryType) {\n        this.socket.binaryType = this.binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n\n    const subscription = new Subscription(() => {\n      this.socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n\n    socket.onopen = (e: Event) => {\n      const openObserver = this.openObserver;\n      if (openObserver) {\n        openObserver.next(e);\n      }\n\n      const queue = this.destination;\n\n      this.destination = Subscriber.create(\n        (x) => socket.readyState === 1 && socket.send(x),\n        (e) => {\n          const closingObserver = this.closingObserver;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          if (e && e.code) {\n            socket.close(e.code, e.reason);\n          } else {\n            observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n              'and an optional reason: { code: number, reason: string }'));\n          }\n          this._resetState();\n        },\n        ( ) => {\n          const closingObserver = this.closingObserver;\n          if (closingObserver) {\n            closingObserver.next(undefined);\n          }\n          socket.close();\n          this._resetState();\n        }\n      );\n\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add((<ReplaySubject<T>>queue).subscribe(this.destination));\n      }\n    };\n\n    socket.onerror = (e: Event) => {\n      this._resetState();\n      observer.error(e);\n    };\n\n    socket.onclose = (e: CloseEvent) => {\n      this._resetState();\n      const closeObserver = this.closeObserver;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n\n    socket.onmessage = (e: MessageEvent) => {\n      const result = tryCatch(this.resultSelector)(e);\n      if (result === errorObject) {\n        observer.error(errorObject.e);\n      } else {\n        observer.next(result);\n      }\n    };\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this.socket) {\n      this._connectSocket();\n    }\n    let subscription = new Subscription();\n    subscription.add(this._output.subscribe(subscriber));\n    subscription.add(() => {\n      const { socket } = this;\n      if (this._output.observers.length === 0) {\n        if (socket && socket.readyState === 1) {\n          socket.close();\n        }\n        this._resetState();\n      }\n    });\n    return subscription;\n  }\n\n  unsubscribe() {\n    const { source, socket } = this;\n    if (socket && socket.readyState === 1) {\n      socket.close();\n      this._resetState();\n    }\n    super.unsubscribe();\n    if (!source) {\n      this.destination = new ReplaySubject();\n    }\n  }\n}\n","import {  AjaxObservable, AjaxCreationMethod  } from './AjaxObservable';\n\nexport const ajax: AjaxCreationMethod = AjaxObservable.create;","import {  WebSocketSubject  } from './WebSocketSubject';\n\nexport const webSocket = WebSocketSubject.create;","import {  EmptyObservable  } from './EmptyObservable';\n\nexport const empty = EmptyObservable.create;","import {  ForkJoinObservable  } from './ForkJoinObservable';\n\nexport const forkJoin = ForkJoinObservable.create;","import {  FromObservable  } from './FromObservable';\n\nexport const from = FromObservable.create;","import {  FromEventObservable  } from './FromEventObservable';\n\nexport const fromEvent = FromEventObservable.create;","import {  FromEventPatternObservable  } from './FromEventPatternObservable';\n\nexport const fromEventPattern = FromEventPatternObservable.create;","import {  PromiseObservable  } from './PromiseObservable';\n\nexport const fromPromise = PromiseObservable.create;","import { GenerateObservable } from './GenerateObservable';\n\nexport const generate = GenerateObservable.create;\n","import {  IfObservable  } from './IfObservable';\n\nexport const _if = IfObservable.create;","import {  IntervalObservable  } from './IntervalObservable';\n\nexport const interval = IntervalObservable.create;","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | IScheduler | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | IScheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: IScheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <IScheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll(concurrent)(new ArrayObservable(<any>observables, scheduler)) as Observable<R>;\n}\n","import {  NeverObservable  } from './NeverObservable';\n\nexport const never = NeverObservable.create;","import {  ArrayObservable  } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;","import { onErrorResumeNextStatic } from '../operators/onErrorResumeNext';\n\nexport const onErrorResumeNext = onErrorResumeNextStatic;\n","import {  PairsObservable  } from './PairsObservable';\r\n\r\nexport const pairs = PairsObservable.create;","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return new ArrayObservable<T>(<any>observables).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import {  RangeObservable  } from './RangeObservable';\n\nexport const range = RangeObservable.create;","import {  ErrorObservable  } from './ErrorObservable';\n\nexport const _throw = ErrorObservable.create;","import {  TimerObservable  } from './TimerObservable';\n\nexport const timer = TimerObservable.create;","import {  UsingObservable  } from './UsingObservable';\n\nexport const using = UsingObservable.create;","import {  zipStatic  } from '../operators/zip';\n\nexport const zip = zipStatic;\n","\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { audit as higherOrder } from '../operators/audit';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(this: Observable<T>, durationSelector: (value: T) => SubscribableOrPromise<any>): Observable<T> {\n  return higherOrder(durationSelector)(this);\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { auditTime as higherOrder } from '../operators/auditTime';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(this: Observable<T>, duration: number, scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(duration, scheduler)(this) as Observable<T>;\n}","\nimport { Observable } from '../Observable';\nimport { buffer as higherOrder } from '../operators/buffer';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(this: Observable<T>, closingNotifier: Observable<any>): Observable<T[]> {\n  return higherOrder(closingNotifier)(this) as Observable<T[]>;\n}\n","\nimport { Observable } from '../Observable';\nimport { bufferCount as higherOrder } from '../operators/bufferCount';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(this: Observable<T>, bufferSize: number, startBufferEvery: number = null): Observable<T[]> {\n  return higherOrder(bufferSize, startBufferEvery)(this) as Observable<T[]>;\n}\n","import { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { bufferTime as higherOrder } from '../operators/bufferTime';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number, scheduler?: IScheduler): Observable<T[]>;\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): Observable<T[]>;\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(this: Observable<T>, bufferTimeSpan: number): Observable<T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return higherOrder(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this) as Observable<T[]>;\n}\n","\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { bufferToggle as higherOrder } from '../operators/bufferToggle';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(this: Observable<T>, openings: SubscribableOrPromise<O>,\n                                   closingSelector: (value: O) => SubscribableOrPromise<any>): Observable<T[]> {\n  return higherOrder(openings, closingSelector)(this) as Observable<T[]>;\n}\n","\nimport { Observable } from '../Observable';\nimport { bufferWhen as higherOrder } from '../operators/bufferWhen';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(this: Observable<T>, closingSelector: () => Observable<any>): Observable<T[]> {\n  return higherOrder(closingSelector)(this) as Observable<T[]>;\n}\n","\nimport { Observable, ObservableInput } from '../Observable';\nimport { catchError as higherOrder } from '../operators/catchError';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nexport function _catch<T, R>(this: Observable<T>, selector: (err: any, caught: Observable<T>) => ObservableInput<R>): Observable<T | R> {\n  return higherOrder(selector)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { combineAll as higherOrder } from '../operators/combineAll';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nexport function combineAll<T, R>(this: Observable<T>, project?: (...values: Array<any>) => R): Observable<R> {\n  return higherOrder(project)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { combineLatest as higherOrder } from '../operators/combineLatest';\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function combineLatest<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function combineLatest<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function combineLatest<T, R>(this: Observable<T>, array: ObservableInput<T>[]): Observable<Array<T>>;\nexport function combineLatest<T, TOther, R>(this: Observable<T>, array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...observables)(this);\n}","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { concat as higherOrder } from '../operators/concat';\n\nexport { concat as concatStatic } from '../observable/concat';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(this: Observable<T>, scheduler?: IScheduler): Observable<T>;\nexport function concat<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function concat<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(this: Observable<T>, ...observables: Array<ObservableInput<T> | IScheduler>): Observable<T>;\nexport function concat<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler>): Observable<R> {\n  return higherOrder(...observables)(this);\n}\n","import { Observable } from '../Observable';\nimport { Subscribable } from '../Observable';\nimport { concatAll as higherOrder } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concatAll<T>(this: Observable<T>): T;\nexport function concatAll<T, R>(this: Observable<T>): Subscribable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(this: Observable<T>): T {\n  return <any>higherOrder()(this);\n}\n","import { concatMap as higherOrderConcatMap } from '../operators/concatMap';\nimport { Observable, ObservableInput } from '../Observable';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<R>): Observable<R>;\nexport function concatMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return higherOrderConcatMap(project, resultSelector)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { concatMapTo as higherOrder } from '../operators/concatMapTo';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>): Observable<R>;\nexport function concatMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(this: Observable<T>, innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return higherOrder(innerObservable, resultSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { count as higherOrder } from '../operators/count';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number> {\n  return higherOrder(predicate)(this);\n}\n","\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { debounce as higherOrder } from '../operators/debounce';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(this: Observable<T>, durationSelector: (value: T) => SubscribableOrPromise<number>): Observable<T> {\n  return higherOrder(durationSelector)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { debounceTime as higherOrder } from '../operators/debounceTime';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(this: Observable<T>, dueTime: number, scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(dueTime, scheduler)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { defaultIfEmpty as higherOrder } from '../operators/defaultIfEmpty';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(this: Observable<T>, defaultValue?: T): Observable<T>;\nexport function defaultIfEmpty<T, R>(this: Observable<T>, defaultValue?: R): Observable<T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(this: Observable<T>, defaultValue: R = null): Observable<T | R> {\n  return higherOrder<T, R>(defaultValue)(this);\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { delay as higherOrder } from '../operators/delay';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(this: Observable<T>, delay: number|Date,\n                         scheduler: IScheduler = async): Observable<T> {\n  return higherOrder<T>(delay, scheduler)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { delayWhen as higherOrder } from '../operators/delayWhen';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(this: Observable<T>, delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): Observable<T> {\n  return higherOrder(delayDurationSelector, subscriptionDelay)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { dematerialize as higherOrder } from '../operators/dematerialize';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(this: Observable<Notification<T>>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { distinct as higherOrder } from '../operators/distinct';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(this: Observable<T>,\n                               keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): Observable<T> {\n  return higherOrder(keySelector, flushes)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { distinctUntilChanged as higherOrder } from '../operators/distinctUntilChanged';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(this: Observable<T>, compare?: (x: T, y: T) => boolean): Observable<T>;\nexport function distinctUntilChanged<T, K>(this: Observable<T>, compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(this: Observable<T>, compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): Observable<T> {\n  return higherOrder(compare, keySelector)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { distinctUntilKeyChanged as higherOrder } from '../operators/distinctUntilKeyChanged';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(this: Observable<T>, key: string): Observable<T>;\nexport function distinctUntilKeyChanged<T, K>(this: Observable<T>, key: string, compare: (x: K, y: K) => boolean): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T>(this: Observable<T>, key: string, compare?: (x: T, y: T) => boolean): Observable<T> {\n  return higherOrder<T, T>(key, compare)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { tap as higherOrder } from '../operators/tap';\n\n/* tslint:disable:max-line-length */\nexport function _do<T>(this: Observable<T>, next: (x: T) => void, error?: (e: any) => void, complete?: () => void): Observable<T>;\nexport function _do<T>(this: Observable<T>, observer: PartialObserver<T>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nexport function _do<T>(this: Observable<T>, nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): Observable<T> {\n  return higherOrder(<any>nextOrObserver, error, complete)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { elementAt as higherOrder } from '../operators/elementAt';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(this: Observable<T>, index: number, defaultValue?: T): Observable<T> {\n  return higherOrder(index, defaultValue)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { every as higherOrder } from '../operators/every';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): Observable<boolean> {\n  return higherOrder(predicate, thisArg)(this);\n}","\nimport { Observable } from '../Observable';\nimport { exhaust as higherOrder } from '../operators/exhaust';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n}\n","\nimport { Observable, ObservableInput } from '../Observable';\nimport { exhaustMap as higherOrder } from '../operators/exhaustMap';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\nexport function exhaustMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                    resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R> {\n  return higherOrder(project, resultSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { expand as higherOrder } from '../operators/expand';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(this: Observable<T>, project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function expand<T, R>(this: Observable<T>, project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(this: Observable<T>, project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): Observable<R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return higherOrder(project, concurrent, scheduler)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { filter as higherOrderFilter } from '../operators/filter';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(this: Observable<T>,\n                                       predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): Observable<S>;\nexport function filter<T>(this: Observable<T>,\n                          predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T> {\n  return higherOrderFilter(predicate, thisArg)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { finalize } from '../operators/finalize';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function _finally<T>(this: Observable<T>, callback: () => void): Observable<T> {\n  return finalize(callback)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { find as higherOrder } from '../operators/find';\n\n/* tslint:disable:max-line-length */\nexport function find<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): Observable<S>;\nexport function find<T>(this: Observable<T>,\n                        predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): Observable<T> {\n  return higherOrder(predicate, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { findIndex as higherOrder } from '../operators/findIndex';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): Observable<number> {\n  return higherOrder(predicate, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { first as higherOrder } from '../operators/first';\n\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(this: Observable<T>,\n                                      predicate: (value: T, index: number, source: Observable<T>) => value is S): Observable<S>;\nexport function first<T, S extends T, R>(this: Observable<T>,\n                                         predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): Observable<R>;\nexport function first<T, S extends T>(this: Observable<T>,\n                                      predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): Observable<S>;\nexport function first<T>(this: Observable<T>,\n                         predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\nexport function first<T, R>(this: Observable<T>,\n                            predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): Observable<R>;\nexport function first<T>(this: Observable<T>,\n                         predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): Observable<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): Observable<T | R> {\n  return higherOrder(predicate, resultSelector as any, defaultValue)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { groupBy as higherOrder, GroupedObservable } from '../operators/groupBy';\nexport { GroupedObservable };\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(this: Observable<T>, keySelector: (value: T) => K): Observable<GroupedObservable<K, T>>;\nexport function groupBy<T, K>(this: Observable<T>, keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): Observable<GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(this: Observable<T>, keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): Observable<GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(this: Observable<T>, keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): Observable<GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(this: Observable<T>, keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): Observable<GroupedObservable<K, R>> {\n  return higherOrder(keySelector, elementSelector as any, durationSelector, subjectSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { ignoreElements as higherOrder } from '../operators/ignoreElements';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n","\nimport { Observable } from '../Observable';\nimport { isEmpty as higherOrder } from '../operators/isEmpty';\n\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nexport function isEmpty<T>(this: Observable<T>): Observable<boolean> {\n  return higherOrder()(this);\n}\n","import { Observable } from '../Observable';\nimport { last as higherOrder } from '../operators/last';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number, source: Observable<T>) => value is S): Observable<S>;\nexport function last<T, S extends T, R>(this: Observable<T>,\n                                        predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): Observable<R>;\nexport function last<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): Observable<S>;\nexport function last<T>(this: Observable<T>,\n                        predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\nexport function last<T, R>(this: Observable<T>,\n                           predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): Observable<R>;\nexport function last<T>(this: Observable<T>,\n                        predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): Observable<T | R> {\n  return higherOrder(predicate, resultSelector as any, defaultValue)(this);\n}\n","import { Observable } from '../Observable';\n\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nexport function letProto<T, R>(this: Observable<T>, func: (selector: Observable<T>) => Observable<R>): Observable<R> {\n  return func(this);\n}\n","import { map as higherOrderMap } from '../operators/map';\nimport { Observable } from '../Observable';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(this: Observable<T>, project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n  return higherOrderMap(project, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { mapTo as higherOrder } from '../operators/mapTo';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(this: Observable<T>, value: R): Observable<R> {\n  return higherOrder(value)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { materialize as higherOrder } from '../operators/materialize';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(this: Observable<T>): Observable<Notification<T>> {\n  return higherOrder()(this) as Observable<Notification<T>>;\n}\n","import { Observable } from '../Observable';\nimport { max as higherOrderMax } from '../operators/max';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(this: Observable<T>, comparer?: (x: T, y: T) => number): Observable<T> {\n  return higherOrderMax(comparer)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { merge as higherOrder } from '../operators/merge';\n\nexport { merge as mergeStatic } from '../observable/merge';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(this: Observable<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(this: Observable<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(this: Observable<T>, ...observables: Array<ObservableInput<T> | IScheduler | number>): Observable<T>;\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n  return higherOrder(...observables)(this) as Observable<R>;\n}\n","import { Observable } from '../Observable';\nimport { Subscribable } from '../Observable';\nimport { mergeAll as higherOrder } from '../operators/mergeAll';\n\nexport function mergeAll<T>(this: Observable<T>, concurrent?: number): T;\nexport function mergeAll<T, R>(this: Observable<T>, concurrent?: number): Subscribable<R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(this: Observable<T>, concurrent: number = Number.POSITIVE_INFINITY): Observable<T> {\n  return higherOrder(concurrent)(this) as Observable<T>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { mergeMap as higherOrderMergeMap } from '../operators/mergeMap';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): Observable<R>;\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): Observable<I | R> {\n  return higherOrderMergeMap(project, <any>resultSelector, concurrent)(this) as Observable<I | R>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { mergeMapTo as higherOrder } from '../operators/mergeMapTo';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>, concurrent?: number): Observable<R>;\nexport function mergeMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(this: Observable<T>, innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  return higherOrder(innerObservable, resultSelector as any, concurrent)(this) as Observable<R>;\n}\n","\nimport { Observable } from '../Observable';\nimport { mergeScan as higherOrder } from '../operators/mergeScan';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(this: Observable<T>,\n                                accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n  return higherOrder(accumulator, seed, concurrent)(this);\n}\n","import { Observable } from '../Observable';\nimport { min as higherOrderMin } from '../operators/min';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(this: Observable<T>, comparer?: (x: T, y: T) => number): Observable<T> {\n  return higherOrderMin(comparer)(this);\n}\n","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { multicast as higherOrder } from '../operators/multicast';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): ConnectableObservable<T>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): Observable<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(this: Observable<T>, subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): Observable<R> | ConnectableObservable<R> {\n  return higherOrder(<any>subjectOrSubjectFactory, selector)(this);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { observeOn as higherOrder } from '../operators/observeOn';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return higherOrder(scheduler, delay)(this) as Observable<T>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { onErrorResumeNext as higherOrder } from '../operators/onErrorResumeNext';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(this: Observable<T>, v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R> ;\nexport function onErrorResumeNext<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<T, R>(this: Observable<T>, array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(this: Observable<T>, ...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...nextSources)(this);\n}\n","import { Observable } from '../Observable';\nimport { pairwise as higherOrder } from '../operators/pairwise';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(this: Observable<T>): Observable<[T, T]> {\n  return higherOrder()(this) as Observable<[T, T]>;\n}\n","import { Observable } from '../Observable';\nimport { partition as higherOrder } from '../operators/partition';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean, thisArg?: any): [Observable<T>, Observable<T>] {\n  return higherOrder(predicate, thisArg)(this);\n}\n","import { Observable } from '../Observable';\nimport { pluck as higherOrder } from '../operators/pluck';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(this: Observable<T>, ...properties: string[]): Observable<R> {\n  return higherOrder(...properties)(this) as Observable<R>;\n}\n","\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publish as higherOrder } from '../operators/publish';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(this: Observable<T>): ConnectableObservable<T>;\nexport function publish<T>(this: Observable<T>, selector: (source: Observable<T>) => Observable<T>): Observable<T>;\nexport function publish<T, R>(this: Observable<T>, selector: (source: Observable<T>) => Observable<R>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T, R>(this: Observable<T>, selector?: (source: Observable<T>) => Observable<R>): Observable<R> | ConnectableObservable<R> {\n  return higherOrder(selector)(this);\n}\n\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n","import { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishBehavior as higherOrder } from '../operators/publishBehavior';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(this: Observable<T>, value: T): ConnectableObservable<T> {\n  return higherOrder(value)(this);\n}\n","import { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishLast as higherOrder } from '../operators/publishLast';\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nexport function publishLast<T>(this: Observable<T>): ConnectableObservable<T> {\n  //TODO(benlesh): correct type-flow through here.\n  return higherOrder()(this) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishReplay as higherOrder } from '../operators/publishReplay';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(this: Observable<T>, bufferSize?: number, windowTime?: number, scheduler?: IScheduler): ConnectableObservable<T>;\nexport function publishReplay<T>(this: Observable<T>, bufferSize?: number, windowTime?: number, selector?: MonoTypeOperatorFunction<T>, scheduler?: IScheduler): Observable<T>;\nexport function publishReplay<T, R>(this: Observable<T>, bufferSize?: number, windowTime?: number, selector?: OperatorFunction<T, R>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay<T, R>(this: Observable<T>, bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: IScheduler | OperatorFunction<T, R>,\n                                    scheduler?: IScheduler): Observable<R> | ConnectableObservable<R> {\n\n  return higherOrder<T, R>(bufferSize, windowTime, selectorOrScheduler as any, scheduler)(this);\n}\n","import { Observable } from '../Observable';\nimport { race as higherOrder } from '../operators/race';\n\n// NOTE: to support backwards compatability with 5.4.* and lower\nexport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\nexport function race<T>(this: Observable<T>, observables: Array<Observable<T>>): Observable<T>;\nexport function race<T, R>(this: Observable<T>, observables: Array<Observable<T>>): Observable<R>;\nexport function race<T>(this: Observable<T>, ...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T, R>(this: Observable<T>, ...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(this: Observable<T>, ...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T> {\n  return higherOrder(...observables)(this);\n}\n","import { Observable } from '../Observable';\nimport { reduce as higherOrderReduce } from '../operators/reduce';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(this: Observable<T>, accumulator: (acc: T, value: T, index: number) => T, seed?: T): Observable<T>;\nexport function reduce<T>(this: Observable<T>, accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): Observable<T[]>;\nexport function reduce<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed: R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index?: number) => R, seed?: R): Observable<R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return higherOrderReduce(accumulator, seed)(this);\n  }\n\n  return higherOrderReduce(accumulator)(this);\n}\n","\nimport { Observable } from '../Observable';\nimport { repeat as higherOrder } from '../operators/repeat';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(this: Observable<T>, count: number = -1): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { repeatWhen as higherOrder } from '../operators/repeatWhen';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(this: Observable<T>, notifier: (notifications: Observable<any>) => Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { retry as higherOrder } from '../operators/retry';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(this: Observable<T>, count: number = -1): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { retryWhen as higherOrder } from '../operators/retryWhen';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(this: Observable<T>, notifier: (errors: Observable<any>) => Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { sample as higherOrder } from '../operators/sample';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(this: Observable<T>, notifier: Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { sampleTime as higherOrder } from '../operators/sampleTime';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(this: Observable<T>, period: number, scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(period, scheduler)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { scan as higherOrderScan } from '../operators/scan';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(this: Observable<T>, accumulator: (acc: T, value: T, index: number) => T, seed?: T): Observable<T>;\nexport function scan<T>(this: Observable<T>, accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): Observable<T[]>;\nexport function scan<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed?: R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): Observable<R> {\n  if (arguments.length >= 2) {\n    return higherOrderScan(accumulator, seed)(this) as Observable<R>;\n  }\n  return higherOrderScan(accumulator)(this);\n}\n","import { Observable } from '../Observable';\nimport { sequenceEqual as higherOrder } from '../operators/sequenceEqual';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(this: Observable<T>, compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): Observable<boolean> {\n  return higherOrder(compareTo, comparor)(this);\n}\n","import { Observable } from '../Observable';\nimport { share as higherOrder } from '../operators/share';\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { shareReplay as higherOrder } from '../operators/shareReplay';\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(this: Observable<T>, bufferSize?: number, windowTime?: number, scheduler?: IScheduler):\n  Observable<T> {\n  return higherOrder(bufferSize, windowTime, scheduler)(this) as Observable<T>;\n};","import { Observable } from '../Observable';\nimport { single as higherOrder } from '../operators/single';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T> {\n  return higherOrder(predicate)(this);\n}\n","import { Observable } from '../Observable';\nimport { skip as higherOrder } from '../operators/skip';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { skipLast as higherOrder } from '../operators/skipLast';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { skipUntil as higherOrder } from '../operators/skipUntil';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(this: Observable<T>, notifier: Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { skipWhile as higherOrder } from '../operators/skipWhile';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean): Observable<T> {\n  return higherOrder(predicate)(this);\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { startWith as higherOrder } from '../operators/startWith';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(this: Observable<T>, v1: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: IScheduler): Observable<T>;\nexport function startWith<T>(this: Observable<T>, ...array: Array<T | IScheduler>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(this: Observable<T>, ...array: Array<T | IScheduler>): Observable<T> {\n  return higherOrder(...array)(this);\n}\n","\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn as higherOrder } from '../operators/subscribeOn';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return higherOrder(scheduler, delay)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { switchAll as higherOrder } from '../operators/switchAll';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nexport function _switch<T>(this: Observable<Observable<T>>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n}\n","\nimport { Observable, ObservableInput } from '../Observable';\nimport { switchMap as higherOrderSwitchMap } from '../operators/switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>): Observable<R>;\nexport function switchMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<I | R> {\n  return higherOrderSwitchMap(project, resultSelector)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { switchMapTo as higherOrder } from '../operators/switchMapTo';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(this: Observable<T>, observable: ObservableInput<R>): Observable<R>;\nexport function switchMapTo<T, I, R>(this: Observable<T>, observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(this: Observable<T>, innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): Observable<I | R> {\n  return higherOrder(innerObservable, resultSelector)(this);\n}\n","import { Observable } from '../Observable';\nimport { take as higherOrder } from '../operators/take';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrder(count)(this) as Observable<T>;\n}\n","\nimport { Observable } from '../Observable';\nimport { takeLast as higherOrderTakeLast } from '../operators/takeLast';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(this: Observable<T>, count: number): Observable<T> {\n  return higherOrderTakeLast(count)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { takeUntil as higherOrder } from '../operators/takeUntil';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(this: Observable<T>, notifier: Observable<any>): Observable<T> {\n  return higherOrder(notifier)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { takeWhile as higherOrder } from '../operators/takeWhile';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean): Observable<T> {\n  return higherOrder(predicate)(this);\n}\n","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { throttle as higherOrder, ThrottleConfig, defaultThrottleConfig } from '../operators/throttle';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(this: Observable<T>,\n                            durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): Observable<T> {\n  return higherOrder(durationSelector, config)(this);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { ThrottleConfig, defaultThrottleConfig } from '../operators/throttle';\nimport { throttleTime as higherOrder } from '../operators/throttleTime';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(this: Observable<T>,\n                                duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): Observable<T> {\n  return higherOrder(duration, scheduler, config)(this) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { timeInterval as higherOrder, TimeInterval } from '../operators/timeInterval';\nexport {TimeInterval};\n\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nexport function timeInterval<T>(this: Observable<T>, scheduler: IScheduler = async): Observable<TimeInterval<T>> {\n  return higherOrder(scheduler)(this) as Observable<TimeInterval<T>>;\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { timeout as higherOrder } from '../operators/timeout';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(this: Observable<T>,\n                           due: number | Date,\n                           scheduler: IScheduler = async): Observable<T> {\n  return higherOrder(due, scheduler)(this) as Observable<T>;\n}\n","import { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Observable, ObservableInput } from '../Observable';\nimport { timeoutWith as higherOrder } from '../operators/timeoutWith';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(this: Observable<T>, due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function timeoutWith<T, R>(this: Observable<T>, due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): Observable<T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(this: Observable<T>, due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): Observable<T | R> {\n  return higherOrder(due, withObservable, scheduler)(this as any);\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { timestamp as higherOrder } from '../operators/timestamp';\nimport { Timestamp } from '../operators/timestamp';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(this: Observable<T>, scheduler: IScheduler = async): Observable<Timestamp<T>> {\n  return higherOrder(scheduler)(this) as Observable<Timestamp<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { toArray as higherOrder } from '../operators/toArray';\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nexport function toArray<T>(this: Observable<T>): Observable<T[]> {\n  return higherOrder()(this) as Observable<T[]>;\n}\n","\nimport { Observable } from '../Observable';\nimport { window as higherOrder } from '../operators/window';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(this: Observable<T>, windowBoundaries: Observable<any>): Observable<Observable<T>> {\n  return higherOrder(windowBoundaries)(this) as Observable<Observable<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { windowCount as higherOrder } from '../operators/windowCount';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(this: Observable<T>, windowSize: number,\n                               startWindowEvery: number = 0): Observable<Observable<T>> {\n  return higherOrder(windowSize, startWindowEvery)(this) as Observable<Observable<T>>;\n}\n","import { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { windowTime as higherOrder } from '../operators/windowTime';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(this: Observable<T>, windowTimeSpan: number,\n                              scheduler?: IScheduler): Observable<Observable<T>>;\nexport function windowTime<T>(this: Observable<T>, windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): Observable<Observable<T>>;\nexport function windowTime<T>(this: Observable<T>, windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): Observable<Observable<T>>;\n\nexport function windowTime<T>(this: Observable<T>,\n                              windowTimeSpan: number): Observable<Observable<T>> {\n\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return higherOrder(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this) as Observable<Observable<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { windowToggle as higherOrder } from '../operators/windowToggle';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(this: Observable<T>, openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): Observable<Observable<T>> {\n  return higherOrder(openings, closingSelector)(this) as Observable<Observable<T>>;\n}\n","\nimport { Observable } from '../Observable';\nimport { windowWhen as higherOrder } from '../operators/windowWhen';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(this: Observable<T>, closingSelector: () => Observable<any>): Observable<Observable<T>> {\n  return higherOrder(closingSelector)(this) as Observable<Observable<T>>;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { withLatestFrom as higherOrder } from '../operators/withLatestFrom';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function withLatestFrom<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function withLatestFrom<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function withLatestFrom<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function withLatestFrom<T, R>(this: Observable<T>, array: ObservableInput<any>[]): Observable<R>;\nexport function withLatestFrom<T, R>(this: Observable<T>, array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(this: Observable<T>, ...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...args)(this);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { zip as higherOrder } from '../operators/zip';\n\n/* tslint:disable:max-line-length */\nexport function zipProto<T, R>(this: Observable<T>, project: (v1: T) => R): Observable<R>;\nexport function zipProto<T, T2, R>(this: Observable<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipProto<T, T2, T3, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipProto<T, T2, T3, T4, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipProto<T, T2, T3, T4, T5, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipProto<T, T2, T3, T4, T5, T6, R>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R> ;\nexport function zipProto<T, T2>(this: Observable<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipProto<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipProto<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipProto<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipProto<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]> ;\nexport function zipProto<T>(this: Observable<T>, ...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipProto<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipProto<T, R>(this: Observable<T>, array: Array<ObservableInput<T>>): Observable<R>;\nexport function zipProto<T, TOther, R>(this: Observable<T>, array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zipProto<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  return higherOrder(...observables)(this);\n}\n","import { Observable } from '../Observable';\nimport { zipAll as higherOrder } from '../operators/zipAll';\n\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nexport function zipAll<T, R>(this: Observable<T>, project?: (...values: Array<any>) => R): Observable<R> {\n  return higherOrder(project)(this);\n}\n","export { audit } from './operators/audit';\nexport { auditTime } from './operators/auditTime';\nexport { buffer } from './operators/buffer';\nexport { bufferCount } from './operators/bufferCount';\nexport { bufferTime } from './operators/bufferTime';\nexport { bufferToggle } from './operators/bufferToggle';\nexport { bufferWhen } from './operators/bufferWhen';\nexport { catchError } from './operators/catchError';\nexport { combineAll } from './operators/combineAll';\nexport { combineLatest } from './operators/combineLatest';\nexport { concat } from './operators/concat';\nexport { concatAll } from './operators/concatAll';\nexport { concatMap } from './operators/concatMap';\nexport { concatMapTo } from './operators/concatMapTo';\nexport { count } from './operators/count';\nexport { debounce } from './operators/debounce';\nexport { debounceTime } from './operators/debounceTime';\nexport { defaultIfEmpty } from './operators/defaultIfEmpty';\nexport { delay } from './operators/delay';\nexport { delayWhen } from './operators/delayWhen';\nexport { dematerialize } from './operators/dematerialize';\nexport { distinct } from './operators/distinct';\nexport { distinctUntilChanged } from './operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './operators/distinctUntilKeyChanged';\nexport { elementAt } from './operators/elementAt';\nexport { every } from './operators/every';\nexport { exhaust } from './operators/exhaust';\nexport { exhaustMap } from './operators/exhaustMap';\nexport { expand } from './operators/expand';\nexport { filter } from './operators/filter';\nexport { finalize } from './operators/finalize';\nexport { find } from './operators/find';\nexport { findIndex } from './operators/findIndex';\nexport { first } from './operators/first';\nexport { groupBy } from './operators/groupBy';\nexport { ignoreElements } from './operators/ignoreElements';\nexport { isEmpty } from './operators/isEmpty';\nexport { last } from './operators/last';\nexport { map } from './operators/map';\nexport { mapTo } from './operators/mapTo';\nexport { materialize } from './operators/materialize';\nexport { max } from './operators/max';\nexport { merge } from './operators/merge';\nexport { mergeAll } from './operators/mergeAll';\nexport { mergeMap } from './operators/mergeMap';\nexport { mergeMap as flatMap } from './operators/mergeMap';\nexport { mergeMapTo } from './operators/mergeMapTo';\nexport { mergeScan } from './operators/mergeScan';\nexport { min } from './operators/min';\nexport { multicast } from './operators/multicast';\nexport { observeOn } from './operators/observeOn';\nexport { onErrorResumeNext } from './operators/onErrorResumeNext';\nexport { pairwise } from './operators/pairwise';\nexport { partition } from './operators/partition';\nexport { pluck } from './operators/pluck';\nexport { publish } from './operators/publish';\nexport { publishBehavior } from './operators/publishBehavior';\nexport { publishLast } from './operators/publishLast';\nexport { publishReplay } from './operators/publishReplay';\nexport { race } from './operators/race';\nexport { reduce } from './operators/reduce';\nexport { repeat } from './operators/repeat';\nexport { repeatWhen } from './operators/repeatWhen';\nexport { retry } from './operators/retry';\nexport { retryWhen } from './operators/retryWhen';\nexport { refCount } from './operators/refCount';\nexport { sample } from './operators/sample';\nexport { sampleTime } from './operators/sampleTime';\nexport { scan } from './operators/scan';\nexport { sequenceEqual } from './operators/sequenceEqual';\nexport { share } from './operators/share';\nexport { shareReplay } from './operators/shareReplay';\nexport { single } from './operators/single';\nexport { skip } from './operators/skip';\nexport { skipLast } from './operators/skipLast';\nexport { skipUntil } from './operators/skipUntil';\nexport { skipWhile } from './operators/skipWhile';\nexport { startWith } from './operators/startWith';\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nexport { switchAll } from './operators/switchAll';\nexport { switchMap } from './operators/switchMap';\nexport { switchMapTo } from './operators/switchMapTo';\nexport { take } from './operators/take';\nexport { takeLast } from './operators/takeLast';\nexport { takeUntil } from './operators/takeUntil';\nexport { takeWhile } from './operators/takeWhile';\nexport { tap } from './operators/tap';\nexport { throttle } from './operators/throttle';\nexport { throttleTime } from './operators/throttleTime';\nexport { timeInterval } from './operators/timeInterval';\nexport { timeout } from './operators/timeout';\nexport { timeoutWith } from './operators/timeoutWith';\nexport { timestamp } from './operators/timestamp';\nexport { toArray } from './operators/toArray';\nexport { window } from './operators/window';\nexport { windowCount } from './operators/windowCount';\nexport { windowTime } from './operators/windowTime';\nexport { windowToggle } from './operators/windowToggle';\nexport { windowWhen } from './operators/windowWhen';\nexport { withLatestFrom } from './operators/withLatestFrom';\nexport { zip } from './operators/zip';\nexport { zipAll } from './operators/zipAll';\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      const duration = tryCatch(this.durationSelector)(value);\n      if (duration === errorObject) {\n        this.destination.error(errorObject.e);\n      } else {\n        const innerSubscription = subscribeToResult(this, duration);\n        if (innerSubscription.closed) {\n          this.clearThrottle();\n        } else {\n          this.add(this.throttled = innerSubscription);\n        }\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { async } from '../scheduler/async';\nimport { IScheduler } from '../Scheduler';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number, maxBufferSize: number, scheduler?: IScheduler): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: IScheduler = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ntype CreationState<T> = {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number,\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: IScheduler;\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: CreationState<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: Action<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\nfunction dispatchBufferCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <Action<CreationState<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(subscribeToResult(this, closingNotifier));\n      this.subscribing = false;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n","import { CombineLatestOperator } from '../operators/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(new ArrayObservable([source, ...observables]), new CombineLatestOperator(project));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private project?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private project?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(none);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryProject(values: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { concat as concatStatic } from '../observable/concat';\n\nexport { concat as concatStatic } from '../observable/concat';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: IScheduler): OperatorFunction<T, T | T2>;\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: Array<ObservableInput<T> | IScheduler>): MonoTypeOperatorFunction<T>;\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | IScheduler>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic<T, R>(source, ...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): MonoTypeOperatorFunction<T> {\n  return mergeAll(1);\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(project: (value: T, index: number) =>  ObservableInput<R>): OperatorFunction<T, R>;\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return mergeMap(project, resultSelector, 1);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { concatMap } from './concatMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function concatMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, I, R>(\n  innerObservable: Observable<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<number>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<number>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (!subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      this.destination.next(this.lastValue);\n      this.lastValue = null;\n      this.hasValue = false;\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Action } from '../scheduler/Action';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: IScheduler;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: Action<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: IScheduler) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: IScheduler): void {\n    this.active = true;\n    this.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private values: Array<T> = [];\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    try {\n      const delayNotifier = this.delayDurationSelector(value);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    let value: T = null;\n\n    if (subscriptionIdx !== -1) {\n      value = this.values[subscriptionIdx];\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n      this.values.splice(subscriptionIdx, 1);\n    }\n\n    return value;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      this.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n\n    this.values.push(value);\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(/** @deprecated internal use only */ public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ISet, Set } from '../util/Set';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values: ISet<K> = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n\n    const keySelector = this.keySelector;\n    let key: any = value;\n\n    if (keySelector) {\n      key = tryCatch(this.keySelector)(value);\n      if (key === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    }\n\n    let result: any = false;\n\n    if (this.hasKey) {\n      result = tryCatch(this.compare)(this.key, key);\n      if (result === errorObject) {\n        return this.destination.error(errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: string): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K>(key: string, compare: (x: K, y: K) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T>(key: string, compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ElementAtOperator(index, defaultValue));\n}\n\nclass ElementAtOperator<T> implements Operator<T, T> {\n\n  constructor(private index: number, private defaultValue?: T) {\n    if (index < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ElementAtSubscriber<T> extends Subscriber<T> {\n\n  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (this.index-- === 0) {\n      this.destination.next(x);\n      this.destination.complete();\n    }\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    if (this.index >= 0) {\n      if (typeof this.defaultValue !== 'undefined') {\n        destination.next(this.defaultValue);\n      } else {\n        destination.error(new ArgumentOutOfRangeError);\n      }\n    }\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n  ): OperatorFunction<T, R> {\n    return (source: Observable<T>) => source.lift(new SwitchFirstMapOperator(project, resultSelector));\n  }\n\nclass SwitchFirstMapOperator<T, I, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasSubscription: boolean = false;\n  private hasCompleted: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    const index = this.index++;\n    const destination = this.destination;\n    try {\n      const result = this.project(value, index);\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, result, value, index));\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    try {\n      const result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n      destination.next(result);\n    } catch (err) {\n      destination.error(err);\n    }\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function expand<T>(project: (value: T, index: number) => Observable<T>, concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => Observable<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: IScheduler = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: Observable<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => Observable<R>,\n              private concurrent: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      let result = tryCatch(this.project)(value, index);\n      if (result === errorObject) {\n        destination.error(errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n        this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    this.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\nexport function find<T>(predicate: (value: T, index: number) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): MonoTypeOperatorFunction<T> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\n\nexport class FindValueOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n  }\n\n  protected _next(value: T): void {\n    const { predicate, thisArg } = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../interfaces';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { Map } from '../util/Map';\nimport { FastMap } from '../util/FastMap';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T|R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject<R>();\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const {refCountSubscription, groupSubject} = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements<T>(): MonoTypeOperatorFunction<T> {\n  return function ignoreElementsOperatorFunction(source: Observable<T>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    noop();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { merge as mergeStatic } from '../observable/merge';\n\nexport { merge as mergeStatic } from '../observable/merge';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function merge<T>(concurrent?: number, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: IScheduler): OperatorFunction<T, T | T2>;\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2>;\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3>;\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: Array<ObservableInput<T> | IScheduler | number>): MonoTypeOperatorFunction<T>;\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","\nimport { ObservableInput } from '../Observable';\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap(identity as (value: T, index: number) => ObservableInput<{}>, null, concurrent);\n}","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, R>(observable: ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, I, R>(innerObservable: Observable<I>,\n                                    resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                    concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  if (typeof resultSelector === 'number') {\n    concurrent = <number>resultSelector;\n    resultSelector = null;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapToOperator(innerObservable, <any>resultSelector, concurrent));\n}\n\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nexport class MergeMapToOperator<T, I, R> implements Operator<Observable<T>, R> {\n  constructor(private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private ish: ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      const resultSelector = this.resultSelector;\n      const index = this.index++;\n      const ish = this.ish;\n      const destination = this.destination;\n\n      this.active++;\n      this._innerSub(ish, destination, resultSelector, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: ObservableInput<I>,\n                    destination: PartialObserver<I>,\n                    resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n                    value: T,\n                    index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private trySelectResult(outerValue: T, innerValue: I,\n                          outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T) => Observable<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T) => Observable<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T) => Observable<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const ish = tryCatch(this.accumulator)(this.acc, value);\n      const destination = this.destination;\n      if (ish === errorObject) {\n        destination.error(errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    this.add(subscribeToResult<T, R>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { FromObservable } from '../observable/FromObservable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T, R>(v: ObservableInput<R>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, R> ;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>> |\n                                                       ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return new FromObservable(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (next) {\n      this.add(subscribeToResult(this, next));\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    if (this.hasPrev) {\n      this.destination.next([this.prev, value]);\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../interfaces';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function publish<T, R>(selector: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../interfaces';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../interfaces';\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { IScheduler } from '../Scheduler';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: IScheduler): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, selector?: MonoTypeOperatorFunction<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, R>(bufferSize?: number, windowTime?: number, selector?: OperatorFunction<T, R>, scheduler?: IScheduler): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: IScheduler | OperatorFunction<T, R>,\n                                    scheduler?: IScheduler): UnaryFunction<Observable<T>, ConnectableObservable<R> | Observable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as Observable<R> | ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../interfaces';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = <Array<Observable<T>>>observables[0];\n    }\n\n    return source.lift.call(raceStatic<T>(source, ...observables));\n  };\n}","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): OperatorFunction<T, T[]>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index?: number) => R, seed?: R): OperatorFunction<T, R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<R> {\n    return pipe(scan<T, T | R>((acc, value, index) => {\n      return accumulator(<R>acc, value, index + 1);\n    }), takeLast(1))(source) as Observable<R>;\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { notifications, retries, retriesSubscription } = this;\n    this.notifications = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    super._unsubscribeAndRecycle();\n    this.notifications = notifications;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    const retries = tryCatch(this.notifier)(this.notifications);\n    if (retries === errorObject) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              public source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        retries = tryCatch(this.notifier)(errors);\n        if (retries === errorObject) {\n          return super.error(errorObject.e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { errors, retries, retriesSubscription } = this;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n\n    this._unsubscribeAndRecycle();\n\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: Action<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparor?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparor: (a: T, b: T) => boolean) {\n    super(destination);\n    this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n\n  checkValues() {\n    const { _a, _b, comparor } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      if (comparor) {\n        areEqual = tryCatch(comparor)(a, b);\n        if (areEqual === errorObject) {\n          this.destination.error(errorObject.e);\n        }\n      } else {\n        areEqual = a === b;\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n  }\n\n  protected _complete(): void {\n    this.parent._complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n};\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: IScheduler ): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n}\n\nfunction shareReplayOperator<T>(bufferSize?: number, windowTime?: number, scheduler?: IScheduler) {\n  let subject: ReplaySubject<T>;\n  let refCount = 0;\n  let subscription: Subscription;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n\n    return () => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && refCount === 0 && isComplete) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n};\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observer } from '../Observer';\nimport { EmptyError } from '../util/EmptyError';\nimport { TeardownLogic } from '../Subscription';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private isInnerStopped: boolean = false;\n\n  constructor(destination: Subscriber<any>,\n              notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  protected _complete() {\n    if (this.isInnerStopped) {\n      super._complete();\n    } else {\n      this.unsubscribe();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n  }\n\n  notifyComplete(): void {\n    this.isInnerStopped = true;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { ScalarObservable } from '../observable/ScalarObservable';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function startWith<T>(v1: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(v1: T, v2: T, v3: T, v4: T, v5: T, v6: T, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function startWith<T>(...array: Array<T | IScheduler>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T>(...array: Array<T | IScheduler>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len === 1) {\n      return concatStatic(new ScalarObservable<T>(<T>array[0], scheduler), source);\n    } else if (len > 1) {\n      return concatStatic(new ArrayObservable<T>(<T[]>array, scheduler), source);\n    } else {\n      return concatStatic(new EmptyObservable<T>(scheduler), source);\n    }\n  };\n}\n","import { Operator } from '../Operator';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { OperatorFunction } from '../interfaces';\nimport { Observable } from '../Observable';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<Observable<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, R>(project: (value: T, index: number) => ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I | R> {\n  return function switchMapOperatorFunction(source: Observable<T>): Observable<I | R> {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nclass SwitchMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<I>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _tryNotifyNext(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): void {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>): OperatorFunction<T, R>;\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(innerObservable: Observable<I>,\n                                     resultSelector?: (outerValue: T,\n                                                       innerValue: I,\n                                                       outerIndex: number,\n                                                       innerIndex: number) => R): OperatorFunction<T, I | R> {\n  return (source: Observable<T>) => source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\n\nclass SwitchMapToOperator<T, I, R> implements Operator<T, I> {\n  constructor(private observable: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  }\n\n  call(subscriber: Subscriber<I>, source: any): any {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapToSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<I>,\n              private inner: Observable<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n    super(destination);\n  }\n\n  protected _next(value: any) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    this.add(this.innerSubscription = subscribeToResult(this, this.inner, value, this.index++));\n  }\n\n  protected _complete() {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    const { resultSelector, destination } = this;\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  }\n\n  private tryResultSelector(outerValue: T, innerValue: I,\n                            outerIndex: number, innerIndex: number): void {\n    const { resultSelector, destination } = this;\n    let result: R;\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  constructor(destination: Subscriber<any>,\n              private notifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, notifier));\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeWhileOperator(predicate));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { PartialObserver } from '../Observer';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function tap<T>(next: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DoSubscriber<T> extends Subscriber<T> {\n\n  private safeSubscriber: Subscriber<T>;\n\n  constructor(destination: Subscriber<T>,\n              nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              error?: (e: any) => void,\n              complete?: () => void) {\n    super(destination);\n\n    const safeSubscriber = new Subscriber<T>(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n\n  protected _next(value: T): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const { safeSubscriber } = this;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<number>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private throttled: Subscription;\n  private _trailingValue: T;\n  private _hasTrailingValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.throttled) {\n      if (this._trailing) {\n        this._hasTrailingValue = true;\n        this._trailingValue = value;\n      }\n    } else {\n      const duration = this.tryDurationSelector(value);\n      if (duration) {\n        this.add(this.throttled = subscribeToResult(this, duration));\n      }\n      if (this._leading) {\n        this.destination.next(value);\n        if (this._trailing) {\n          this._hasTrailingValue = true;\n          this._trailingValue = value;\n        }\n      }\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { throttled, _trailingValue, _hasTrailingValue, _trailing } = this;\n\n    this._trailingValue = null;\n    this._hasTrailingValue = false;\n\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n  }\n\n  private _sendTrailing() {\n    const { destination, throttled, _trailing, _trailingValue, _hasTrailingValue } = this;\n    if (throttled && _trailing && _hasTrailingValue) {\n      destination.next(_trailingValue);\n      this._trailingValue = null;\n      this._hasTrailingValue = false;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n\n  notifyComplete(): void {\n    this._sendTrailing();\n    this._unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: IScheduler = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: IScheduler,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\n\nexport function timeInterval<T>(scheduler: IScheduler = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => source.lift(new TimeIntervalOperator(scheduler));\n}\n\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {\n\n  }\n};\n\nclass TimeIntervalOperator<T> implements Operator<T, TimeInterval<T>> {\n  constructor(private scheduler: IScheduler) {\n\n  }\n\n  call(observer: Subscriber<TimeInterval<T>>, source: any): any {\n    return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeIntervalSubscriber<T> extends Subscriber<T> {\n  private lastTime: number = 0;\n\n  constructor(destination: Subscriber<TimeInterval<T>>, private scheduler: IScheduler) {\n    super(destination);\n\n    this.lastTime = scheduler.now();\n  }\n\n  protected _next(value: T) {\n    let now = this.scheduler.now();\n    let span = now - this.lastTime;\n    this.lastTime = now;\n\n    this.destination.next(new TimeInterval(value, span));\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: IScheduler = async): MonoTypeOperatorFunction<T> {\n  const absoluteTimeout = isDate(due);\n  const waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n  return (source: Observable<T>) => source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError()));\n}\n\nclass TimeoutOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutSubscriber<T>(\n      subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutSubscriber<T> extends Subscriber<T> {\n\n  private action: Action<TimeoutSubscriber<T>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private scheduler: IScheduler,\n              private errorInstance: TimeoutError) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T>(subscriber: TimeoutSubscriber<T>): void {\n    subscriber.error(subscriber.errorInstance);\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutSubscriber<T>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutSubscriber<T>>> this.scheduler.schedule(\n        TimeoutSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.errorInstance = null;\n  }\n}\n","import { Action } from '../scheduler/Action';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { TeardownLogic } from '../Subscription';\nimport { Observable, ObservableInput } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T>(due: number | Date, withObservable: ObservableInput<T>, scheduler?: IScheduler): MonoTypeOperatorFunction<T>;\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: IScheduler): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: IScheduler = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: Action<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: IScheduler) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<Action<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<Action<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\nimport { map } from './map';\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: IScheduler = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n};\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../interfaces';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, []) as OperatorFunction<T, T[]>;\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Action } from '../scheduler/Action';\nimport { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Same as example above but with maxWindowCount instead of take</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000, 2) // each window has still at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: IScheduler): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: IScheduler = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: IScheduler;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: Action<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: IScheduler) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: Action<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: Action<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n\n      const { closingSelector } = this;\n      const closingNotifier = tryCatch(closingSelector)(innerValue);\n\n      if (closingNotifier === errorObject) {\n        return this.error(errorObject.e);\n      } else {\n        const window = new Subject<T>();\n        const subscription = new Subscription();\n        const context = { window, subscription };\n        this.contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          (<any> innerSubscription).context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n\n      }\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    const closingNotifier = tryCatch(this.closingSelector)();\n    if (closingNotifier === errorObject) {\n      const err = errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function withLatestFrom<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function withLatestFrom<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function withLatestFrom<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function withLatestFrom<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function withLatestFrom<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}\n\n/* tslint:disable:max-line-length */\nexport function zipStatic<T, R>(v1: ObservableInput<T>, project: (v1: T) => R): Observable<R>;\nexport function zipStatic<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\nexport function zipStatic<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zipStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zipStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zipStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zipStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zipStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zipStatic<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zipStatic<R>(array: ObservableInput<any>[]): Observable<R>;\nexport function zipStatic<T, R>(array: ObservableInput<T>[], project: (...values: Array<T>) => R): Observable<R>;\nexport function zipStatic<R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): Observable<R>;\n\nexport function zipStatic<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zipStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zipStatic<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const project = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof project === 'function') {\n    observables.pop();\n  }\n  return new ArrayObservable(observables).lift(new ZipOperator(project));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  project: (...values: Array<any>) => R;\n\n  constructor(project?: (...values: Array<any>) => R) {\n    this.project = project;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private project: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              project?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.project = (typeof project === 'function') ? project : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        this.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.project) {\n      this._tryProject(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { ZipOperator } from './zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\n\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: Action<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrame } from '../util/AnimationFrame';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: AnimationFrameAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = AnimationFrame.requestAnimationFrame(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      AnimationFrame.cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: AsapAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { root } from '../util/root';\nimport { Action } from './Action';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: AsyncAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n     }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    return root.clearInterval(id) && undefined || undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { AsyncAction } from './AsyncAction';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   */\n  public scheduled: any = undefined;\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: QueueAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: VirtualAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ColdObservable<T> extends Observable<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  logSubscribedFrame: () => number;\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[],\n              scheduler: Scheduler) {\n    super(function (this: ColdObservable<T>, subscriber: Subscriber<any>) {\n      const observable: ColdObservable<T> = this;\n      const index = observable.logSubscribedFrame();\n      subscriber.add(new Subscription(() => {\n        observable.logUnsubscribedFrame(index);\n      }));\n      observable.scheduleMessages(subscriber);\n      return subscriber;\n    });\n    this.scheduler = scheduler;\n  }\n\n  scheduleMessages(subscriber: Subscriber<any>) {\n    const messagesLength = this.messages.length;\n    for (let i = 0; i < messagesLength; i++) {\n      const message = this.messages[i];\n      subscriber.add(\n        this.scheduler.schedule(({message, subscriber}) => { message.notification.observe(subscriber); },\n          message.frame,\n          {message, subscriber})\n      );\n    }\n  }\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n","import { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class HotObservable<T> extends Subject<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  logSubscribedFrame: () => number;\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[],\n              scheduler: Scheduler) {\n    super();\n    this.scheduler = scheduler;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    const subject: HotObservable<T> = this;\n    const index = subject.logSubscribedFrame();\n    subscriber.add(new Subscription(() => {\n      subject.logUnsubscribedFrame(index);\n    }));\n    return super._subscribe(subscriber);\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n    /* tslint:disable:no-var-keyword */\n    for (var i = 0; i < messagesLength; i++) {\n      (() => {\n        var message = subject.messages[i];\n   /* tslint:enable */\n        subject.scheduler.schedule(\n          () => { message.notification.observe(subject); },\n          message.frame\n        );\n      })();\n    }\n  }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n","export class SubscriptionLog {\n  constructor(public subscribedFrame: number,\n              public unsubscribedFrame: number = Number.POSITIVE_INFINITY) {\n  }\n}","import { Scheduler } from '../Scheduler';\nimport { SubscriptionLog } from './SubscriptionLog';\n\nexport class SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n\n  logSubscribedFrame(): number {\n    this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n    return this.subscriptions.length - 1;\n  }\n\n  logUnsubscribedFrame(index: number) {\n    const subscriptionLogs = this.subscriptions;\n    const oldSubscriptionLog = subscriptionLogs[index];\n    subscriptionLogs[index] = new SubscriptionLog(\n      oldSubscriptionLog.subscribedFrame,\n      this.scheduler.now()\n    );\n  }\n}\n","import { Observable } from '../Observable';\nimport { Notification } from '../Notification';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { Subscription } from '../Subscription';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\n\nconst defaultMaxFrame: number = 750;\n\ninterface FlushableTest {\n  ready: boolean;\n  actual?: any[];\n  expected?: any[];\n}\n\nexport type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;\nexport type subscriptionLogsToBeFn = (marbles: string | string[]) => void;\n\nexport class TestScheduler extends VirtualTimeScheduler {\n  private hotObservables: HotObservable<any>[] = [];\n  private coldObservables: ColdObservable<any>[] = [];\n  private flushTests: FlushableTest[] = [];\n\n  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {\n    super(VirtualAction, defaultMaxFrame);\n  }\n\n  createTime(marbles: string): number {\n    const indexOf: number = marbles.indexOf('|');\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n    return indexOf * TestScheduler.frameTimeFactor;\n  }\n\n  createColdObservable<T>(marbles: string, values?: any, error?: any): ColdObservable<T> {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error);\n    const cold = new ColdObservable<T>(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  }\n\n  createHotObservable<T>(marbles: string, values?: any, error?: any): HotObservable<T> {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error);\n    const subject = new HotObservable<T>(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  }\n\n  private materializeInnerObservable(observable: Observable<any>,\n                                     outerFrame: number): TestMessage[] {\n    const messages: TestMessage[] = [];\n    observable.subscribe((value) => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createNext(value) });\n    }, (err) => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createError(err) });\n    }, () => {\n      messages.push({ frame: this.frame - outerFrame, notification: Notification.createComplete() });\n    });\n    return messages;\n  }\n\n  expectObservable(observable: Observable<any>,\n                   unsubscriptionMarbles: string = null): ({ toBe: observableToBeFn }) {\n    const actual: TestMessage[] = [];\n    const flushTest: FlushableTest = { actual, ready: false };\n    const unsubscriptionFrame = TestScheduler\n      .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n    let subscription: Subscription;\n\n    this.schedule(() => {\n      subscription = observable.subscribe(x => {\n        let value = x;\n        // Support Observable-of-Observables\n        if (x instanceof Observable) {\n          value = this.materializeInnerObservable(value, this.frame);\n        }\n        actual.push({ frame: this.frame, notification: Notification.createNext(value) });\n      }, (err) => {\n        actual.push({ frame: this.frame, notification: Notification.createError(err) });\n      }, () => {\n        actual.push({ frame: this.frame, notification: Notification.createComplete() });\n      });\n    }, 0);\n\n    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n      this.schedule(() => subscription.unsubscribe(), unsubscriptionFrame);\n    }\n\n    this.flushTests.push(flushTest);\n\n    return {\n      toBe(marbles: string, values?: any, errorValue?: any) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n      }\n    };\n  }\n\n  expectSubscriptions(actualSubscriptionLogs: SubscriptionLog[]): ({ toBe: subscriptionLogsToBeFn }) {\n    const flushTest: FlushableTest = { actual: actualSubscriptionLogs, ready: false };\n    this.flushTests.push(flushTest);\n    return {\n      toBe(marbles: string | string[]) {\n        const marblesArray: string[] = (typeof marbles === 'string') ? [marbles] : marbles;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray.map(marbles =>\n          TestScheduler.parseMarblesAsSubscriptions(marbles)\n        );\n      }\n    };\n  }\n\n  flush() {\n    const hotObservables = this.hotObservables;\n    while (hotObservables.length > 0) {\n      hotObservables.shift().setup();\n    }\n\n    super.flush();\n    const readyFlushTests = this.flushTests.filter(test => test.ready);\n    while (readyFlushTests.length > 0) {\n      const test = readyFlushTests.shift();\n      this.assertDeepEqual(test.actual, test.expected);\n    }\n  }\n\n  static parseMarblesAsSubscriptions(marbles: string): SubscriptionLog {\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog(Number.POSITIVE_INFINITY);\n    }\n    const len = marbles.length;\n    let groupStart = -1;\n    let subscriptionFrame = Number.POSITIVE_INFINITY;\n    let unsubscriptionFrame = Number.POSITIVE_INFINITY;\n\n    for (let i = 0; i < len; i++) {\n      const frame = i * this.frameTimeFactor;\n      const c = marbles[i];\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n        case '(':\n          groupStart = frame;\n          break;\n        case ')':\n          groupStart = -1;\n          break;\n        case '^':\n          if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' +\n              'subscription marble diagram. There can only be one.');\n          }\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        case '!':\n          if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' +\n              'subscription marble diagram. There can only be one.');\n          }\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        default:\n          throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n            'subscription marble diagram. Found instead \\'' + c + '\\'.');\n      }\n    }\n\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  }\n\n  static parseMarbles(marbles: string,\n                      values?: any,\n                      errorValue?: any,\n                      materializeInnerObservables: boolean = false): TestMessage[] {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' +\n        'unsubscription marker \"!\"');\n    }\n    const len = marbles.length;\n    const testMessages: TestMessage[] = [];\n    const subIndex = marbles.indexOf('^');\n    const frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n    const getValue = typeof values !== 'object' ?\n      (x: any) => x :\n      (x: any) => {\n        // Support Observable-of-Observables\n        if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n          return values[x].messages;\n        }\n        return values[x];\n      };\n    let groupStart = -1;\n\n    for (let i = 0; i < len; i++) {\n      const frame = i * this.frameTimeFactor + frameOffset;\n      let notification: Notification<any>;\n      const c = marbles[i];\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n        case '(':\n          groupStart = frame;\n          break;\n        case ')':\n          groupStart = -1;\n          break;\n        case '|':\n          notification = Notification.createComplete();\n          break;\n        case '^':\n          break;\n        case '#':\n          notification = Notification.createError(errorValue || 'error');\n          break;\n        default:\n          notification = Notification.createNext(getValue(c));\n          break;\n      }\n\n      if (notification) {\n        testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification });\n      }\n    }\n    return testMessages;\n  }\n}\n","import {  root  } from './root';\n\nexport class RequestAnimationFrameDefinition {\n  cancelAnimationFrame: (handle: number) => void;\n  requestAnimationFrame: (cb: () => void) => number;\n  constructor(root: any) {\n    if (root.requestAnimationFrame) {\n      this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n    } else if (root.mozRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n    } else if (root.webkitRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n    } else if (root.msRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n    } else if (root.oRequestAnimationFrame) {\n      this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n      this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n    } else {\n      this.cancelAnimationFrame = root.clearTimeout.bind(root);\n      this.requestAnimationFrame = function(cb) { return root.setTimeout(cb, 1000 / 60); };\n    }\n  }\n}\n\nexport const AnimationFrame = new RequestAnimationFrameDefinition(root);\n","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\nimport {  root  } from './root';\n\nexport class ImmediateDefinition {\n  setImmediate: (cb: () => void) => number;\n\n  clearImmediate: (handle: number) => void;\n\n  private identify(o: any): string {\n    return this.root.Object.prototype.toString.call(o);\n  }\n\n  tasksByHandle: any;\n\n  nextHandle: number;\n\n  currentlyRunningATask: boolean;\n\n  constructor(private root: any) {\n    if (root.setImmediate && typeof root.setImmediate === 'function') {\n      this.setImmediate = root.setImmediate.bind(root);\n      this.clearImmediate = root.clearImmediate.bind(root);\n    } else {\n      this.nextHandle = 1;\n      this.tasksByHandle = {};\n      this.currentlyRunningATask = false;\n\n      // Don't get fooled by e.g. browserify environments.\n      if (this.canUseProcessNextTick()) {\n        // For Node.js before 0.9\n        this.setImmediate = this.createProcessNextTickSetImmediate();\n      } else if (this.canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        this.setImmediate = this.createPostMessageSetImmediate();\n      } else if (this.canUseMessageChannel()) {\n        // For web workers, where supported\n        this.setImmediate = this.createMessageChannelSetImmediate();\n      } else if (this.canUseReadyStateChange()) {\n        // For IE 6–8\n        this.setImmediate = this.createReadyStateChangeSetImmediate();\n      } else {\n        // For older browsers\n        this.setImmediate = this.createSetTimeoutSetImmediate();\n      }\n\n      let ci = function clearImmediate(handle: any) {\n        delete (<any>clearImmediate).instance.tasksByHandle[handle];\n      };\n\n      (<any>ci).instance = this;\n\n      this.clearImmediate = ci;\n    }\n  }\n\n  canUseProcessNextTick() {\n    return this.identify(this.root.process) === '[object process]';\n  }\n\n  canUseMessageChannel() {\n    return Boolean(this.root.MessageChannel);\n  }\n\n  canUseReadyStateChange() {\n    const document = this.root.document;\n    return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n  }\n\n  canUsePostMessage() {\n    const root = this.root;\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `root.postMessage` means something completely different and can't be used for this purpose.\n    if (root.postMessage && !root.importScripts) {\n      let postMessageIsAsynchronous = true;\n      let oldOnMessage = root.onmessage;\n      root.onmessage = function() {\n        postMessageIsAsynchronous = false;\n      };\n      root.postMessage('', '*');\n      root.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n\n    return false;\n  }\n\n  // This function accepts the same arguments as setImmediate, but\n  // returns a function that requires no arguments.\n  partiallyApplied(handler: any, ...args: any[]) {\n    let fn = function result () {\n      const { handler, args } = <any>result;\n      if (typeof handler === 'function') {\n        handler.apply(undefined, args);\n      } else {\n        (new Function('' + handler))();\n      }\n    };\n\n    (<any>fn).handler = handler;\n    (<any>fn).args = args;\n\n    return fn;\n  }\n\n  addFromSetImmediateArguments(args: any[]) {\n    this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n    return this.nextHandle++;\n  }\n\n  createProcessNextTickSetImmediate() {\n    let fn = function setImmediate() {\n      const { instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createPostMessageSetImmediate() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    const root = this.root;\n\n    let messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n    let onGlobalMessage = function globalMessageHandler(event: any) {\n      const instance = (<any>globalMessageHandler).instance;\n      if (event.source === root &&\n        typeof event.data === 'string' &&\n        event.data.indexOf(messagePrefix) === 0) {\n        instance.runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n    (<any>onGlobalMessage).instance = this;\n\n    root.addEventListener('message', onGlobalMessage, false);\n\n    let fn = function setImmediate() {\n      const { messagePrefix, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.postMessage(messagePrefix + handle, '*');\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n    (<any>fn).messagePrefix = messagePrefix;\n\n    return fn;\n  }\n\n  runIfPresent(handle: any) {\n    // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (this.currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // 'too much recursion' error.\n      this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n    } else {\n      let task = this.tasksByHandle[handle];\n      if (task) {\n        this.currentlyRunningATask = true;\n        try {\n          task();\n        } finally {\n          this.clearImmediate(handle);\n          this.currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  createMessageChannelSetImmediate() {\n    let channel = new this.root.MessageChannel();\n    channel.port1.onmessage = (event: any) => {\n      let handle = event.data;\n      this.runIfPresent(handle);\n    };\n\n    let fn = function setImmediate() {\n      const { channel, instance } = (<any>setImmediate);\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      channel.port2.postMessage(handle);\n      return handle;\n    };\n\n    (<any>fn).channel = channel;\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createReadyStateChangeSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      const root = instance.root;\n      const doc = root.document;\n      const html = doc.documentElement;\n\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      let script = doc.createElement('script');\n      script.onreadystatechange = () => {\n        instance.runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n      html.appendChild(script);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n\n  createSetTimeoutSetImmediate() {\n    let fn = function setImmediate() {\n      const instance = (<any>setImmediate).instance;\n      let handle = instance.addFromSetImmediateArguments(arguments);\n      instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n      return handle;\n    };\n\n    (<any>fn).instance = this;\n\n    return fn;\n  }\n}\nexport const Immediate = new ImmediateDefinition(root);\n","import { root } from './root';\nimport { MapPolyfill } from './MapPolyfill';\n\nexport const Map = root.Map || (() => MapPolyfill)();","export class MapPolyfill {\n  public size = 0;\n  private _values: any[] = [];\n  private _keys: any[] = [];\n\n  get(key: any) {\n    const i = this._keys.indexOf(key);\n    return i === -1 ? undefined : this._values[i];\n  }\n\n  set(key: any, value: any) {\n    const i = this._keys.indexOf(key);\n    if (i === -1) {\n      this._keys.push(key);\n      this._values.push(value);\n      this.size++;\n    } else {\n      this._values[i] = value;\n    }\n    return this;\n  }\n\n  delete(key: any): boolean {\n    const i = this._keys.indexOf(key);\n    if (i === -1) { return false; }\n    this._values.splice(i, 1);\n    this._keys.splice(i, 1);\n    this.size--;\n    return true;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this.size = 0;\n  }\n\n  forEach(cb: Function, thisArg: any): void {\n    for (let i = 0; i < this.size; i++) {\n      cb.call(thisArg, this._values[i], this._keys[i]);\n    }\n  }\n}","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { root } from './root';\n\nexport interface ISetCtor {\n  new<T>(): ISet<T>;\n}\n\nexport interface ISet<T> {\n  add(value: T): void;\n  has(value: T): boolean;\n  size: number;\n  clear(): void;\n}\n\nexport function minimalSetImpl<T>(): ISetCtor {\n  // THIS IS NOT a full impl of Set, this is just the minimum\n  // bits of functionality we need for this library.\n  return class MinimalSet<T> implements ISet<T> {\n    private _values: T[] = [];\n\n    add(value: T): void {\n      if (!this.has(value)) {\n        this._values.push(value);\n      }\n    }\n\n    has(value: T): boolean {\n      return this._values.indexOf(value) !== -1;\n    }\n\n    get size(): number {\n      return this._values.length;\n    }\n\n    clear(): void {\n      this._values.length = 0;\n    }\n  };\n}\n\nexport const Set: ISetCtor = root.Set || minimalSetImpl();","/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport class TimeoutError extends Error {\r\n  constructor() {\r\n    const err: any = super('Timeout has occurred');\r\n    (<any> this).name = err.name = 'TimeoutError';\r\n    (<any> this).stack = err.stack;\r\n    (<any> this).message = err.message;\r\n  }\r\n}\r\n","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  for (let i = 0, len = baseCtors.length; i < len; i++) {\n    const baseCtor = baseCtors[i];\n    const propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n    for (let j = 0, len2 = propertyKeys.length; j < len2; j++) {\n      const name = propertyKeys[j];\n      derivedCtor.prototype[name] = baseCtor.prototype[name];\n    }\n  }\n}","import { root } from './root';\n\nexport function assignImpl(target: Object, ...sources: Object[]) {\n  const len = sources.length;\n  for (let i = 0; i < len; i++) {\n    const source = sources[i];\n    for (let k in source) {\n      if (source.hasOwnProperty(k)) {\n        target[k] = source[k];\n      }\n    }\n  }\n  return target;\n};\n\nexport function getAssign(root: any) {\n  return root.Object.assign || assignImpl;\n}\n\nexport const assign = getAssign(root);","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","export function identity<T>(x: T): T {\n  return x;\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { isArray } from '../util/isArray';\n\nexport function isNumeric(val: any): val is number {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n};\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","import { createDecorator } from 'vue-class-component';\nimport { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\nexport var State = createBindingHelper('computed', mapState);\nexport var Getter = createBindingHelper('computed', mapGetters);\nexport var Action = createBindingHelper('methods', mapActions);\nexport var Mutation = createBindingHelper('methods', mapMutations);\nexport function namespace(namespace, helper) {\n    function createNamespacedHelper(helper) {\n        function namespacedHelper(a, b) {\n            if (typeof b === 'string') {\n                var key = b;\n                var proto = a;\n                return helper(key, { namespace: namespace })(proto, key);\n            }\n            var type = a;\n            var options = merge(b || {}, { namespace: namespace });\n            return helper(type, options);\n        }\n        return namespacedHelper;\n    }\n    if (helper) {\n        console.warn('[vuex-class] passing the 2nd argument to `namespace` function is deprecated. pass only namespace string instead.');\n        return createNamespacedHelper(helper);\n    }\n    return {\n        State: createNamespacedHelper(State),\n        Getter: createNamespacedHelper(Getter),\n        Mutation: createNamespacedHelper(Mutation),\n        Action: createNamespacedHelper(Action)\n    };\n}\nfunction createBindingHelper(bindTo, mapFn) {\n    function makeDecorator(map, namespace) {\n        return createDecorator(function (componentOptions, key) {\n            if (!componentOptions[bindTo]) {\n                componentOptions[bindTo] = {};\n            }\n            var mapObject = (_a = {}, _a[key] = map, _a);\n            componentOptions[bindTo][key] = namespace !== undefined\n                ? mapFn(namespace, mapObject)[key]\n                : mapFn(mapObject)[key];\n            var _a;\n        });\n    }\n    function helper(a, b) {\n        if (typeof b === 'string') {\n            var key = b;\n            var proto = a;\n            return makeDecorator(key, undefined)(proto, key);\n        }\n        var namespace = extractNamespace(b);\n        var type = a;\n        return makeDecorator(type, namespace);\n    }\n    return helper;\n}\nfunction extractNamespace(options) {\n    var n = options && options.namespace;\n    if (typeof n !== 'string') {\n        return undefined;\n    }\n    if (n[n.length - 1] !== '/') {\n        return n + '/';\n    }\n    return n;\n}\nfunction merge(a, b) {\n    var res = {};\n    [a, b].forEach(function (obj) {\n        Object.keys(obj).forEach(function (key) {\n            res[key] = obj[key];\n        });\n    });\n    return res;\n}\n","/**\n  * vue-class-component v8.0.0-rc.1\n  * (c) 2015-present Evan You\n  * @license MIT\n  */\nimport { ref, proxyRefs } from 'vue';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction defineGetter(obj, key, getter) {\n  Object.defineProperty(obj, key, {\n    get: getter,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nfunction defineProxy(proxy, key, target) {\n  Object.defineProperty(proxy, key, {\n    get: function get() {\n      return target[key].value;\n    },\n    set: function set(value) {\n      target[key].value = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction getSuper(Ctor) {\n  var superProto = Object.getPrototypeOf(Ctor.prototype);\n\n  if (!superProto) {\n    return undefined;\n  }\n\n  return superProto.constructor;\n}\n\nfunction getOwn(value, key) {\n  return value.hasOwnProperty(key) ? value[key] : undefined;\n}\n\nvar VueImpl = /*#__PURE__*/function () {\n  function VueImpl(props, ctx) {\n    var _this = this;\n\n    _classCallCheck(this, VueImpl);\n\n    defineGetter(this, '$props', function () {\n      return props;\n    });\n    defineGetter(this, '$attrs', function () {\n      return ctx.attrs;\n    });\n    defineGetter(this, '$slots', function () {\n      return ctx.slots;\n    });\n    defineGetter(this, '$emit', function () {\n      return ctx.emit;\n    });\n    Object.keys(props).forEach(function (key) {\n      Object.defineProperty(_this, key, {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: props[key]\n      });\n    });\n  }\n\n  _createClass(VueImpl, null, [{\n    key: \"registerHooks\",\n    value: function registerHooks(keys) {\n      var _this$__h;\n\n      (_this$__h = this.__h).push.apply(_this$__h, _toConsumableArray(keys));\n    }\n  }, {\n    key: \"with\",\n    value: function _with(Props) {\n      var propsMeta = new Props();\n      var props = {};\n      Object.keys(propsMeta).forEach(function (key) {\n        var meta = propsMeta[key];\n        props[key] = meta !== null && meta !== void 0 ? meta : null;\n      });\n\n      var PropsMixin = /*#__PURE__*/function (_this2) {\n        _inherits(PropsMixin, _this2);\n\n        var _super = _createSuper(PropsMixin);\n\n        function PropsMixin() {\n          _classCallCheck(this, PropsMixin);\n\n          return _super.apply(this, arguments);\n        }\n\n        return PropsMixin;\n      }(this);\n\n      PropsMixin.__b = {\n        props: props\n      };\n      return PropsMixin;\n    }\n  }, {\n    key: \"__vccOpts\",\n    get: function get() {\n      // Early return if `this` is base class as it does not have any options\n      if (this === Vue) {\n        return {};\n      }\n\n      var Ctor = this;\n      var cache = getOwn(Ctor, '__c');\n\n      if (cache) {\n        return cache;\n      } // If the options are provided via decorator use it as a base\n\n\n      var options = _objectSpread2({}, getOwn(Ctor, '__o'));\n\n      Ctor.__c = options; // Handle super class options\n\n      var Super = getSuper(Ctor);\n\n      if (Super) {\n        options[\"extends\"] = Super.__vccOpts;\n      } // Inject base options as a mixin\n\n\n      var base = getOwn(Ctor, '__b');\n\n      if (base) {\n        options.mixins = options.mixins || [];\n        options.mixins.unshift(base);\n      }\n\n      options.methods = _objectSpread2({}, options.methods);\n      options.computed = _objectSpread2({}, options.computed);\n      var proto = Ctor.prototype;\n      Object.getOwnPropertyNames(proto).forEach(function (key) {\n        if (key === 'constructor') {\n          return;\n        } // hooks\n\n\n        if (Ctor.__h.indexOf(key) > -1) {\n          options[key] = proto[key];\n          return;\n        }\n\n        var descriptor = Object.getOwnPropertyDescriptor(proto, key); // methods\n\n        if (typeof descriptor.value === 'function') {\n          options.methods[key] = descriptor.value;\n          return;\n        } // computed properties\n\n\n        if (descriptor.get || descriptor.set) {\n          options.computed[key] = {\n            get: descriptor.get,\n            set: descriptor.set\n          };\n          return;\n        }\n      });\n\n      options.setup = function (props, ctx) {\n        var _promise;\n\n        var data = new Ctor(props, ctx);\n        var dataKeys = Object.keys(data);\n        var plainData = {};\n        var promise = null; // Initialize reactive data and convert constructor `this` to a proxy\n\n        dataKeys.forEach(function (key) {\n          // Skip if the value is undefined not to make it reactive.\n          // If the value has `__s`, it's a value from `setup` helper, proceed it later.\n          if (data[key] === undefined || data[key] && data[key].__s) {\n            return;\n          }\n\n          plainData[key] = ref(data[key]);\n          defineProxy(data, key, plainData);\n        }); // Invoke composition functions\n\n        dataKeys.forEach(function (key) {\n          if (data[key] && data[key].__s) {\n            var setupState = data[key].__s();\n\n            if (setupState instanceof Promise) {\n              if (!promise) {\n                promise = Promise.resolve(plainData);\n              }\n\n              promise = promise.then(function () {\n                return setupState.then(function (value) {\n                  plainData[key] = proxyRefs(value);\n                  return plainData;\n                });\n              });\n            } else {\n              plainData[key] = proxyRefs(setupState);\n            }\n          }\n        });\n        return (_promise = promise) !== null && _promise !== void 0 ? _promise : plainData;\n      };\n\n      var decorators = getOwn(Ctor, '__d');\n\n      if (decorators) {\n        decorators.forEach(function (fn) {\n          return fn(options);\n        });\n      } // from Vue Loader\n\n\n      var injections = ['render', 'ssrRender', '__file', '__cssModules', '__scopeId', '__hmrId'];\n      injections.forEach(function (key) {\n        if (Ctor[key]) {\n          options[key] = Ctor[key];\n        }\n      });\n      return options;\n    }\n  }]);\n\n  return VueImpl;\n}();\n\nVueImpl.__h = ['data', 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUnmount', 'unmounted', 'beforeUpdate', 'updated', 'activated', 'deactivated', 'render', 'errorCaptured', 'serverPrefetch'];\nvar Vue = VueImpl;\n\nfunction Options(options) {\n  return function (Component) {\n    Component.__o = options;\n    return Component;\n  };\n}\nfunction createDecorator(factory) {\n  return function (target, key, index) {\n    var Ctor = typeof target === 'function' ? target : target.constructor;\n\n    if (!Ctor.__d) {\n      Ctor.__d = [];\n    }\n\n    if (typeof index !== 'number') {\n      index = undefined;\n    }\n\n    Ctor.__d.push(function (options) {\n      return factory(options, key, index);\n    });\n  };\n}\nfunction mixins() {\n  for (var _len = arguments.length, Ctors = new Array(_len), _key = 0; _key < _len; _key++) {\n    Ctors[_key] = arguments[_key];\n  }\n\n  var _a;\n\n  return _a = /*#__PURE__*/function (_Vue) {\n    _inherits(MixedVue, _Vue);\n\n    var _super = _createSuper(MixedVue);\n\n    function MixedVue() {\n      var _this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _classCallCheck(this, MixedVue);\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      Ctors.forEach(function (Ctor) {\n        var data = _construct(Ctor, args);\n\n        Object.keys(data).forEach(function (key) {\n          _this[key] = data[key];\n        });\n      });\n      return _this;\n    }\n\n    return MixedVue;\n  }(Vue), _a.__b = {\n    mixins: Ctors.map(function (Ctor) {\n      return Ctor.__vccOpts;\n    })\n  }, _a;\n}\nfunction setup(setupFn) {\n  // Hack to delay the invocation of setup function.\n  // Will be called after dealing with class properties.\n  return {\n    __s: setupFn\n  };\n}\n\n// Actual implementation\nfunction prop(options) {\n  return options;\n}\n\nexport { Options, Vue, createDecorator, mixins, prop, setup };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n","export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n","let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n","import { HOOK_PLUGIN_SETTINGS_SET } from './const.js';\nimport { now } from './time.js';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n","import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env.js';\nimport { HOOK_SETUP } from './const.js';\nimport { ApiProxy } from './proxy.js';\nexport * from './api/index.js';\nexport * from './plugin.js';\nexport * from './time.js';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n","/*!\n * vuex v4.1.0\n * (c) 2022 Evan You\n * @license MIT\n */\nimport { inject, effectScope, reactive, watch, computed } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nvar storeKey = 'store';\n\nfunction useStore (key) {\n  if ( key === void 0 ) key = null;\n\n  return inject(key !== null ? key : storeKey)\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\nfunction find (list, f) {\n  return list.filter(f)[0]\n}\n\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\nfunction deepCopy (obj, cache) {\n  if ( cache === void 0 ) cache = [];\n\n  // just return if obj is immutable value\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  // if obj is hit, it is in circular structure\n  var hit = find(cache, function (c) { return c.original === obj; });\n  if (hit) {\n    return hit.copy\n  }\n\n  var copy = Array.isArray(obj) ? [] : {};\n  // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n  cache.push({\n    original: obj,\n    copy: copy\n  });\n\n  Object.keys(obj).forEach(function (key) {\n    copy[key] = deepCopy(obj[key], cache);\n  });\n\n  return copy\n}\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nfunction partial (fn, arg) {\n  return function () {\n    return fn(arg)\n  }\n}\n\nfunction genericSubscribe (fn, subs, options) {\n  if (subs.indexOf(fn) < 0) {\n    options && options.prepend\n      ? subs.unshift(fn)\n      : subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset state\n  resetStoreState(store, state, hot);\n}\n\nfunction resetStoreState (store, state, hot) {\n  var oldState = store._state;\n  var oldScope = store._scope;\n\n  // bind store public getters\n  store.getters = {};\n  // reset local getters cache\n  store._makeLocalGettersCache = Object.create(null);\n  var wrappedGetters = store._wrappedGetters;\n  var computedObj = {};\n  var computedCache = {};\n\n  // create a new effect scope and create computed object inside it to avoid\n  // getters (computed) getting destroyed on component unmount.\n  var scope = effectScope(true);\n\n  scope.run(function () {\n    forEachValue(wrappedGetters, function (fn, key) {\n      // use computed to leverage its lazy-caching mechanism\n      // direct inline function use will lead to closure preserving oldState.\n      // using partial to return function with only arguments preserved in closure environment.\n      computedObj[key] = partial(fn, store);\n      computedCache[key] = computed(function () { return computedObj[key](); });\n      Object.defineProperty(store.getters, key, {\n        get: function () { return computedCache[key].value; },\n        enumerable: true // for local getters\n      });\n    });\n  });\n\n  store._state = reactive({\n    data: state\n  });\n\n  // register the newly created effect scope to the store so that we can\n  // dispose the effects when this method runs again in the future.\n  store._scope = scope;\n\n  // enable strict mode for new state\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldState) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldState.data = null;\n      });\n    }\n  }\n\n  // dispose previously registered effect scope if there is one.\n  if (oldScope) {\n    oldScope.stop();\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    if (store._modulesNamespaceMap[namespace] && (process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] duplicate namespace \" + namespace + \" for the namespaced module \" + (path.join('/'))));\n    }\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      if ((process.env.NODE_ENV !== 'production')) {\n        if (moduleName in parentState) {\n          console.warn(\n            (\"[vuex] state field \\\"\" + moduleName + \"\\\" was overridden by a module with the same name at \\\"\" + (path.join('.')) + \"\\\"\")\n          );\n        }\n      }\n      parentState[moduleName] = module.state;\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ((process.env.NODE_ENV !== 'production') && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ((process.env.NODE_ENV !== 'production') && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by state update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  if (!store._makeLocalGettersCache[namespace]) {\n    var gettersProxy = {};\n    var splitPos = namespace.length;\n    Object.keys(store.getters).forEach(function (type) {\n      // skip if the target getter is not match this namespace\n      if (type.slice(0, splitPos) !== namespace) { return }\n\n      // extract local getter type\n      var localType = type.slice(splitPos);\n\n      // Add a port to the getters proxy.\n      // Define as getter property because\n      // we do not want to evaluate the getters in this time.\n      Object.defineProperty(gettersProxy, localType, {\n        get: function () { return store.getters[type]; },\n        enumerable: true\n      });\n    });\n    store._makeLocalGettersCache[namespace] = gettersProxy;\n  }\n\n  return store._makeLocalGettersCache[namespace]\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  watch(function () { return store._state.data; }, function () {\n    if ((process.env.NODE_ENV !== 'production')) {\n      assert(store._committing, \"do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, flush: 'sync' });\n}\n\nfunction getNestedState (state, path) {\n  return path.reduce(function (state, key) { return state[key]; }, state)\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof type === 'string', (\"expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nvar LABEL_VUEX_BINDINGS = 'vuex bindings';\nvar MUTATIONS_LAYER_ID = 'vuex:mutations';\nvar ACTIONS_LAYER_ID = 'vuex:actions';\nvar INSPECTOR_ID = 'vuex';\n\nvar actionId = 0;\n\nfunction addDevtools (app, store) {\n  setupDevtoolsPlugin(\n    {\n      id: 'org.vuejs.vuex',\n      app: app,\n      label: 'Vuex',\n      homepage: 'https://next.vuex.vuejs.org/',\n      logo: 'https://vuejs.org/images/icons/favicon-96x96.png',\n      packageName: 'vuex',\n      componentStateTypes: [LABEL_VUEX_BINDINGS]\n    },\n    function (api) {\n      api.addTimelineLayer({\n        id: MUTATIONS_LAYER_ID,\n        label: 'Vuex Mutations',\n        color: COLOR_LIME_500\n      });\n\n      api.addTimelineLayer({\n        id: ACTIONS_LAYER_ID,\n        label: 'Vuex Actions',\n        color: COLOR_LIME_500\n      });\n\n      api.addInspector({\n        id: INSPECTOR_ID,\n        label: 'Vuex',\n        icon: 'storage',\n        treeFilterPlaceholder: 'Filter stores...'\n      });\n\n      api.on.getInspectorTree(function (payload) {\n        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n          if (payload.filter) {\n            var nodes = [];\n            flattenStoreForInspectorTree(nodes, store._modules.root, payload.filter, '');\n            payload.rootNodes = nodes;\n          } else {\n            payload.rootNodes = [\n              formatStoreForInspectorTree(store._modules.root, '')\n            ];\n          }\n        }\n      });\n\n      api.on.getInspectorState(function (payload) {\n        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n          var modulePath = payload.nodeId;\n          makeLocalGetters(store, modulePath);\n          payload.state = formatStoreForInspectorState(\n            getStoreModule(store._modules, modulePath),\n            modulePath === 'root' ? store.getters : store._makeLocalGettersCache,\n            modulePath\n          );\n        }\n      });\n\n      api.on.editInspectorState(function (payload) {\n        if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n          var modulePath = payload.nodeId;\n          var path = payload.path;\n          if (modulePath !== 'root') {\n            path = modulePath.split('/').filter(Boolean).concat( path);\n          }\n          store._withCommit(function () {\n            payload.set(store._state.data, path, payload.state.value);\n          });\n        }\n      });\n\n      store.subscribe(function (mutation, state) {\n        var data = {};\n\n        if (mutation.payload) {\n          data.payload = mutation.payload;\n        }\n\n        data.state = state;\n\n        api.notifyComponentUpdate();\n        api.sendInspectorTree(INSPECTOR_ID);\n        api.sendInspectorState(INSPECTOR_ID);\n\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: Date.now(),\n            title: mutation.type,\n            data: data\n          }\n        });\n      });\n\n      store.subscribeAction({\n        before: function (action, state) {\n          var data = {};\n          if (action.payload) {\n            data.payload = action.payload;\n          }\n          action._id = actionId++;\n          action._time = Date.now();\n          data.state = state;\n\n          api.addTimelineEvent({\n            layerId: ACTIONS_LAYER_ID,\n            event: {\n              time: action._time,\n              title: action.type,\n              groupId: action._id,\n              subtitle: 'start',\n              data: data\n            }\n          });\n        },\n        after: function (action, state) {\n          var data = {};\n          var duration = Date.now() - action._time;\n          data.duration = {\n            _custom: {\n              type: 'duration',\n              display: (duration + \"ms\"),\n              tooltip: 'Action duration',\n              value: duration\n            }\n          };\n          if (action.payload) {\n            data.payload = action.payload;\n          }\n          data.state = state;\n\n          api.addTimelineEvent({\n            layerId: ACTIONS_LAYER_ID,\n            event: {\n              time: Date.now(),\n              title: action.type,\n              groupId: action._id,\n              subtitle: 'end',\n              data: data\n            }\n          });\n        }\n      });\n    }\n  );\n}\n\n// extracted from tailwind palette\nvar COLOR_LIME_500 = 0x84cc16;\nvar COLOR_DARK = 0x666666;\nvar COLOR_WHITE = 0xffffff;\n\nvar TAG_NAMESPACED = {\n  label: 'namespaced',\n  textColor: COLOR_WHITE,\n  backgroundColor: COLOR_DARK\n};\n\n/**\n * @param {string} path\n */\nfunction extractNameFromPath (path) {\n  return path && path !== 'root' ? path.split('/').slice(-2, -1)[0] : 'Root'\n}\n\n/**\n * @param {*} module\n * @return {import('@vue/devtools-api').CustomInspectorNode}\n */\nfunction formatStoreForInspectorTree (module, path) {\n  return {\n    id: path || 'root',\n    // all modules end with a `/`, we want the last segment only\n    // cart/ -> cart\n    // nested/cart/ -> cart\n    label: extractNameFromPath(path),\n    tags: module.namespaced ? [TAG_NAMESPACED] : [],\n    children: Object.keys(module._children).map(function (moduleName) { return formatStoreForInspectorTree(\n        module._children[moduleName],\n        path + moduleName + '/'\n      ); }\n    )\n  }\n}\n\n/**\n * @param {import('@vue/devtools-api').CustomInspectorNode[]} result\n * @param {*} module\n * @param {string} filter\n * @param {string} path\n */\nfunction flattenStoreForInspectorTree (result, module, filter, path) {\n  if (path.includes(filter)) {\n    result.push({\n      id: path || 'root',\n      label: path.endsWith('/') ? path.slice(0, path.length - 1) : path || 'Root',\n      tags: module.namespaced ? [TAG_NAMESPACED] : []\n    });\n  }\n  Object.keys(module._children).forEach(function (moduleName) {\n    flattenStoreForInspectorTree(result, module._children[moduleName], filter, path + moduleName + '/');\n  });\n}\n\n/**\n * @param {*} module\n * @return {import('@vue/devtools-api').CustomInspectorState}\n */\nfunction formatStoreForInspectorState (module, getters, path) {\n  getters = path === 'root' ? getters : getters[path];\n  var gettersKeys = Object.keys(getters);\n  var storeState = {\n    state: Object.keys(module.state).map(function (key) { return ({\n      key: key,\n      editable: true,\n      value: module.state[key]\n    }); })\n  };\n\n  if (gettersKeys.length) {\n    var tree = transformPathsToObjectTree(getters);\n    storeState.getters = Object.keys(tree).map(function (key) { return ({\n      key: key.endsWith('/') ? extractNameFromPath(key) : key,\n      editable: false,\n      value: canThrow(function () { return tree[key]; })\n    }); });\n  }\n\n  return storeState\n}\n\nfunction transformPathsToObjectTree (getters) {\n  var result = {};\n  Object.keys(getters).forEach(function (key) {\n    var path = key.split('/');\n    if (path.length > 1) {\n      var target = result;\n      var leafKey = path.pop();\n      path.forEach(function (p) {\n        if (!target[p]) {\n          target[p] = {\n            _custom: {\n              value: {},\n              display: p,\n              tooltip: 'Module',\n              abstract: true\n            }\n          };\n        }\n        target = target[p]._custom.value;\n      });\n      target[leafKey] = canThrow(function () { return getters[key]; });\n    } else {\n      result[key] = canThrow(function () { return getters[key]; });\n    }\n  });\n  return result\n}\n\nfunction getStoreModule (moduleMap, path) {\n  var names = path.split('/').filter(function (n) { return n; });\n  return names.reduce(\n    function (module, moduleName, i) {\n      var child = module[moduleName];\n      if (!child) {\n        throw new Error((\"Missing module \\\"\" + moduleName + \"\\\" for path \\\"\" + path + \"\\\".\"))\n      }\n      return i === names.length - 1 ? child : child._children\n    },\n    path === 'root' ? moduleMap : moduleMap.root._children\n  )\n}\n\nfunction canThrow (cb) {\n  try {\n    return cb()\n  } catch (e) {\n    return e\n  }\n}\n\n// Base data struct for store's module, package with some attribute and method\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  // Store some children item\n  this._children = Object.create(null);\n  // Store the origin module object which passed by programmer\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n\n  // Store the origin module's state\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.hasChild = function hasChild (key) {\n  return key in this._children\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  var child = parent.getChild(key);\n\n  if (!child) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.warn(\n        \"[vuex] trying to unregister module '\" + key + \"', which is \" +\n        \"not registered\"\n      );\n    }\n    return\n  }\n\n  if (!child.runtime) {\n    return\n  }\n\n  parent.removeChild(key);\n};\n\nModuleCollection.prototype.isRegistered = function isRegistered (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n\n  if (parent) {\n    return parent.hasChild(key)\n  }\n\n  return false\n};\n\nfunction update (path, targetModule, newModule) {\n  if ((process.env.NODE_ENV !== 'production')) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nfunction createStore (options) {\n  return new Store(options)\n}\n\nvar Store = function Store (options) {\n  var this$1$1 = this;\n  if ( options === void 0 ) options = {};\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n  var devtools = options.devtools;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._makeLocalGettersCache = Object.create(null);\n\n  // EffectScope instance. when registering new getters, we wrap them inside\n  // EffectScope so that getters (computed) would not be destroyed on\n  // component unmount.\n  this._scope = null;\n\n  this._devtools = devtools;\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  var state = this._modules.root.state;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store state, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreState(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1$1); });\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nStore.prototype.install = function install (app, injectKey) {\n  app.provide(injectKey || storeKey, this);\n  app.config.globalProperties.$store = this;\n\n  var useDevtools = this._devtools !== undefined\n    ? this._devtools\n    : (process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__;\n\n  if (useDevtools) {\n    addDevtools(app, this);\n  }\n};\n\nprototypeAccessors.state.get = function () {\n  return this._state.data\n};\n\nprototypeAccessors.state.set = function (v) {\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(false, \"use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n\n  this._subscribers\n    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\n    .forEach(function (sub) { return sub(mutation, this$1$1.state); });\n\n  if (\n    (process.env.NODE_ENV !== 'production') &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  try {\n    this._actionSubscribers\n      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\n      .filter(function (sub) { return sub.before; })\n      .forEach(function (sub) { return sub.before(action, this$1$1.state); });\n  } catch (e) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.warn(\"[vuex] error in before action subscribers: \");\n      console.error(e);\n    }\n  }\n\n  var result = entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload);\n\n  return new Promise(function (resolve, reject) {\n    result.then(function (res) {\n      try {\n        this$1$1._actionSubscribers\n          .filter(function (sub) { return sub.after; })\n          .forEach(function (sub) { return sub.after(action, this$1$1.state); });\n      } catch (e) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\"[vuex] error in after action subscribers: \");\n          console.error(e);\n        }\n      }\n      resolve(res);\n    }, function (error) {\n      try {\n        this$1$1._actionSubscribers\n          .filter(function (sub) { return sub.error; })\n          .forEach(function (sub) { return sub.error(action, this$1$1.state, error); });\n      } catch (e) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\"[vuex] error in error action subscribers: \");\n          console.error(e);\n        }\n      }\n      reject(error);\n    });\n  })\n};\n\nStore.prototype.subscribe = function subscribe (fn, options) {\n  return genericSubscribe(fn, this._subscribers, options)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn, options) {\n  var subs = typeof fn === 'function' ? { before: fn } : fn;\n  return genericSubscribe(subs, this._actionSubscribers, options)\n};\n\nStore.prototype.watch = function watch$1 (getter, cb, options) {\n    var this$1$1 = this;\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return watch(function () { return getter(this$1$1.state, this$1$1.getters); }, cb, Object.assign({}, options))\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1$1 = this;\n\n  this._withCommit(function () {\n    this$1$1._state.data = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreState(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1$1.state, path.slice(0, -1));\n    delete parentState[path[path.length - 1]];\n  });\n  resetStore(this);\n};\n\nStore.prototype.hasModule = function hasModule (path) {\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  return this._modules.isRegistered(path)\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\n/**\n * Reduce the code which written in Vue.js for getting the state.\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.\n * @param {Object}\n */\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(states)) {\n    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for committing the mutation\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.\n * @return {Object}\n */\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(mutations)) {\n    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // Get the commit method from store\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for getting the getters\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} getters\n * @return {Object}\n */\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(getters)) {\n    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    // The namespace has been mutated by normalizeNamespace\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if ((process.env.NODE_ENV !== 'production') && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for dispatch the action\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.\n * @return {Object}\n */\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(actions)) {\n    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // get dispatch function from store\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\n/**\n * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object\n * @param {String} namespace\n * @return {Object}\n */\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\n/**\n * Normalize the map\n * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]\n * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]\n * @param {Array|Object} map\n * @return {Object}\n */\nfunction normalizeMap (map) {\n  if (!isValidMap(map)) {\n    return []\n  }\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\n/**\n * Validate whether given map is valid or not\n * @param {*} map\n * @return {Boolean}\n */\nfunction isValidMap (map) {\n  return Array.isArray(map) || isObject(map)\n}\n\n/**\n * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.\n * @param {Function} fn\n * @return {Function}\n */\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\n/**\n * Search a special module from store by namespace. if module not exist, print error message.\n * @param {Object} store\n * @param {String} helper\n * @param {String} namespace\n * @return {Object}\n */\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if ((process.env.NODE_ENV !== 'production') && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\n// Credits: borrowed code from fcomb/redux-logger\n\nfunction createLogger (ref) {\n  if ( ref === void 0 ) ref = {};\n  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;\n  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };\n  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };\n  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };\n  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };\n  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };\n  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;\n  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;\n  var logger = ref.logger; if ( logger === void 0 ) logger = console;\n\n  return function (store) {\n    var prevState = deepCopy(store.state);\n\n    if (typeof logger === 'undefined') {\n      return\n    }\n\n    if (logMutations) {\n      store.subscribe(function (mutation, state) {\n        var nextState = deepCopy(state);\n\n        if (filter(mutation, prevState, nextState)) {\n          var formattedTime = getFormattedTime();\n          var formattedMutation = mutationTransformer(mutation);\n          var message = \"mutation \" + (mutation.type) + formattedTime;\n\n          startMessage(logger, message, collapsed);\n          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));\n          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));\n          endMessage(logger);\n        }\n\n        prevState = nextState;\n      });\n    }\n\n    if (logActions) {\n      store.subscribeAction(function (action, state) {\n        if (actionFilter(action, state)) {\n          var formattedTime = getFormattedTime();\n          var formattedAction = actionTransformer(action);\n          var message = \"action \" + (action.type) + formattedTime;\n\n          startMessage(logger, message, collapsed);\n          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);\n          endMessage(logger);\n        }\n      });\n    }\n  }\n}\n\nfunction startMessage (logger, message, collapsed) {\n  var startMessage = collapsed\n    ? logger.groupCollapsed\n    : logger.group;\n\n  // render\n  try {\n    startMessage.call(logger, message);\n  } catch (e) {\n    logger.log(message);\n  }\n}\n\nfunction endMessage (logger) {\n  try {\n    logger.groupEnd();\n  } catch (e) {\n    logger.log('—— log end ——');\n  }\n}\n\nfunction getFormattedTime () {\n  var time = new Date();\n  return (\" @ \" + (pad(time.getHours(), 2)) + \":\" + (pad(time.getMinutes(), 2)) + \":\" + (pad(time.getSeconds(), 2)) + \".\" + (pad(time.getMilliseconds(), 3)))\n}\n\nfunction repeat (str, times) {\n  return (new Array(times + 1)).join(str)\n}\n\nfunction pad (num, maxLength) {\n  return repeat('0', maxLength - num.toString().length) + num\n}\n\nvar index = {\n  version: '4.1.0',\n  Store: Store,\n  storeKey: storeKey,\n  createStore: createStore,\n  useStore: useStore,\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers,\n  createLogger: createLogger\n};\n\nexport default index;\nexport { Store, createLogger, createNamespacedHelpers, createStore, mapActions, mapGetters, mapMutations, mapState, storeKey, useStore };\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  toJSONObject\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","import FormData from 'form-data';\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport envFormData from '../env/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliant(thing) {\n  return thing && utils.isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator];\n}\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (envFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && isSpecCompliant(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        (utils.isFileList(value) || utils.endsWith(key, '[]') && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear() {\n    return Object.keys(this).forEach(this.delete.bind(this));\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.2.2\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","/*!\n  * vue-router v4.1.6\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || obj[Symbol.toStringTag] === 'Module';\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = isArray(value)\r\n            ? value.map(fn)\r\n            : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\r\n/**\r\n * Typesafe alternative to Array.isArray\r\n * https://github.com/microsoft/TypeScript/pull/48228\r\n */\r\nconst isArray = Array.isArray;\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms a URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    // TODO: move to new URL()\r\n    const hashPos = location.indexOf('#');\r\n    let searchPos = location.indexOf('?');\r\n    // the hash appears before the search, so it's not part of the search string\r\n    if (hashPos < searchPos && hashPos >= 0) {\r\n        searchPos = -1;\r\n    }\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non-case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // we stay on the same position\r\n        if (segment === '.')\r\n            continue;\r\n        // go up in the from array\r\n        if (segment === '..') {\r\n            // we can't go below zero, but we still need to increment toPosition\r\n            if (position > 1)\r\n                position--;\r\n            // continue\r\n        }\r\n        // we reached a non-relative path, we stop here\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            // ensure we use at least the last element in the toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // set up the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // set up the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor, and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided, and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/router/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/router/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates an in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    base = normalizeBase(base);\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g. `file://`) or when configuring a server to\r\n * handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname + location.search` If there is a `<base>` tag\r\n * in the `head`, its value will be ignored in favor of this parameter **but note it affects all the history.pushState()\r\n * calls**, meaning that if you use a `<base>` tag, it's `href` value **has to match this parameter** (ignoring anything\r\n * after the `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = Symbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : '');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* ErrorTypes.MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* ErrorTypes.NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* ErrorTypes.NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* ErrorTypes.NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non-greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* PathScore.Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub-segment /:a-other-:b\r\n            let subSegmentScore = 40 /* PathScore.Segment */ +\r\n                (options.sensitive ? 0.25 /* PathScore.BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* TokenType.Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* PathScore.Static */;\r\n            }\r\n            else if (token.type === 1 /* TokenType.Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* PathScore.BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* PathScore.Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* PathScore.BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* PathScore.BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* PathScore.BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* PathScore.BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* TokenType.Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* TokenType.Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (isArray(param) && !repeatable) {\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    }\r\n                    const text = isArray(param)\r\n                        ? param.join('/')\r\n                        : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        // avoid empty path when we have multiple optional params\r\n        return path || '/';\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    if (Math.abs(bScore.length - aScore.length) === 1) {\r\n        if (isLastScoreNegative(aScore))\r\n            return 1;\r\n        if (isLastScoreNegative(bScore))\r\n            return -1;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\r\n/**\r\n * This allows detecting splats at the end of a path: /home/:id(.*)*\r\n *\r\n * @param score - score to check\r\n * @returns true if the last entry is negative\r\n */\r\nfunction isLastScoreNegative(score) {\r\n    const last = score[score.length - 1];\r\n    return score.length > 0 && last[last.length - 1] < 0;\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* TokenType.Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* TokenizerState.Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* TokenizerState.Static */) {\r\n            segment.push({\r\n                type: 0 /* TokenType.Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* TokenizerState.Param */ ||\r\n            state === 2 /* TokenizerState.ParamRegExp */ ||\r\n            state === 3 /* TokenizerState.ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* TokenType.Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* TokenizerState.ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* TokenizerState.EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* TokenizerState.Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* TokenizerState.Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* TokenizerState.EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* TokenizerState.Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* TokenizerState.ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* TokenizerState.Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* TokenizerState.ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* TokenizerState.ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* TokenizerState.ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* TokenizerState.Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* TokenizerState.ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent);\r\n        }\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object beforehand, so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist,\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if (mainNormalizedRecord.children) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other aliases (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            // Avoid adding a record that doesn't display anything. This allows passing through records without a component to\r\n            // not be reached and pass through the catch all route\r\n            if ((matcher.record.components &&\r\n                Object.keys(matcher.record.components).length) ||\r\n                matcher.record.name ||\r\n                matcher.record.redirect) {\r\n                insertMatcher(matcher);\r\n            }\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\r\n            // Adding children with empty path should still appear before the parent\r\n            // https://github.com/vuejs/router/issues/1124\r\n            (matcher.record.path !== matchers[i].record.path ||\r\n                !isRecordChildOf(matcher, matchers[i])))\r\n            i++;\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            // warn if the user is passing invalid params so they can debug it better when they get removed\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const invalidParams = Object.keys(location.params || {}).filter(paramName => !matcher.keys.find(k => k.name === paramName));\r\n                if (invalidParams.length) {\r\n                    warn(`Discarded invalid param(s) \"${invalidParams.join('\", \"')}\" when navigating. See https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22 for more details.`);\r\n                }\r\n            }\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), \r\n            // discard any existing params in the current location that do not exist here\r\n            // #1497 this ensures better active/exact matching\r\n            location.params &&\r\n                paramsFromLocation(location.params, matcher.keys.map(k => k.name)));\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || null\r\n            : record.component && { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records, but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\n/**\r\n * A route with a name and a child with an empty path without a name should warn when adding the route\r\n *\r\n * @param mainNormalizedRecord - RouteRecordNormalized\r\n * @param parent - RouteRecordMatcher\r\n */\r\nfunction checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent) {\r\n    if (parent &&\r\n        parent.record.name &&\r\n        !mainNormalizedRecord.name &&\r\n        !mainNormalizedRecord.path) {\r\n        warn(`The route named \"${String(parent.record.name)}\" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" must have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\r\nfunction isRecordChildOf(record, parent) {\r\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving un-encoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query, but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : '');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : '');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router' : '');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'route location' : '');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location' : '');\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false) {\r\n                reject(createRouterError(4 /* ErrorTypes.NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            }\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function') {\r\n                    enterCallbackArray.push(valid);\r\n                }\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        if ((process.env.NODE_ENV !== 'production') && !record.components && !record.children.length) {\r\n            warn(`Record with path \"${record.path}\" is either missing a \"component(s)\"` +\r\n                ` or \"children\" property.`);\r\n        }\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    // cannot be null or undefined because we went into the for loop\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @internal\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\r\n/**\r\n * Ensures a route is loaded, so it can be passed as o prop to `<RouterView>`.\r\n *\r\n * @param route - resolved route to load\r\n */\r\nfunction loadRouteLocation(route) {\r\n    return route.matched.every(record => record.redirect)\r\n        ? Promise.reject(new Error('Cannot load a route that redirects.'))\r\n        : Promise.all(route.matched.map(record => record.components &&\r\n            Promise.all(Object.keys(record.components).reduce((promises, name) => {\r\n                const rawComponent = record.components[name];\r\n                if (typeof rawComponent === 'function' &&\r\n                    !('displayName' in rawComponent)) {\r\n                    promises.push(rawComponent().then(resolved => {\r\n                        if (!resolved)\r\n                            return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\". Ensure you passed a function that returns a promise.`));\r\n                        const resolvedComponent = isESModule(resolved)\r\n                            ? resolved.default\r\n                            : resolved;\r\n                        // replace the function with the resolved component\r\n                        // cannot be null or undefined because we went into the for loop\r\n                        record.components[name] = resolvedComponent;\r\n                        return;\r\n                    }));\r\n                }\r\n                return promises;\r\n            }, [])))).then(() => route);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    /**\r\n     * NOTE: update {@link _RouterLinkI}'s `$slots` type when updating this\r\n     */\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    compatConfig: { MODE: 3 },\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener, so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    // Better compat for @vue/compat users\r\n    // https://github.com/vuejs/router/issues/1315\r\n    compatConfig: { MODE: 3 },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const injectedDepth = inject(viewDepthKey, 0);\r\n        // The depth changes based on empty components option, which allows passthrough routes e.g. routes with children\r\n        // that are used to reuse the `path` property\r\n        const depth = computed(() => {\r\n            let initialDepth = unref(injectedDepth);\r\n            const { matched } = routeToDisplay.value;\r\n            let matchedRoute;\r\n            while ((matchedRoute = matched[initialDepth]) &&\r\n                !matchedRoute.components) {\r\n                initialDepth++;\r\n            }\r\n            return initialDepth;\r\n        });\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);\r\n        provide(viewDepthKey, computed(() => depth.value + 1));\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name, so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[currentName];\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[currentName];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\r\n                isBrowser &&\r\n                component.ref) {\r\n                // TODO: can display if it's an alias, its props\r\n                const info = {\r\n                    depth: depth.value,\r\n                    name: matchedRoute.name,\r\n                    path: matchedRoute.path,\r\n                    meta: matchedRoute.meta,\r\n                };\r\n                const internalInstances = isArray(component.ref)\r\n                    ? component.ref.map(r => r.i)\r\n                    : [component.ref.i];\r\n                internalInstances.forEach(instance => {\r\n                    // @ts-expect-error\r\n                    instance.__vrv_devtools = info;\r\n                });\r\n            }\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\n/**\r\n * Copies a route location and removes any problematic properties that cannot be shown in devtools (e.g. Vue instances).\r\n *\r\n * @param routeLocation - routeLocation to format\r\n * @param tooltip - optional tooltip\r\n * @returns a copy of the routeLocation\r\n */\r\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://router.vuejs.org',\r\n        logo: 'https://router.vuejs.org/logo.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        if (typeof api.now !== 'function') {\r\n            console.warn('[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\r\n        }\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active and display tags on router views\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (componentInstance.__vrv_devtools) {\r\n                const info = componentInstance.__vrv_devtools;\r\n                node.tags.push({\r\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\r\n                    textColor: 0,\r\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\r\n                    backgroundColor: PINK_500,\r\n                });\r\n            }\r\n            // if multiple useLink are used\r\n            if (isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: api.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: api.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: api.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    if (Object.keys(route.record.meta).length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'meta',\r\n            value: route.record.meta,\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: typeof record.redirect === 'string'\r\n                ? `redirect: ${record.redirect}`\r\n                : 'redirects',\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                // @ts-expect-error: the type is never\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${\r\n                // @ts-expect-error: the type is never\r\n                rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher, so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // the matcher might have merged current location params, so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* ErrorTypes.NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                // avoid transferring params if the redirect has a path\r\n                params: 'path' in newTargetLocation ? {} : to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: typeof shouldRedirect === 'object'\r\n                    ? assign({}, data, shouldRedirect.state)\r\n                    : data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* ErrorTypes.NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? // navigation redirects still mark the router as ready\r\n                isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)\r\n                    ? error\r\n                    : markAsReady(error) // also returns the error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign({\r\n                        // preserve an existing replacement but allow the redirect to override it\r\n                        replace,\r\n                    }, locationAsObject(failure.to), {\r\n                        state: typeof failure.to === 'object'\r\n                            ? assign({}, data, failure.to.state)\r\n                            : data,\r\n                        force,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        // avoid setting up listeners twice due to an invalid first navigation\r\n        if (removeHistoryListener)\r\n            return;\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            if (!router.listening)\r\n                return;\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is no guarantee for\r\n                    // it to work on every browser. So instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing, but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ |\r\n                            16 /* ErrorTypes.NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta) {\r\n                    routerHistory.go(-info.delta, false);\r\n                }\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta &&\r\n                        // a new navigation has been triggered, so we do not want to revert, that will change the current history\r\n                        // entry while a different route is displayed\r\n                        !isNavigationFailure(failure, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 16 /* ErrorTypes.NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    function markAsReady(err) {\r\n        if (!ready) {\r\n            // still not ready if an error happened\r\n            ready = !err;\r\n            setupListeners();\r\n            readyHandlers\r\n                .list()\r\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n            readyHandlers.reset();\r\n        }\r\n        return err;\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        listening: true,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    removeHistoryListener = null;\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            // TODO: this probably needs to be updated so it can be used by vue-termui\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, loadRouteLocation, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"],"names":["isCallable","tryToString","$TypeError","TypeError","module","exports","argument","$String","String","isPrototypeOf","it","Prototype","isObject","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","length","index","includes","indexOf","DESCRIPTORS","isArray","getOwnPropertyDescriptor","Object","SILENT_ON_NON_WRITABLE_LENGTH_SET","undefined","this","defineProperty","writable","error","uncurryThis","toString","stringSlice","slice","TO_STRING_TAG_SUPPORT","classofRaw","wellKnownSymbol","TO_STRING_TAG","$Object","CORRECT_ARGUMENTS","arguments","tryGet","key","tag","result","callee","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","exceptions","keys","f","i","createPropertyDescriptor","object","bitmap","enumerable","configurable","makeBuiltIn","defineGlobalProperty","options","simple","name","global","unsafe","nonConfigurable","nonWritable","P","fails","get","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","MAX_SAFE_INTEGER","IndexSizeError","s","c","m","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","getBuiltIn","match","version","userAgent","process","Deno","versions","v8","split","$Error","Error","replace","TEST","arg","stack","V8_OR_CHAKRA_STACK_ENTRY","IS_V8_OR_CHAKRA_STACK","test","dropEntries","prepareStackTrace","createNonEnumerableProperty","defineBuiltIn","copyConstructorProperties","isForced","FORCED","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","exec","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","uncurryThisWithBind","fn","aFunction","namespace","method","aCallable","isNullOrUndefined","V","func","check","Math","globalThis","window","self","g","toObject","a","classof","propertyIsEnumerable","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","store","functionToString","inspectSource","set","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","enforce","getterFor","TYPE","state","type","metadata","facade","STATE","Array","$documentAll","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","toLowerCase","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","CONFIGURABLE_LENGTH","TEMPLATE","getter","setter","arity","join","ceil","floor","trunc","x","n","$default","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","enumBugKeys","concat","getOwnPropertyNames","getOwnPropertySymbols","push","names","$propertyIsEnumerable","NASHORN_BUG","aPossiblePrototype","CORRECT_SETTER","proto","__proto__","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","uid","SHARED","IS_PURE","mode","copyright","license","V8_VERSION","symbol","Symbol","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","symbolFor","createWellKnownSymbol","withoutSetter","description","$","setArrayLength","doesNotExceedSafeInteger","INCORRECT_TO_LENGTH","SILENT_ON_NON_WRITABLE_LENGTH","item","len","argCount","deletePropertyOrThrow","INCORRECT_RESULT","unshift","k","to","j","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","DOM_EXCEPTION","NativeDOMException","$DOMException","DOMExceptionPrototype","argumentsLength","message","that","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","BUGGY_DESCRIPTOR","FORCED_CONSTRUCTOR","DOMException","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","constant","constantName","activeEffectScope","EffectScope","detached","active","effects","cleanups","parent","scopes","run","currentEffectScope","on","off","stop","fromParent","l","last","pop","effectScope","recordEffectScope","effect","scope","createDep","dep","Set","w","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","delete","targetMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","lastShouldTrack","shouldTrack","cleanupEffect","deferStop","onStop","trackStack","pauseTracking","resetTracking","track","depsMap","Map","eventInfo","trackEffects","debuggerEventExtraInfo","add","trigger","newValue","oldValue","oldTarget","values","newLength","toNumber","forEach","isIntegerKey","isMap","triggerEffects","computed","triggerEffect","allowRecurse","isNonTrackableKeys","makeMap","builtInSymbols","filter","map","createGetter","shallowGet","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","arr","toRaw","res","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","shallowSet","isShallow","hadKey","Number","hasChanged","deleteProperty","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","extend","toShallow","getProto","v","getPrototypeOf","get$1","rawTarget","rawKey","wrap","toReadonly","toReactive","has$1","size","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","toRawType","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","raw","markRaw","def","trackRefValue","ref","triggerRefValue","newVal","r","__v_isRef","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","_a","ComputedRefImpl","_setter","isSSR","_dirty","_cacheable","getterOrOptions","debugOptions","onlyGetter","isFunction","NOOP","cRef","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","isPromise","catch","throwInDev","contextVNode","vnode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","logError","console","isFlushing","isFlushPending","queue","flushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","nextTick","p","then","findInsertionIndex","start","end","middle","middleJobId","getId","queueJob","job","splice","queueFlush","flushJobs","invalidateJob","queuePostFlushCb","cb","flushPreFlushCbs","seen","pre","flushPostFlushCbs","deduped","sort","b","Infinity","comparator","diff","emit$1","event","rawArgs","isUnmounted","props","EMPTY_OBJ","isModelListener","startsWith","modelArg","modifiersKey","trim","isString","handlerName","handler","toHandlerKey","camelize","hyphenate","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","isOn","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","emit","render","renderCache","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","blockStack","createVNode","Comment","root","some","filterModelListeners","cloneVNode","dirs","transition","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","children","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","queueEffectWithSuspense","suspense","pendingBranch","provide","currentInstance","provides","parentProvides","create","inject","defaultValue","treatDefaultAsFactory","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","flush","onTrack","onTrigger","cleanup","forceTrigger","isMultiSource","isShallow$1","traverse","onCleanup","baseGetter","ssrCleanup","isInSSRComponentSetup","useSSRContext","__watcherHandles","fill","queuePostRenderEffect","unwatch","remove","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","isSet","isPlainObject","useTransitionState","isMounted","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","BaseTransitionImpl","appear","Boolean","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","default","getTransitionRawChildren","child","hasFound","rawProps","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","hook","callAsyncHook","every","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","clone","isKeepAlive","ssContent","ssFallback","keepComment","parentKey","ret","keyedFragmentCount","Fragment","defineComponent","isAsyncWrapper","__asyncLoader","__isKeepAlive","RegExp","matches","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","isDeactivated","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","resetShapeFlag","getInnerChild","prepend","__weh","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onUpdated","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","invokeDirectiveHook","bindings","oldBindings","binding","dir","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","capitalize","registry","renderList","renderItem","from","renderSlot","fallback","noSlotted","isCE","slot","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","_","scopeId","slotScopeIds","vnodes","isVNode","getPublicInstance","isStatefulComponent","getExposeProxy","publicPropertiesMap","$el","$data","$props","$attrs","$slots","$refs","refs","$parent","$root","$emit","$options","resolveMergedOptions","$forceUpdate","$nextTick","$watch","hasSetupBinding","__isScriptSetup","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","__cssModules","applyOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","filters","checkDuplicateProperties","resolveInjections","unwrapInjectedRef","methodHandler","opt","createWatcher","registerLifecycleHook","register","_hook","exposed","unwrapRef","normalizeInject","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","mergeOptions","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","initProps","isStateful","InternalObjectKey","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","isReservedProp","camelKey","castValues","isAbsent","hasDefault","normalizePropsOptions","propsCache","extendProps","EMPTY_ARR","normalizedKey","validatePropName","prop","assign","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","findIndex","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","createAppContext","app","isNativeTag","NO","performance","warnHandler","compilerOptions","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","unmount","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","owner","oldRef","_isString","_isRef","doSet","existing","initFeatureFlags","createRenderer","baseCreateRenderer","createHydrationFns","getGlobalThis","__VUE__","insert","hostInsert","hostRemove","patchProp","hostPatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","dynamicChildren","getNextHostNode","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","parentVNode","cloneIfMounted","oldProps","newProps","toggleRecurse","onVnodeBeforeUpdate","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","class","style","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","componentUpdateFn","bu","u","originNext","invokeArrayFns","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","performLeave","doRemove","deactivate","shouldInvokeDirs","shouldInvokeVnodeHook","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","allowed","ch1","ch2","arrI","isTeleport","__isTeleport","currentBlock","disableTracking","closeBlock","isBlockTreeEnabled","setupBlock","createElementBlock","createBaseVNode","__v_isVNode","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","__v_skip","targetAnchor","staticCount","normalizeChildren","_createVNode","cloned","isClassComponent","__vccOpts","guardReactiveProps","klass","normalizeClass","normalizeStyle","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","memo","slotFlag","toMerge","incoming","emptyAppContext","uid$1","exposeProxy","setupContext","bc","da","rtg","rtc","sp","ce","compile","installWithProxy","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","e","finishComponentSetup","__ssrInlineRender","ssrRender","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","createAttrsProxy","includeInferred","displayName","__name","computed$1","propsOrChildren","ssrContextKey","svgNS","doc","templateContainer","nodeOps","insertBefore","removeChild","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","content","before","previousSibling","lastChild","cloneNode","innerHTML","wrapper","firstChild","appendChild","patchClass","transitionClasses","_vtc","removeAttribute","className","patchStyle","isCssString","setStyle","currentDisplay","display","cssText","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","isSpecialBooleanAttr","includeBooleanAttr","patchDOMProp","tagName","needRemove","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","cachedNow","getNow","Date","now","initialValue","_vts","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","HTMLElement","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","_isLeaving","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","rendererOptions","ensureRenderer","containerOrSelector","normalizeContainer","SVGElement","Element","str","expectsLowerCase","list","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","parseStringStyle","listDelimiterRE","propertyDelimiterRE","styleCommentRE","tmp","specialBooleanAttrs","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","objectToString","JSON","stringify","replacer","_key","entries","reduce","onRE","toTypeString","parseInt","cacheStringFunction","hit","camelizeRE","toUpperCase","hyphenateRE","charAt","fns","parseFloat","isNaN","_globalThis","FormData","_super","hasNext","hasCompleted","__extends","AsyncSubject","subscriber","hasError","thrownError","Subscription_1","EMPTY","complete","_subscribe","Subject_1","BehaviorSubject","getValue","subscription","closed","ObjectUnsubscribedError_1","outerValue","outerIndex","InnerSubscriber","notifyNext","notifyError","unsubscribe","notifyComplete","Subscriber_1","kind","hasValue","Notification","observer","nextOrObserver","observe","do","Observable_1","of","throw","empty","undefinedValueNotification","completeNotification","subscribe","_isScalar","Observable","operator","observable","observerOrNext","sink","toSubscriber_1","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","PromiseCtor","root_1","Rx","reject","_this","observable_1","operations","pipe_1","OuterSubscriber","innerValue","innerIndex","innerSub","destination","bufferSize","windowTime","POSITIVE_INFINITY","_events","_bufferSize","_windowTime","ReplaySubject","_getNow","ReplayEvent","_trimBufferThenGetEvents","isStopped","observers","SubjectSubscription_1","observeOn_1","queue_1","eventsCount","spliceCount","time","require","_operators","Scheduler","asap","animationFrame","async","rxSubscriber","SchedulerAction","work","delay","schedule","Subject","rxSubscriber_1","SubjectSubscriber","subject","AnonymousSubject","copy","SubjectSubscription","subscriberIndex","destinationOrNext","Observer_1","isTrustedSubscriber","trustedSubscriber","SafeSubscriber","Subscriber","_next","_error","_complete","_parent","_parents","_parentSubscriber","isFunction_1","__tryOrSetError","__tryOrUnsub","wrappedComplete","_subscriptions","_unsubscribe","Subscription","errors","hasErrors","trial","tryCatch_1","errorObject_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","isArray_1","sub","isObject_1","teardown","_addParent","subscriptions","subscriptionIndex","errs","bindCallback","bindCallback_1","bindNodeCallback","bindNodeCallback_1","combineLatest","combineLatest_1","concat_1","defer","defer_1","ajax","ajax_1","webSocket","webSocket_1","empty_1","forkJoin","forkJoin_1","from_1","fromEvent","fromEvent_1","fromEventPattern","fromEventPattern_1","fromPromise","fromPromise_1","generate","generate_1","if","if_1","interval","interval_1","merge","merge_1","never","never_1","of_1","onErrorResumeNext","onErrorResumeNext_1","pairs","pairs_1","race","race_1","range","range_1","throw_1","timer","timer_1","using","using_1","zip","zip_1","audit","audit_1","auditTime","auditTime_1","buffer","buffer_1","bufferCount","bufferCount_1","bufferTime","bufferTime_1","bufferToggle","bufferToggle_1","bufferWhen","bufferWhen_1","catch_1","_catch","combineAll","combineAll_1","concatAll","concatAll_1","concatMap","concatMap_1","concatMapTo","concatMapTo_1","count","count_1","debounce","debounce_1","debounceTime","debounceTime_1","defaultIfEmpty","defaultIfEmpty_1","delay_1","delayWhen","delayWhen_1","dematerialize","dematerialize_1","distinct","distinct_1","distinctUntilChanged","distinctUntilChanged_1","distinctUntilKeyChanged","distinctUntilKeyChanged_1","do_1","_do","elementAt","elementAt_1","every_1","exhaust","exhaust_1","exhaustMap","exhaustMap_1","expand","expand_1","filter_1","finally","finally_1","_finally","find","find_1","findIndex_1","first","first_1","groupBy","groupBy_1","ignoreElements","ignoreElements_1","isEmpty","isEmpty_1","last_1","let","let_1","letBind","map_1","mapTo","mapTo_1","materialize","materialize_1","max_1","mergeAll","mergeAll_1","mergeMap","mergeMap_1","flatMap","flatMapTo","mergeMapTo_1","mergeMapTo","mergeScan","mergeScan_1","min_1","multicast","multicast_1","observeOn","pairwise","pairwise_1","partition","partition_1","pluck","pluck_1","publish","publish_1","publishBehavior","publishBehavior_1","publishLast","publishLast_1","publishReplay","publishReplay_1","reduce_1","repeat","repeat_1","repeatWhen","repeatWhen_1","retry","retry_1","retryWhen","retryWhen_1","sample","sample_1","sampleTime","sampleTime_1","scan","scan_1","sequenceEqual","sequenceEqual_1","share","share_1","shareReplay","shareReplay_1","single","single_1","skip","skip_1","skipLast","skipLast_1","skipUntil","skipUntil_1","skipWhile","skipWhile_1","startWith","startWith_1","subscribeOn","subscribeOn_1","switch","switch_1","_switch","switchMap","switchMap_1","switchMapTo","switchMapTo_1","take","take_1","takeLast","takeLast_1","takeUntil","takeUntil_1","takeWhile","takeWhile_1","throttle","throttle_1","throttleTime","throttleTime_1","timeInterval","timeInterval_1","timeout_1","timeoutWith","timeoutWith_1","timestamp","timestamp_1","toArray","toArray_1","window_1","windowCount","windowCount_1","windowTime_1","windowToggle","windowToggle_1","windowWhen","windowWhen_1","withLatestFrom","withLatestFrom_1","zipAll","zipAll_1","arrayLike","ArrayLikeObservable","EmptyObservable_1","ScalarObservable_1","dispatch","array","ArrayObservable","isScheduler_1","callbackFunc","BoundCallbackObservable","AsyncSubject_1","handlerFn","innerArgs","result_1","result_2","dispatchError","dispatchNext","BoundNodeCallbackObservable","shift","subjectFactory","_refCount","_isComplete","ConnectableObservable","getSubject","_subject","connection","_connection","ConnectableSubscriber","refCount_1","connectableProto","connect","refCount","connectable","RefCountOperator","refCounter","RefCountSubscriber","sharedConnection","observableFactory","DeferObservable","DeferSubscriber","factory","tryDefer","_callFactory","subscribeToResult_1","OuterSubscriber_1","EmptyObservable","ErrorObservable","sources","resultSelector","ForkJoinObservable","ForkJoinSubscriber","completed","haveValues","total","innerSubscription","_hasValue","isNodeStyleEventEmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","isNodeList","isHTMLCollection","isEventTarget","eventName","FromEventObservable","setupSubscription","source_1","source_2","source_3","addHandler","removeHandler","FromEventPatternObservable","_callSelector","retValue","_callAddHandler","errorSubscriber","ish","FromObservable","ArrayObservable_1","isPromise_1","PromiseObservable_1","iterator_1","IteratorObservable_1","isArrayLike_1","ArrayLikeObservable_1","selfSelector","initialState","condition","iterate","GenerateObservable","initialStateOrOptions","resultSelectorOrObservable","conditionResult","needIterate","thenSource","elseSource","IfObservable","IfSubscriber","tryIf","period","isNumeric_1","async_1","IntervalObservable","getIterator","IteratorObservable","return","idx","StringIterator","ArrayIterator","maxSafeInteger","pow","numberIsFinite","sign","abs","isFinite","valueAsNumber","NeverObservable","noop_1","PairsObservable","promise","PromiseObservable","_count","RangeObservable","ScalarObservable","delayTime","asap_1","SubscribeOnObservable","dueTime","isDate_1","TimerObservable","initialDelay","action","resourceFactory","UsingObservable","resource","UsingSubscriber","tryUse","BoundCallbackObservable_1","BoundNodeCallbackObservable_1","observables","project","lift","DeferObservable_1","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ActiveXObject","url","headers","AjaxObservable","mapResponse","response","responseType","urlOrRequest","request","createXHR","crossDomain","withCredentials","AjaxSubscriber","ajaxGet","post","ajaxPost","ajaxDelete","put","ajaxPut","ajaxPatch","getJSON","ajaxGetJSON","serializeBody","send","xhr","AjaxResponse","_b","user","password","setupEvents","open","setHeaders","contentType","splitIndex","substring","encodeURI","setRequestHeader","progressSubscriber","xhrTimeout","AjaxTimeoutError","ontimeout","upload","xhrProgress_1","xhrError_1","onprogress","AjaxError","onerror","xhrReadyStateChange","readyState","status_1","status","responseText","onreadystatechange","abort","originalEvent","parseXhrResponse","parse","responseXML","urlConfigOrSource","WebSocketCtor","WebSocket","_output","assign_1","ReplaySubject_1","WebSocketSubject","sock","socket","subMsg","unsubMsg","messageFilter","protocol","binaryType","close","onopen","openObserver","closingObserver","code","reason","_resetState","onclose","closeObserver","wasClean","onmessage","_connectSocket","AjaxObservable_1","WebSocketSubject_1","ForkJoinObservable_1","FromObservable_1","FromEventObservable_1","FromEventPatternObservable_1","GenerateObservable_1","IfObservable_1","IntervalObservable_1","concurrent","NeverObservable_1","PairsObservable_1","RaceOperator","RaceSubscriber","hasFirst","RangeObservable_1","ErrorObservable_1","TimerObservable_1","UsingObservable_1","durationSelector","closingNotifier","startBufferEvery","bufferTimeSpan","bufferCreationInterval","maxBufferSize","openings","closingSelector","catchError_1","innerObservable","predicate","delayDurationSelector","subscriptionDelay","keySelector","flushes","compare","tap_1","finalize_1","elementSelector","subjectSelector","comparer","accumulator","seed","subjectOrSubjectFactory","nextSources","properties","selectorOrScheduler","notifier","compareTo","comparor","switchAll_1","due","withObservable","windowBoundaries","windowSize","startWindowEvery","windowTimeSpan","windowCreationInterval","maxWindowSize","AuditOperator","AuditSubscriber","throttled","clearThrottle","BufferOperator","BufferSubscriber","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","BufferTimeOperator","BufferTimeSubscriber","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","Context","spliceIndex","prevContext","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","CatchOperator","caught","CatchSubscriber","err2","_unsubscribeAndRecycle","none","CombineLatestOperator","CombineLatestSubscriber","toRespond","unused","oldVal","_tryProject","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","durationSubscription","_tryNext","emitValue","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","absoluteDelay","delayFor","DelayOperator","DelaySubscriber","errored","notification","DelayMessage","_schedule","scheduleNotification","Notification_1","createNext","createComplete","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","DistinctOperator","DistinctSubscriber","Set_1","_useKeySelector","_finalizeNext","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","ElementAtOperator","ArgumentOutOfRangeError_1","ElementAtSubscriber","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","SwitchFirstMapOperator","SwitchFirstMapSubscriber","tryNext","trySelectResult","ExpandOperator","ExpandSubscriber","subscribeToProjection","FilterOperator","FilterSubscriber","FinallyOperator","FinallySubscriber","FindValueOperator","yieldIndex","FindValueSubscriber","FirstOperator","FirstSubscriber","_emitted","_emit","_tryResultSelector","_emitFinal","EmptyError_1","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","FastMap_1","Map_1","element","group","groupedObservable","GroupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","LastOperator","LastSubscriber","MapOperator","MapSubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","createError","identity_1","MergeMapOperator","MergeMapSubscriber","_innerSub","_notifyResultSelector","MergeMapToOperator","MergeMapToSubscriber","MergeScanOperator","MergeScanSubscriber","acc","MulticastOperator","ConnectableObservable_1","ObserveOnOperator","ObserveOnSubscriber","ObserveOnMessage","scheduleMessage","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseOperator","PairwiseSubscriber","hasPrev","not_1","plucker","mapper","currentProp","BehaviorSubject_1","RepeatOperator","RepeatSubscriber","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","hasSeed","ScanOperator","ScanSubscriber","_seed","SequenceEqualOperator","SequenceEqualSubscriber","_oneComplete","SequenceEqualCompareToSubscriber","checkValues","areEqual","nextB","shareSubjectFactory","shareReplayOperator","isComplete","SingleOperator","SingleSubscriber","seenValue","singleValue","applySingleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_ring","skipCount","currentIndex","ring","SkipUntilOperator","SkipUntilSubscriber","isInnerStopped","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","SubscribeOnOperator","SubscribeOnObservable_1","SwitchMapOperator","SwitchMapSubscriber","_tryNotifyNext","SwitchMapToOperator","SwitchMapToSubscriber","inner","tryResultSelector","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","TakeUntilOperator","TakeUntilSubscriber","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","DoOperator","DoSubscriber","safeSubscriber","ThrottleOperator","leading","trailing","ThrottleSubscriber","_leading","_trailing","_hasTrailingValue","_trailingValue","tryDurationSelector","_sendTrailing","ThrottleTimeOperator","ThrottleTimeSubscriber","TimeIntervalOperator","TimeIntervalSubscriber","lastTime","span","TimeInterval","absoluteTimeout","waitFor","TimeoutOperator","TimeoutError_1","errorInstance","TimeoutSubscriber","scheduleTimeout","dispatchTimeout","TimeoutWithOperator","TimeoutWithSubscriber","Timestamp","toArrayReducer","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","WindowCountOperator","WindowCountSubscriber","windows","WindowTimeOperator","WindowTimeSubscriber","_numberOfNextedValues","CountedSubject","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","window_2","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","zipStatic","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","shouldComplete","nextResult","notifyInactive","checkIterators","Action","AnimationFrameAction","requestAsyncId","actions","scheduled","AnimationFrame_1","recycleAsyncId","cancelAnimationFrame","AsyncAction_1","AnimationFrameScheduler","execute","AsyncScheduler_1","AsapAction","Immediate_1","setImmediate","clearImmediate","AsapScheduler","pending","AsyncAction","setInterval","clearInterval","_execute","errorValue","Action_1","AsyncScheduler","Scheduler_1","QueueAction","maxFrames","frame","VirtualTimeScheduler","VirtualAction","sortActions","AnimationFrameScheduler_1","AnimationFrameAction_1","AsapScheduler_1","AsapAction_1","QueueScheduler_1","QueueAction_1","symbolIteratorPonyfill","$$observable","getSymbolObservable","for","messages","logSubscribedFrame","logUnsubscribedFrame","scheduleMessages","ColdObservable","messagesLength","applyMixins_1","SubscriptionLoggable_1","HotObservable","subscribedFrame","unsubscribedFrame","SubscriptionLoggable","SubscriptionLog_1","subscriptionLogs","oldSubscriptionLog","defaultMaxFrame","assertDeepEqual","VirtualTimeScheduler_1","hotObservables","coldObservables","flushTests","TestScheduler","marbles","frameTimeFactor","parseMarbles","cold","ColdObservable_1","HotObservable_1","outerFrame","unsubscriptionMarbles","actual","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","materializeInnerObservable","toBe","expected","actualSubscriptionLogs","marblesArray","readyFlushTests","groupStart","subscriptionFrame","materializeInnerObservables","testMessages","subIndex","frameOffset","mozRequestAnimationFrame","mozCancelAnimationFrame","webkitRequestAnimationFrame","webkitCancelAnimationFrame","msRequestAnimationFrame","msCancelAnimationFrame","oRequestAnimationFrame","oCancelAnimationFrame","clearTimeout","RequestAnimationFrameDefinition","FastMap","nextHandle","tasksByHandle","currentlyRunningATask","canUseProcessNextTick","createProcessNextTickSetImmediate","canUsePostMessage","createPostMessageSetImmediate","canUseMessageChannel","createMessageChannelSetImmediate","canUseReadyStateChange","createReadyStateChangeSetImmediate","createSetTimeoutSetImmediate","ci","handle","ImmediateDefinition","identify","MessageChannel","postMessage","importScripts","postMessageIsAsynchronous_1","oldOnMessage","partiallyApplied","addFromSetImmediateArguments","runIfPresent","messagePrefix","onGlobalMessage","globalMessageHandler","task","channel","port1","port2","html","documentElement","script","MapPolyfill","_values","_keys","MinimalSet","minimalSetImpl","derivedCtor","baseCtors","baseCtor","propertyKeys","len2","name_1","assignImpl","getAssign","pred","notPred","pipeFromArray","__window","__self","WorkerGlobalScope","__global","_root","outerSubscriber","InnerSubscriber_1","obs","msg","tryCatchTarget","tryCatcher","Getter","createBindingHelper","mapState","mapGetters","mapActions","Mutation","mapMutations","bindTo","mapFn","makeDecorator","createDecorator","componentOptions","mapObject","helper","extractNamespace","_classCallCheck","Constructor","_defineProperties","_createClass","protoProps","staticProps","_defineProperty","enumerableOnly","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","_isNativeReflectConstruct","construct","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","iter","minLen","arr2","defineGetter","defineProxy","getSuper","Ctor","superProto","getOwn","VueImpl","_this$__h","__h","Props","propsMeta","meta","PropsMixin","_this2","__b","Vue","__c","_promise","dataKeys","plainData","__s","decorators","injections","Options","__o","__d","sfc","getDevtoolsGlobalHook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","navigator","isProxyAvailable","HOOK_SETUP","HOOK_PLUGIN_SETTINGS_SET","supported","perf","isPerformanceSupported","perf_hooks","ApiProxy","targetQueue","onQueue","defaultSettings","settings","localSettingsSaveId","currentSettings","localStorage","getItem","fallbacks","getSettings","setSettings","setItem","pluginId","proxiedOn","_target","proxiedTarget","setupDevtoolsPlugin","pluginDescriptor","setupFn","enableProxy","enableEarlyProxy","__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__","__VUE_DEVTOOLS_PLUGINS__","storeKey","forEachValue","partial","genericSubscribe","subs","resetStore","hot","_actions","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","resetStoreState","oldState","_state","oldScope","_scope","getters","_makeLocalGettersCache","wrappedGetters","computedObj","computedCache","strict","enableStrictMode","_withCommit","rootState","isRoot","getNamespace","namespaced","parentState","getNestedState","moduleName","local","makeLocalContext","forEachMutation","mutation","namespacedType","registerMutation","forEachAction","registerAction","forEachGetter","registerGetter","forEachChild","noNamespace","_type","_payload","_options","unifyObjectStyle","payload","commit","makeLocalGetters","gettersProxy","splitPos","localType","entry","rootGetters","_devtoolHook","rawGetter","LABEL_VUEX_BINDINGS","MUTATIONS_LAYER_ID","ACTIONS_LAYER_ID","INSPECTOR_ID","actionId","addDevtools","label","homepage","logo","packageName","componentStateTypes","api","addTimelineLayer","color","COLOR_LIME_500","addInspector","icon","treeFilterPlaceholder","getInspectorTree","inspectorId","nodes","flattenStoreForInspectorTree","rootNodes","formatStoreForInspectorTree","getInspectorState","modulePath","nodeId","formatStoreForInspectorState","getStoreModule","editInspectorState","notifyComponentUpdate","sendInspectorTree","sendInspectorState","addTimelineEvent","layerId","title","subscribeAction","_id","_time","groupId","subtitle","after","_custom","tooltip","COLOR_DARK","COLOR_WHITE","TAG_NAMESPACED","textColor","backgroundColor","extractNameFromPath","tags","_children","endsWith","gettersKeys","storeState","editable","tree","transformPathsToObjectTree","canThrow","leafKey","abstract","moduleMap","Module","rawModule","runtime","_rawModule","rawState","prototypeAccessors$1","addChild","getChild","hasChild","mutations","ModuleCollection","rawRootModule","targetModule","newModule","modules","this$1$1","rawChildModule","unregister","isRegistered","createStore","Store","plugins","devtools","_committing","_actionSubscribers","_subscribers","_devtools","prototypeAccessors","injectKey","$store","useDevtools","replaceState","registerModule","preserveState","unregisterModule","hasModule","hotUpdate","newOptions","committing","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","isValidMap","_typeof","_toPrimitive","hint","prim","_toPropertyKey","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isBuffer","isArrayBuffer","isArrayBufferView","ArrayBuffer","isView","isNumber","toStringTag","isFile","isBlob","isFileList","isStream","pipe","isFormData","isURLSearchParams","allOwnKeys","findKey","_global","isContextDefined","caseless","assignValue","targetKey","stripBOM","charCodeAt","inherits","superConstructor","descriptors","toFlatObject","destObj","propFilter","searchString","position","lastIndex","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","pair","matchAll","regExp","isHTMLForm","toCamelCase","p1","p2","isRegExp","reduceDescriptors","reducer","reducedDescriptors","freezeMethods","toObjectSet","arrayOrString","delimiter","define","noop","toFiniteNumber","toJSONObject","visit","reducedValue","hasOwnProp","AxiosError","captureStackTrace","utils","toJSON","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","token","isFlatArray","predicates","isSpecCompliant","append","toFormData","formData","envFormData","metaTokens","indexes","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","toISOString","Buffer","exposedHelpers","build","encode","charMap","encodeURIComponent","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","serializeFn","serialize","serializedParams","hashmarkIndex","InterceptorManager","handlers","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","URLSearchParams","isStandardBrowserEnv","product","isStandardBrowserWebWorkerEnv","isBrowser","classes","protocols","toURLEncodedForm","platform","helpers","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","DEFAULT_CONTENT_TYPE","stringifySafely","parser","defaults","transitional","transitionalDefaults","adapter","transformRequest","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","env","transformResponse","JSONRequested","strictJSONParsing","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","rawHeaders","parsed","line","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","formatHeader","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","parseHeaders","matcher","deleted","deleteHeader","format","targets","asStrings","static","accessors","defineAccessor","accessor","transformData","isCancel","__CANCEL__","CanceledError","settle","write","expires","domain","secure","cookie","toGMTString","read","decodeURIComponent","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","msie","urlParsingNode","originURL","resolveURL","href","host","search","hash","hostname","port","pathname","location","requestURL","parseProtocol","speedometer","samplesCount","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","lengthComputable","progressBytes","rate","inRange","progress","estimated","isXHRAdapterSupported","requestData","requestHeaders","onCanceled","cancelToken","signal","auth","username","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseData","statusText","paramsSerializer","responseURL","onabort","timeoutErrorMessage","xsrfValue","isURLSameOrigin","cookies","onDownloadProgress","onUploadProgress","cancel","aborted","knownAdapters","http","httpAdapter","xhrAdapter","getAdapter","adapters","nameOrAdapter","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","assertOptions","schema","allowUnknown","validator","formatMessage","desc","opts","warn","Axios","instanceConfig","interceptors","configOrUrl","contextHeaders","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","spread","isAxiosError","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","axios","Cancel","promises","formToJSON","isESModule","__esModule","applyToParams","newParams","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","currentLocation","query","hashPos","searchPos","resolveRelativePath","stringifyURL","stringifyQuery","stripBase","isSameRouteLocation","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","fromSegments","toSegments","toPosition","segment","NavigationType","NavigationDirection","normalizeBase","baseEl","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","offset","docRect","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","scrollTo","getScrollKey","delta","history","scrollPositions","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","createBaseLocation","createCurrentLocation","slicePos","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","direction","forward","back","unknown","pauseListeners","listen","beforeUnloadListener","destroy","buildState","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","REGEX_CHARS_RE","tokensToParser","extraOptions","score","segmentScores","tokenIndex","subSegmentScore","repeatable","optional","regexp","re","subPattern","avoidDuplicatedSlash","param","compareScoreArray","comparePathParserScore","aScore","bScore","isLastScoreNegative","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","previousState","finalizeSegment","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","redirect","insertMatcher","matcherRef","getRoutes","isRecordChildOf","paramsFromLocation","parentMatcher","mergeMetaFields","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","propsObject","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","normalizeQuery","normalizedQuery","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","useCallbacks","reset","guardToPromiseFn","guard","enterCallbackArray","valid","guardReturn","guardCall","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","componentPromise","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","RouterLinkImpl","compatConfig","MODE","required","activeClass","exactActiveClass","custom","ariaCurrentValue","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","outer","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","routeToDisplay","injectedDepth","depth","initialDepth","matchedRoute","matchedRouteRef","viewRef","oldInstance","oldName","currentName","ViewComponent","routePropsOption","routeProps","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","targetParams","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","markAsReady","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","removeHistoryListener","setupListeners","_from","info","listening","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","$router","reactiveRoute","unmountApp","recordFrom","recordTo"],"sourceRoot":""}